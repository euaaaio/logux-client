{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-d9b0599a83fb37e3.js","node_modules/nanoevents/index.js","node_modules/@logux/core/log/index.js","node_modules/@logux/core/is-first-older/index.js","node_modules/@logux/core/ws-connection/index.js","node_modules/@logux/core/memory-store/index.js","node_modules/@logux/core/logux-error/index.js","node_modules/@logux/core/connect/index.js","node_modules/@logux/core/base-node/index.js","node_modules/@logux/core/sync/index.js","node_modules/@logux/core/ping/index.js","node_modules/@logux/core/debug/index.js","node_modules/@logux/core/error/index.js","node_modules/@logux/core/headers/index.js","node_modules/@logux/core/client-node/index.js","node_modules/@logux/core/local-pair/index.js","node_modules/@logux/core/reconnect/index.js","node_modules/@logux/core/parse-id/index.js","status/index.js","badge/index.js","node_modules/nanoid/index.browser.js","logux-undo-error/index.js","client/index.js","cross-tab-client/index.js","confirm/index.js","log/index.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-18a80722263abb40.js","node_modules/@parcel/runtime-js/lib/runtime-f64835876505b6b9.js","node_modules/@parcel/runtime-js/lib/runtime-60495cde73d05c63.js","node_modules/@parcel/runtime-js/lib/runtime-be2a04576e5243bd.js","badge/styles/index.js","node_modules/@parcel/runtime-js/lib/runtime-7b0027d6a3ec6988.js","node_modules/@parcel/runtime-js/lib/runtime-a3107fd2ac196098.js","node_modules/@parcel/runtime-js/lib/runtime-1171cbd6a91fdf93.js","test/demo/index.js","track/index.js","attention/index.js","favicon/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"jGf7V\\\":\\\"index.cc7985fb.js\\\",\\\"9KQjq\\\":\\\"refresh.f7f11930.svg\\\",\\\"dVjUq\\\":\\\"success.5585cf5f.svg\\\",\\\"gWDF8\\\":\\\"offline.c7da2f9d.svg\\\",\\\"6EP5R\\\":\\\"error.8319e405.svg\\\",\\\"d2JJm\\\":\\\"offline.203f1963.png\\\",\\\"2YULu\\\":\\\"normal.60452f34.png\\\",\\\"ht41N\\\":\\\"error.a2ca88ad.png\\\"}\"));","export let createNanoEvents = () => ({\n  events: {},\n  emit(event, ...args) {\n    ;(this.events[event] || []).forEach(i => i(...args))\n  },\n  on(event, cb) {\n    ;(this.events[event] = this.events[event] || []).push(cb)\n    return () =>\n      (this.events[event] = (this.events[event] || []).filter(i => i !== cb))\n  }\n})\n","import { createNanoEvents } from 'nanoevents'\n\nexport function actionEvents(emitter, event, action, meta) {\n  if (action.id) {\n    emitter.emit(`${event}-${action.type}-${action.id}`, action, meta)\n  }\n  emitter.emit(`${event}-${action.type}-`, action, meta)\n  emitter.emit(event, action, meta)\n}\n\nexport class Log {\n  constructor(opts = {}) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof opts.nodeId === 'undefined') {\n        throw new Error('Expected node ID')\n      }\n      if (typeof opts.store !== 'object') {\n        throw new Error('Expected store')\n      }\n      if (opts.nodeId.includes(' ')) {\n        throw new Error('Space is prohibited in node ID')\n      }\n    }\n\n    this.nodeId = opts.nodeId\n\n    this.lastTime = 0\n    this.sequence = 0\n\n    this.store = opts.store\n\n    this.emitter = createNanoEvents()\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  type(type, listener, opts = {}) {\n    let event = opts.event || 'add'\n    let id = opts.id || ''\n    return this.emitter.on(`${event}-${type}-${id}`, listener)\n  }\n\n  async add(action, meta = {}) {\n    if (typeof action.type === 'undefined') {\n      throw new Error('Expected \"type\" in action')\n    }\n\n    let newId = false\n    if (typeof meta.id === 'undefined') {\n      newId = true\n      meta.id = this.generateId()\n    }\n\n    if (typeof meta.time === 'undefined') {\n      meta.time = parseInt(meta.id)\n    }\n\n    if (typeof meta.reasons === 'undefined') {\n      meta.reasons = []\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(meta.reasons)) {\n        throw new Error('Expected \"reasons\" to be an array of strings')\n      }\n\n      for (let reason of meta.reasons) {\n        if (typeof reason !== 'string') {\n          throw new Error('Expected \"reasons\" to be an array of strings')\n        }\n      }\n\n      if (typeof meta.indexes !== 'undefined') {\n        if (!Array.isArray(meta.indexes)) {\n          throw new Error('Expected \"indexes\" to be an array of strings')\n        }\n\n        for (let index of meta.indexes) {\n          if (typeof index !== 'string') {\n            throw new Error('Expected \"indexes\" to be an array of strings')\n          }\n        }\n      }\n    }\n\n    actionEvents(this.emitter, 'preadd', action, meta)\n\n    if (meta.keepLast) {\n      this.removeReason(meta.keepLast, { olderThan: meta })\n      meta.reasons.push(meta.keepLast)\n    }\n\n    if (meta.reasons.length === 0 && newId) {\n      actionEvents(this.emitter, 'add', action, meta)\n      actionEvents(this.emitter, 'clean', action, meta)\n      return meta\n    } else if (meta.reasons.length === 0) {\n      let [action2] = await this.store.byId(meta.id)\n      if (action2) {\n        return false\n      } else {\n        actionEvents(this.emitter, 'add', action, meta)\n        actionEvents(this.emitter, 'clean', action, meta)\n        return meta\n      }\n    } else {\n      let addedMeta = await this.store.add(action, meta)\n      if (addedMeta === false) {\n        return false\n      } else {\n        actionEvents(this.emitter, 'add', action, meta)\n        return addedMeta\n      }\n    }\n  }\n\n  generateId() {\n    let now = Date.now()\n    if (now <= this.lastTime) {\n      now = this.lastTime\n      this.sequence += 1\n    } else {\n      this.lastTime = now\n      this.sequence = 0\n    }\n    return now + ' ' + this.nodeId + ' ' + this.sequence\n  }\n\n  each(opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = { order: 'created' }\n    }\n\n    let store = this.store\n    return new Promise(resolve => {\n      async function nextPage(get) {\n        let page = await get()\n        let result\n        for (let i = page.entries.length - 1; i >= 0; i--) {\n          let entry = page.entries[i]\n          result = callback(entry[0], entry[1])\n          if (result === false) break\n        }\n\n        if (result === false || !page.next) {\n          resolve()\n        } else {\n          nextPage(page.next)\n        }\n      }\n\n      nextPage(store.get.bind(store, opts))\n    })\n  }\n\n  async changeMeta(id, diff) {\n    for (let k in diff) {\n      if (\n        k === 'id' ||\n        k === 'added' ||\n        k === 'time' ||\n        k === 'subprotocol' ||\n        k === 'indexes'\n      ) {\n        throw new Error('Meta \"' + k + '\" is read-only')\n      }\n    }\n\n    if (diff.reasons && diff.reasons.length === 0) {\n      let entry = await this.store.remove(id)\n      if (entry) {\n        for (let k in diff) entry[1][k] = diff[k]\n        actionEvents(this.emitter, 'clean', entry[0], entry[1])\n      }\n      return !!entry\n    } else {\n      return this.store.changeMeta(id, diff)\n    }\n  }\n\n  removeReason(reason, criteria = {}) {\n    return this.store.removeReason(reason, criteria, (action, meta) => {\n      actionEvents(this.emitter, 'clean', action, meta)\n    })\n  }\n\n  byId(id) {\n    return this.store.byId(id)\n  }\n}\n","export function isFirstOlder(firstMeta, secondMeta) {\n  if (firstMeta && !secondMeta) {\n    return false\n  } else if (!firstMeta && secondMeta) {\n    return true\n  }\n\n  if (firstMeta.time > secondMeta.time) {\n    return false\n  } else if (firstMeta.time < secondMeta.time) {\n    return true\n  }\n\n  let first = firstMeta.id.split(' ')\n  let second = secondMeta.id.split(' ')\n\n  let firstNode = first[1]\n  let secondNode = second[1]\n  if (firstNode > secondNode) {\n    return false\n  } else if (firstNode < secondNode) {\n    return true\n  }\n\n  let firstCounter = parseInt(first[2])\n  let secondCounter = parseInt(second[2])\n  if (firstCounter > secondCounter) {\n    return false\n  } else if (firstCounter < secondCounter) {\n    return true\n  }\n\n  let firstNodeTime = parseInt(first[0])\n  let secondNodeTime = parseInt(second[0])\n  if (firstNodeTime > secondNodeTime) {\n    return false\n  } else if (firstNodeTime < secondNodeTime) {\n    return true\n  }\n\n  return false\n}\n","import { createNanoEvents } from 'nanoevents'\n\nexport class WsConnection {\n  constructor(url, Class, opts) {\n    this.connected = false\n    this.emitter = createNanoEvents()\n    if (Class) {\n      this.Class = Class\n    } else if (typeof WebSocket !== 'undefined') {\n      this.Class = WebSocket\n    } else {\n      throw new Error('No WebSocket support')\n    }\n    this.url = url\n    this.opts = opts\n  }\n\n  init(ws) {\n    ws.onerror = event => {\n      this.emitter.emit('error', event.error || new Error('WS Error'))\n    }\n\n    ws.onclose = () => {\n      this.onclose()\n    }\n\n    ws.onmessage = event => {\n      let data\n      try {\n        data = JSON.parse(event.data)\n      } catch {\n        this.error(event.data)\n        return\n      }\n      this.emitter.emit('message', data)\n    }\n\n    this.ws = ws\n  }\n\n  connect() {\n    if (this.ws) return Promise.resolve()\n\n    this.emitter.emit('connecting')\n    this.init(new this.Class(this.url, undefined, this.opts))\n\n    return new Promise(resolve => {\n      this.ws.onopen = () => {\n        this.connected = true\n        this.emitter.emit('connect')\n        resolve()\n      }\n    })\n  }\n\n  disconnect() {\n    if (this.ws) {\n      this.ws.onclose = undefined\n      this.ws.close()\n      this.onclose()\n    }\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  send(message) {\n    if (this.ws && this.ws.readyState === this.ws.OPEN) {\n      this.ws.send(JSON.stringify(message))\n    } else {\n      this.emitter.emit('error', new Error('WS was closed'))\n    }\n  }\n\n  error(message) {\n    let err = new Error('Wrong message format')\n    err.received = message\n    this.emitter.emit('error', err)\n  }\n\n  onclose() {\n    if (this.ws) {\n      this.connected = false\n      this.emitter.emit('disconnect')\n      this.ws = undefined\n    }\n  }\n}\n","import { isFirstOlder } from '../is-first-older/index.js'\n\nfunction checkIndex(store, index) {\n  if (!store.indexes[index]) {\n    store.indexes[index] = { added: [], entries: [] }\n  }\n}\n\nfunction forEachIndex(meta, cb) {\n  let indexes = meta.indexes\n  if (isDefined(indexes) && indexes.length > 0) {\n    for (let index of indexes) {\n      cb(index)\n    }\n  }\n}\n\nfunction insert(store, entry) {\n  store.lastAdded += 1\n  entry[1].added = store.lastAdded\n  store.added.push(entry)\n  forEachIndex(entry[1], index => {\n    checkIndex(store, index)\n    store.indexes[index].added.push(entry)\n  })\n  return Promise.resolve(entry[1])\n}\n\nfunction eject(store, meta) {\n  let added = meta.added\n  let start = 0\n  let end = store.added.length - 1\n  while (start <= end) {\n    let middle = (end + start) >> 1\n    let otherAdded = store.added[middle][1].added\n    if (otherAdded < added) {\n      start = middle + 1\n    } else if (otherAdded > added) {\n      end = middle - 1\n    } else {\n      store.added.splice(middle, 1)\n      break\n    }\n  }\n}\n\nfunction find(list, id) {\n  for (let i = list.length - 1; i >= 0; i--) {\n    if (id === list[i][1].id) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction isDefined(value) {\n  return typeof value !== 'undefined'\n}\n\nexport class MemoryStore {\n  constructor() {\n    this.entries = []\n    this.added = []\n    this.indexes = {}\n    this.lastReceived = 0\n    this.lastAdded = 0\n    this.lastSent = 0\n  }\n\n  async add(action, meta) {\n    let entry = [action, meta]\n    let id = meta.id\n\n    let list = this.entries\n    for (let i = 0; i < list.length; i++) {\n      let [, otherMeta] = list[i]\n      if (id === otherMeta.id) {\n        return false\n      } else if (!isFirstOlder(otherMeta, meta)) {\n        forEachIndex(meta, index => {\n          checkIndex(this, index)\n          let indexList = this.indexes[index].entries\n          let j = indexList.findIndex(item => !isFirstOlder(item[1], meta))\n          indexList.splice(j, 0, entry)\n        })\n        list.splice(i, 0, entry)\n        return insert(this, entry)\n      }\n    }\n\n    forEachIndex(meta, index => {\n      checkIndex(this, index)\n      this.indexes[index].entries.push(entry)\n    })\n    list.push(entry)\n    return insert(this, entry)\n  }\n\n  async byId(id) {\n    let created = find(this.entries, id)\n    if (created === -1) {\n      return [null, null]\n    } else {\n      let [action, meta] = this.entries[created]\n      return [action, meta]\n    }\n  }\n\n  async remove(id, created) {\n    if (typeof created === 'undefined') {\n      created = find(this.entries, id)\n      if (created === -1) return Promise.resolve(false)\n    }\n\n    let entry = [this.entries[created][0], this.entries[created][1]]\n    forEachIndex(entry[1], index => {\n      let entries = this.indexes[index].entries\n      let indexed = find(entries, id)\n      if (indexed !== -1) entries.splice(indexed, 1)\n    })\n    this.entries.splice(created, 1)\n\n    forEachIndex(entry[1], index => {\n      eject(this.indexes[index], entry[1])\n    })\n    eject(this, entry[1])\n\n    return entry\n  }\n\n  async get(opts = {}) {\n    let index = opts.index\n    let store = this\n    let entries\n    if (index) {\n      store = this.indexes[index] || { added: [], entries: [] }\n    }\n    if (opts.order === 'created') {\n      entries = store.entries\n    } else {\n      entries = store.added\n    }\n    return { entries: entries.slice(0) }\n  }\n\n  async changeMeta(id, diff) {\n    let index = find(this.entries, id)\n    if (index === -1) {\n      return false\n    } else {\n      let meta = this.entries[index][1]\n      for (let key in diff) meta[key] = diff[key]\n      return true\n    }\n  }\n\n  async removeReason(reason, criteria, callback) {\n    let removed = []\n\n    if (criteria.id) {\n      let index = find(this.entries, criteria.id)\n      if (index !== -1) {\n        let meta = this.entries[index][1]\n        let reasonPos = meta.reasons.indexOf(reason)\n        if (reasonPos !== -1) {\n          meta.reasons.splice(reasonPos, 1)\n          if (meta.reasons.length === 0) {\n            callback(this.entries[index][0], meta)\n            this.remove(criteria.id)\n          }\n        }\n      }\n    } else {\n      this.entries = this.entries.filter(([action, meta]) => {\n        let c = criteria\n\n        let reasonPos = meta.reasons.indexOf(reason)\n        if (reasonPos === -1) {\n          return true\n        }\n        if (isDefined(c.olderThan) && !isFirstOlder(meta, c.olderThan)) {\n          return true\n        }\n        if (isDefined(c.youngerThan) && !isFirstOlder(c.youngerThan, meta)) {\n          return true\n        }\n        if (isDefined(c.minAdded) && meta.added < c.minAdded) {\n          return true\n        }\n        if (isDefined(c.maxAdded) && meta.added > c.maxAdded) {\n          return true\n        }\n\n        meta.reasons.splice(reasonPos, 1)\n        if (meta.reasons.length === 0) {\n          callback(action, meta)\n          removed.push(meta)\n          return false\n        } else {\n          return true\n        }\n      })\n\n      let removedAdded = removed.map(m => m.added)\n      let removing = i => !removedAdded.includes(i[1].added)\n      this.added = this.added.filter(removing)\n\n      for (let meta of removed) {\n        forEachIndex(meta, i => {\n          this.indexes[i].entries = this.indexes[i].entries.filter(removing)\n          this.indexes[i].added = this.indexes[i].added.filter(removing)\n        })\n      }\n    }\n  }\n\n  async clean() {\n    this.entries = []\n    this.added = []\n    this.indexes = {}\n    this.lastReceived = 0\n    this.lastAdded = 0\n    this.lastSent = 0\n  }\n\n  async getLastAdded() {\n    return this.lastAdded\n  }\n\n  async getLastSynced() {\n    return {\n      received: this.lastReceived,\n      sent: this.lastSent\n    }\n  }\n\n  async setLastSynced(values) {\n    if (typeof values.sent !== 'undefined') {\n      this.lastSent = values.sent\n    }\n    if (typeof values.received !== 'undefined') {\n      this.lastReceived = values.received\n    }\n  }\n}\n","export class LoguxError extends Error {\n  static describe(type, options) {\n    if (type === 'timeout') {\n      return 'A timeout was reached (' + options + ' ms)'\n    } else if (type === 'wrong-format') {\n      return 'Wrong message format in ' + options\n    } else if (type === 'unknown-message') {\n      return 'Unknown message `' + options + '` type'\n    } else if (type === 'bruteforce') {\n      return 'Too many wrong authentication attempts'\n    } else if (type === 'wrong-protocol') {\n      return (\n        `Logux supports protocols only from version ${options.supported}` +\n        `, but you use ${options.used}`\n      )\n    } else if (type === 'wrong-subprotocol') {\n      return (\n        `Only ${options.supported} application subprotocols are ` +\n        `supported, but you use ${options.used}`\n      )\n    } else if (type === 'wrong-credentials') {\n      return 'Wrong credentials'\n    } else {\n      return type\n    }\n  }\n\n  constructor(type, options, received) {\n    super(type)\n    this.name = 'LoguxError'\n    this.type = type\n    this.options = options\n    this.description = LoguxError.describe(type, options)\n    this.received = !!received\n\n    if (received) {\n      this.message = 'Logux received ' + this.type + ' error'\n      if (this.description !== this.type) {\n        this.message += ' (' + this.description + ')'\n      }\n    } else {\n      this.message = this.description\n    }\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, LoguxError)\n    }\n  }\n}\n","import { LoguxError } from '../logux-error/index.js'\n\nasync function auth(node, nodeId, token, callback) {\n  if (!node.options.auth) {\n    node.authenticated = true\n    callback()\n    return\n  }\n\n  try {\n    let access = await node.options.auth(nodeId, token, node.remoteHeaders)\n    if (access) {\n      node.authenticated = true\n      callback()\n      for (let i = 0; i < node.unauthenticated.length; i++) {\n        node.onMessage(node.unauthenticated[i])\n      }\n      node.unauthenticated = []\n    } else {\n      node.sendError(new LoguxError('wrong-credentials'))\n      node.destroy()\n    }\n  } catch (e) {\n    if (e.name === 'LoguxError') {\n      node.sendError(e)\n      node.destroy()\n    } else {\n      node.error(e)\n    }\n  }\n}\n\nfunction checkProtocol(node, ver) {\n  node.remoteProtocol = ver\n\n  if (ver >= node.minProtocol) {\n    return true\n  } else {\n    node.sendError(\n      new LoguxError('wrong-protocol', {\n        supported: node.minProtocol,\n        used: ver\n      })\n    )\n    node.destroy()\n    return false\n  }\n}\n\nfunction emitEvent(node) {\n  try {\n    node.emitter.emit('connect')\n  } catch (e) {\n    if (e.name === 'LoguxError') {\n      node.sendError(e)\n      return false\n    } else {\n      throw e\n    }\n  }\n  return true\n}\n\nexport async function sendConnect() {\n  let message = [\n    'connect',\n    this.localProtocol,\n    this.localNodeId,\n    this.lastReceived\n  ]\n\n  let options = {}\n  if (this.options.token) {\n    if (typeof this.options.token === 'function') {\n      options.token = await this.options.token()\n    } else {\n      options.token = this.options.token\n    }\n  }\n  if (this.options.subprotocol) {\n    options.subprotocol = this.options.subprotocol\n  }\n  if (Object.keys(options).length > 0) message.push(options)\n\n  if (this.options.fixTime) this.connectSended = this.now()\n\n  if (Object.keys(this.localHeaders).length > 0) {\n    this.sendHeaders(this.localHeaders)\n  }\n\n  this.startTimeout()\n  this.send(message)\n}\n\nexport async function sendConnected(start, end) {\n  let message = [\n    'connected',\n    this.localProtocol,\n    this.localNodeId,\n    [start, end]\n  ]\n\n  let options = {}\n  if (this.options.token) {\n    if (typeof this.options.token === 'function') {\n      options.token = await this.options.token()\n    } else {\n      options.token = this.options.token\n    }\n  }\n  if (this.options.subprotocol) {\n    options.subprotocol = this.options.subprotocol\n  }\n  if (Object.keys(options).length > 0) message.push(options)\n\n  if (Object.keys(this.localHeaders).length > 0) {\n    this.sendHeaders(this.localHeaders)\n  }\n\n  this.send(message)\n}\n\nexport function connectMessage(ver, nodeId, synced, options) {\n  let start = this.now()\n  if (!options) options = {}\n\n  this.remoteNodeId = nodeId\n  if (!checkProtocol(this, ver)) return\n\n  this.remoteSubprotocol = options.subprotocol || '0.0.0'\n\n  if (!emitEvent(this)) {\n    this.destroy()\n    return\n  }\n\n  auth(this, nodeId, options.token, () => {\n    this.baseTime = this.now()\n    this.sendConnected(start, this.baseTime)\n    this.syncSince(synced)\n  })\n}\n\nexport function connectedMessage(ver, nodeId, time, options) {\n  if (!options) options = {}\n\n  this.endTimeout()\n  this.remoteNodeId = nodeId\n  if (!checkProtocol(this, ver)) return\n\n  this.baseTime = time[1]\n\n  if (this.options.fixTime) {\n    let now = this.now()\n    let authTime = time[1] - time[0]\n    let roundTrip = now - this.connectSended - authTime\n    this.timeFix = Math.floor(this.connectSended - time[0] + roundTrip / 2)\n  }\n\n  this.remoteSubprotocol = options.subprotocol || '0.0.0'\n\n  if (!emitEvent(this)) {\n    this.destroy()\n    return\n  }\n\n  auth(this, nodeId, options.token, () => {\n    this.syncSince(this.lastSent)\n  })\n}\n","import { createNanoEvents } from 'nanoevents'\n\nimport {\n  sendConnect,\n  sendConnected,\n  connectMessage,\n  connectedMessage\n} from '../connect/index.js'\nimport {\n  syncedMessage,\n  syncMessage,\n  sendSynced,\n  sendSync\n} from '../sync/index.js'\nimport { sendPing, pingMessage, pongMessage } from '../ping/index.js'\nimport { sendHeaders, headersMessage } from '../headers/index.js'\nimport { sendDebug, debugMessage } from '../debug/index.js'\nimport { sendError, errorMessage } from '../error/index.js'\nimport { LoguxError } from '../logux-error/index.js'\n\nconst NOT_TO_THROW = {\n  'wrong-subprotocol': true,\n  'wrong-protocol': true,\n  'timeout': true\n}\n\nconst BEFORE_AUTH = ['connect', 'connected', 'error', 'debug', 'headers']\n\nasync function syncMappedEvent(node, action, meta) {\n  let added = meta.added\n  if (typeof added === 'undefined') {\n    let lastAdded = node.lastAddedCache\n    added = lastAdded > node.lastSent ? lastAdded : node.lastSent\n  }\n  if (node.options.outMap) {\n    try {\n      let changed = await node.options.outMap(action, meta)\n      node.sendSync(added, [changed])\n    } catch (e) {\n      node.error(e)\n    }\n  } else {\n    node.sendSync(added, [[action, meta]])\n  }\n}\n\nexport class BaseNode {\n  constructor(nodeId, log, connection, options = {}) {\n    this.remoteNodeId = undefined\n    this.remoteProtocol = undefined\n    this.remoteSubprotocol = undefined\n\n    this.minProtocol = 3\n    this.localProtocol = 4\n    this.localNodeId = nodeId\n\n    this.log = log\n    this.connection = connection\n    this.options = options\n\n    if (this.options.ping && !this.options.timeout) {\n      throw new Error('You must set timeout option to use ping')\n    }\n\n    this.connected = false\n    this.authenticated = false\n    this.unauthenticated = []\n\n    this.timeFix = 0\n    this.syncing = 0\n    this.received = {}\n\n    this.lastSent = 0\n    this.lastReceived = 0\n\n    this.state = 'disconnected'\n\n    this.emitter = createNanoEvents()\n    this.timeouts = []\n    this.throwsError = true\n\n    this.unbind = [\n      log.on('add', (action, meta) => {\n        this.onAdd(action, meta)\n      }),\n      connection.on('connecting', () => {\n        this.onConnecting()\n      }),\n      connection.on('connect', () => {\n        this.onConnect()\n      }),\n      connection.on('message', message => {\n        this.onMessage(message)\n      }),\n      connection.on('error', error => {\n        if (error.message === 'Wrong message format') {\n          this.sendError(new LoguxError('wrong-format', error.received))\n          this.connection.disconnect('error')\n        } else {\n          this.error(error)\n        }\n      }),\n      connection.on('disconnect', () => {\n        this.onDisconnect()\n      })\n    ]\n\n    this.initialized = false\n    this.lastAddedCache = 0\n    this.initializing = this.initialize()\n    this.localHeaders = {}\n    this.remoteHeaders = {}\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  catch(listener) {\n    this.throwsError = false\n    let unbind = this.on('error', listener)\n    return () => {\n      this.throwsError = true\n      unbind()\n    }\n  }\n\n  waitFor(state) {\n    if (this.state === state) {\n      return Promise.resolve()\n    }\n    return new Promise(resolve => {\n      let unbind = this.on('state', () => {\n        if (this.state === state) {\n          unbind()\n          resolve()\n        }\n      })\n    })\n  }\n\n  destroy() {\n    if (this.connection.destroy) {\n      this.connection.destroy()\n    } else if (this.connected) {\n      this.connection.disconnect('destroy')\n    }\n    for (let i of this.unbind) i()\n    clearTimeout(this.pingTimeout)\n    this.endTimeout()\n  }\n\n  setLocalHeaders(headers) {\n    this.localHeaders = headers\n    if (this.connected) {\n      this.sendHeaders(headers)\n    }\n  }\n\n  send(msg) {\n    if (!this.connected) return\n    this.delayPing()\n    try {\n      this.connection.send(msg)\n    } catch (e) {\n      this.error(e)\n    }\n  }\n\n  onConnecting() {\n    this.setState('connecting')\n  }\n\n  onConnect() {\n    this.delayPing()\n    this.connected = true\n  }\n\n  onDisconnect() {\n    while (this.timeouts.length > 0) {\n      this.endTimeout()\n    }\n    if (this.pingTimeout) clearTimeout(this.pingTimeout)\n    this.authenticated = false\n    this.connected = false\n    this.setState('disconnected')\n  }\n\n  onMessage(msg) {\n    this.delayPing()\n    let name = msg[0]\n\n    if (!this.authenticated && !BEFORE_AUTH.includes(name)) {\n      this.unauthenticated.push(msg)\n      return\n    }\n\n    this[name + 'Message'](...msg.slice(1))\n  }\n\n  async onAdd(action, meta) {\n    if (!this.authenticated) return\n    if (this.lastAddedCache < meta.added) {\n      this.lastAddedCache = meta.added\n    }\n\n    if (this.received && this.received[meta.id]) {\n      delete this.received[meta.id]\n      return\n    }\n\n    if (this.options.outFilter) {\n      try {\n        let result = await this.options.outFilter(action, meta)\n        if (result) syncMappedEvent(this, action, meta)\n      } catch (e) {\n        this.error(e)\n      }\n    } else {\n      syncMappedEvent(this, action, meta)\n    }\n  }\n\n  syncError(type, options, received) {\n    let err = new LoguxError(type, options, received)\n    this.emitter.emit('error', err)\n    if (!NOT_TO_THROW[type] && this.throwsError) {\n      throw err\n    }\n  }\n\n  error(err) {\n    this.emitter.emit('error', err)\n    this.connection.disconnect('error')\n    if (this.throwsError) {\n      throw err\n    }\n  }\n\n  setState(state) {\n    if (this.state !== state) {\n      this.state = state\n      this.emitter.emit('state')\n    }\n  }\n\n  startTimeout() {\n    if (!this.options.timeout) return\n\n    let ms = this.options.timeout\n    let timeout = setTimeout(() => {\n      if (this.connected) this.connection.disconnect('timeout')\n      this.syncError('timeout', ms)\n    }, ms)\n\n    this.timeouts.push(timeout)\n  }\n\n  endTimeout() {\n    if (this.timeouts.length > 0) {\n      clearTimeout(this.timeouts.shift())\n    }\n  }\n\n  delayPing() {\n    if (!this.options.ping) return\n    if (this.pingTimeout) clearTimeout(this.pingTimeout)\n\n    this.pingTimeout = setTimeout(() => {\n      if (this.connected && this.authenticated) this.sendPing()\n    }, this.options.ping)\n  }\n\n  async syncSinceQuery(lastSynced) {\n    let promises = []\n    await this.log.each({ order: 'added' }, (action, meta) => {\n      if (meta.added <= lastSynced) return false\n      if (this.options.outFilter) {\n        promises.push(\n          this.options\n            .outFilter(action, meta)\n            .then(r => {\n              if (r) {\n                return [action, meta]\n              } else {\n                return false\n              }\n            })\n            .catch(e => {\n              this.error(e)\n            })\n        )\n      } else {\n        promises.push(Promise.resolve([action, meta]))\n      }\n      return true\n    })\n\n    let entries = await Promise.all(promises)\n\n    let data = { added: 0 }\n    data.entries = entries.filter(entry => {\n      if (entry && data.added < entry[1].added) {\n        data.added = entry[1].added\n      }\n      return entry !== false\n    })\n    return data\n  }\n\n  async syncSince(lastSynced) {\n    let data = await this.syncSinceQuery(lastSynced)\n    if (!this.connected) return\n    if (data.entries.length > 0) {\n      if (this.options.outMap) {\n        Promise.all(\n          data.entries.map(i => {\n            return this.options.outMap(i[0], i[1])\n          })\n        )\n          .then(changed => {\n            this.sendSync(data.added, changed)\n          })\n          .catch(e => {\n            this.error(e)\n          })\n      } else {\n        this.sendSync(data.added, data.entries)\n      }\n    } else {\n      this.setState('synchronized')\n    }\n  }\n\n  setLastSent(value) {\n    if (this.lastSent < value) {\n      this.lastSent = value\n      this.log.store.setLastSynced({ sent: value })\n    }\n  }\n\n  setLastReceived(value) {\n    if (this.lastReceived < value) this.lastReceived = value\n    this.log.store.setLastSynced({ received: value })\n  }\n\n  now() {\n    return Date.now()\n  }\n\n  async initialize() {\n    let [synced, added] = await Promise.all([\n      this.log.store.getLastSynced(),\n      this.log.store.getLastAdded()\n    ])\n    this.initialized = true\n    this.lastSent = synced.sent\n    this.lastReceived = synced.received\n    this.lastAddedCache = added\n    if (this.connection.connected) this.onConnect()\n  }\n\n  sendDuilian() {\n    this.send(['duilian', Object.keys(DUILIANS)[0]])\n  }\n\n  duilianMessage(line) {\n    if (DUILIANS[line]) {\n      this.send(['duilian', DUILIANS[line]])\n    }\n  }\n}\n\nBaseNode.prototype.sendConnect = sendConnect\nBaseNode.prototype.sendConnected = sendConnected\nBaseNode.prototype.connectMessage = connectMessage\nBaseNode.prototype.connectedMessage = connectedMessage\n\nBaseNode.prototype.sendSync = sendSync\nBaseNode.prototype.sendSynced = sendSynced\nBaseNode.prototype.syncMessage = syncMessage\nBaseNode.prototype.syncedMessage = syncedMessage\n\nBaseNode.prototype.sendPing = sendPing\nBaseNode.prototype.pingMessage = pingMessage\nBaseNode.prototype.pongMessage = pongMessage\n\nBaseNode.prototype.sendDebug = sendDebug\nBaseNode.prototype.debugMessage = debugMessage\n\nBaseNode.prototype.sendError = sendError\nBaseNode.prototype.errorMessage = errorMessage\n\nBaseNode.prototype.sendHeaders = sendHeaders\nBaseNode.prototype.headersMessage = headersMessage\n\nconst DUILIANS = {\n  金木水火土: '板城烧锅酒'\n}\n","export function sendSync(added, entries) {\n  this.startTimeout()\n\n  let data = []\n  for (let [action, originMeta] of entries) {\n    let meta = {}\n    for (let key in originMeta) {\n      if (key === 'id') {\n        meta.id = originMeta.id.split(' ')\n      } else if (key !== 'added') {\n        meta[key] = originMeta[key]\n      }\n    }\n\n    if (this.timeFix) meta.time -= this.timeFix\n    meta.id[0] = parseInt(meta.id[0]) - this.baseTime\n    meta.id[2] = parseInt(meta.id[2])\n    meta.time -= this.baseTime\n\n    if (meta.id[1] === this.localNodeId) {\n      if (meta.id[2] === 0) {\n        meta.id = meta.id[0]\n      } else {\n        meta.id = [meta.id[0], meta.id[2]]\n      }\n    }\n\n    data.unshift(action, meta)\n  }\n\n  this.syncing += 1\n  this.setState('sending')\n  this.send(['sync', added].concat(data))\n}\n\nexport function sendSynced(added) {\n  this.send(['synced', added])\n}\n\nexport async function syncMessage(added, ...data) {\n  let promises = []\n\n  for (let i = 0; i < data.length - 1; i += 2) {\n    let action = data[i]\n    let meta = data[i + 1]\n\n    if (typeof meta.id === 'number') {\n      meta.id = meta.id + this.baseTime + ' ' + this.remoteNodeId + ' ' + 0\n    } else {\n      meta.id[0] = meta.id[0] + this.baseTime\n      if (meta.id.length === 2) {\n        meta.id = meta.id[0] + ' ' + this.remoteNodeId + ' ' + meta.id[1]\n      } else {\n        meta.id = meta.id.join(' ')\n      }\n    }\n\n    meta.time = meta.time + this.baseTime\n    if (this.timeFix) meta.time = meta.time + this.timeFix\n\n    let process = Promise.resolve([action, meta])\n\n    if (this.options.inMap) {\n      process = process\n        .then(([action2, meta2]) => {\n          return this.options.inMap(action2, meta2)\n        })\n        .catch(e => {\n          this.error(e)\n        })\n    }\n\n    process\n      .then(filtered => {\n        if (filtered && this.options.inFilter) {\n          return this.options\n            .inFilter(...filtered)\n            .then(res => {\n              return res ? filtered : false\n            })\n            .catch(e => {\n              this.error(e)\n            })\n        } else {\n          return filtered\n        }\n      })\n      .then(changed => {\n        if (!changed) return false\n        if (this.received) this.received[changed[1].id] = true\n        return this.log.add(changed[0], changed[1])\n      })\n\n    promises.push(process)\n  }\n\n  await Promise.all(promises)\n  this.setLastReceived(added)\n  this.sendSynced(added)\n}\n\nexport function syncedMessage(synced) {\n  this.endTimeout()\n  this.setLastSent(synced)\n  if (this.syncing > 0) this.syncing -= 1\n  if (this.syncing === 0) {\n    this.setState('synchronized')\n  }\n}\n","export function sendPing() {\n  this.startTimeout()\n  this.send(['ping', this.lastAddedCache])\n  if (this.pingTimeout) clearTimeout(this.pingTimeout)\n}\n\nexport function pingMessage(synced) {\n  this.setLastReceived(synced)\n  if (this.connected && this.authenticated) {\n    this.send(['pong', this.lastAddedCache])\n  }\n}\n\nexport function pongMessage(synced) {\n  this.setLastReceived(synced)\n  this.endTimeout()\n}\n","export function sendDebug(type, data) {\n  this.send(['debug', type, data])\n}\n\nexport function debugMessage(type, data) {\n  this.emitter.emit('debug', type, data)\n}\n","export function sendError(error) {\n  let message = ['error', error.type]\n  if (typeof error.options !== 'undefined') message.push(error.options)\n  this.send(message)\n\n  this.emitter.emit('clientError', error)\n}\n\nexport function errorMessage(type, options) {\n  this.syncError(type, options, true)\n}\n","export function sendHeaders(data) {\n  this.send(['headers', data])\n}\n\nexport function headersMessage(data) {\n  this.remoteHeaders = data\n  this.emitter.emit('headers', data)\n}\n","import { BaseNode } from '../base-node/index.js'\n\nconst DEFAULT_OPTIONS = {\n  fixTime: true,\n  timeout: 20000,\n  ping: 5000\n}\n\nexport class ClientNode extends BaseNode {\n  constructor(nodeId, log, connection, options = {}) {\n    options = { ...DEFAULT_OPTIONS, ...options }\n    super(nodeId, log, connection, options)\n  }\n\n  onConnect() {\n    if (!this.connected) {\n      this.connected = true\n      this.initializing = this.initializing.then(() => {\n        if (this.connected) this.sendConnect()\n      })\n    }\n  }\n}\n","import { createNanoEvents } from 'nanoevents'\n\nclass LocalConnection {\n  constructor(pair, type) {\n    this.connected = false\n    this.emitter = createNanoEvents()\n    this.type = type\n    this.pair = pair\n  }\n\n  other() {\n    if (this.type === 'left') {\n      return this.pair.right\n    } else {\n      return this.pair.left\n    }\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  connect() {\n    if (this.connected) {\n      throw new Error('Connection already established')\n    } else {\n      this.emitter.emit('connecting')\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.other().connected = true\n          this.connected = true\n          this.other().emitter.emit('connect')\n          this.emitter.emit('connect')\n          resolve()\n        }, this.pair.delay)\n      })\n    }\n  }\n\n  disconnect(reason) {\n    if (!this.connected) {\n      throw new Error('Connection already finished')\n    } else {\n      this.connected = false\n      this.emitter.emit('disconnect', reason)\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.other().connected = false\n          this.other().emitter.emit('disconnect')\n          resolve()\n        }, 1)\n      })\n    }\n  }\n\n  send(message) {\n    if (this.connected) {\n      setTimeout(() => {\n        this.other().emitter.emit('message', message)\n      }, this.pair.delay)\n    } else {\n      throw new Error('Connection should be started before sending a message')\n    }\n  }\n}\n\nexport class LocalPair {\n  constructor(delay = 1) {\n    this.delay = delay\n    this.left = new LocalConnection(this, 'left')\n    this.right = new LocalConnection(this, 'right')\n  }\n}\n","const DEFAULT_OPTIONS = {\n  minDelay: 1000,\n  maxDelay: 5000,\n  attempts: Infinity\n}\n\nconst FATAL_ERRORS = [\n  'wrong-protocol',\n  'wrong-subprotocol',\n  'wrong-credentials'\n]\n\nexport class Reconnect {\n  constructor(connection, options = {}) {\n    this.connection = connection\n    this.options = { ...DEFAULT_OPTIONS, ...options }\n\n    this.reconnecting = connection.connected\n    this.connecting = false\n    this.attempts = 0\n\n    this.unbind = [\n      this.connection.on('message', msg => {\n        if (msg[0] === 'error' && FATAL_ERRORS.includes(msg[1])) {\n          this.reconnecting = false\n        }\n      }),\n      this.connection.on('connecting', () => {\n        this.connecting = true\n      }),\n      this.connection.on('connect', () => {\n        this.attempts = 0\n        this.connecting = false\n      }),\n      this.connection.on('disconnect', () => {\n        this.connecting = false\n        if (this.reconnecting) this.reconnect()\n      }),\n      () => {\n        clearTimeout(this.timer)\n      }\n    ]\n\n    let visibility = () => {\n      if (this.reconnecting && !this.connected && !this.connecting) {\n        if (typeof document !== 'undefined' && !document.hidden) this.connect()\n      }\n    }\n    let connect = () => {\n      if (this.reconnecting && !this.connected && !this.connecting) {\n        if (navigator.onLine) this.connect()\n      }\n    }\n    let disconnect = () => {\n      this.disconnect('freeze')\n    }\n    if (\n      typeof document !== 'undefined' &&\n      typeof window !== 'undefined' &&\n      document.addEventListener &&\n      window.addEventListener\n    ) {\n      document.addEventListener('visibilitychange', visibility, false)\n      window.addEventListener('focus', connect, false)\n      window.addEventListener('online', connect, false)\n      window.addEventListener('resume', connect, false)\n      window.addEventListener('freeze', disconnect, false)\n      this.unbind.push(() => {\n        document.removeEventListener('visibilitychange', visibility, false)\n        window.removeEventListener('focus', connect, false)\n        window.removeEventListener('online', connect, false)\n        window.removeEventListener('resume', connect, false)\n        window.removeEventListener('freeze', disconnect, false)\n      })\n    }\n  }\n\n  connect() {\n    this.attempts += 1\n    this.reconnecting = true\n    return this.connection.connect()\n  }\n\n  disconnect(reason) {\n    if (reason !== 'timeout' && reason !== 'error' && reason !== 'freeze') {\n      this.reconnecting = false\n    }\n    return this.connection.disconnect(reason)\n  }\n\n  destroy() {\n    for (let i of this.unbind) i()\n    this.disconnect('destroy')\n  }\n\n  reconnect() {\n    if (this.attempts > this.options.attempts - 1) {\n      this.reconnecting = false\n      this.attempts = 0\n      return\n    }\n\n    let delay = this.nextDelay()\n    this.timer = setTimeout(() => {\n      if (this.reconnecting && !this.connecting && !this.connected) {\n        this.connect()\n      }\n    }, delay)\n  }\n\n  send(...args) {\n    return this.connection.send(...args)\n  }\n\n  on(...args) {\n    return this.connection.on(...args)\n  }\n\n  nextDelay() {\n    let base = this.options.minDelay * 2 ** this.attempts\n    let rand = Math.random()\n    let deviation = rand * 0.5 * base\n    if (Math.floor(rand * 10) === 1) deviation = -deviation\n    return Math.min(base + deviation, this.options.maxDelay) || 0\n  }\n\n  get connected() {\n    return this.connection.connected\n  }\n\n  get emitter() {\n    return this.connection.emitter\n  }\n}\n","export function parseId(nodeId) {\n  if (nodeId.includes(' ')) nodeId = nodeId.split(' ')[1]\n  let parts = nodeId.split(':')\n  if (parts.length === 1) {\n    return { nodeId, userId: undefined, clientId: nodeId }\n  } else {\n    let userId = parts[0]\n    return { nodeId, userId, clientId: parts[0] + ':' + parts[1] }\n  }\n}\n","export function status(client, callback, options = {}) {\n  let observable = client.on ? client : client.node\n  let disconnected = observable.state === 'disconnected'\n  let wait = false\n  let old = false\n\n  if (typeof options.duration === 'undefined') options.duration = 3000\n\n  let timeout\n  let unbind = []\n  let processing = {}\n\n  function setSynchronized() {\n    if (Object.keys(processing).length === 0) {\n      if (wait) {\n        wait = false\n        callback('synchronizedAfterWait')\n        timeout = setTimeout(() => {\n          callback('synchronized')\n        }, options.duration)\n      } else {\n        callback('synchronized')\n      }\n    }\n  }\n\n  function changeState() {\n    clearTimeout(timeout)\n\n    if (old) return\n    if (observable.state === 'disconnected') {\n      disconnected = true\n      callback(wait ? 'wait' : 'disconnected')\n    } else if (observable.state === 'synchronized') {\n      disconnected = false\n      setSynchronized()\n    } else if (observable.state === 'connecting') {\n      timeout = setTimeout(() => {\n        callback('connecting' + (wait ? 'AfterWait' : ''))\n      }, 100)\n    } else {\n      callback(client.state + (wait ? 'AfterWait' : ''))\n    }\n  }\n\n  unbind.push(observable.on('state', changeState))\n\n  unbind.push(\n    client.node.on('error', error => {\n      if (\n        error.type === 'wrong-protocol' ||\n        error.type === 'wrong-subprotocol'\n      ) {\n        old = true\n        callback('protocolError')\n      } else if (error.type !== 'timeout') {\n        callback('syncError', { error })\n      }\n    })\n  )\n\n  unbind.push(\n    client.node.on('clientError', error => {\n      callback('syncError', { error })\n    })\n  )\n\n  let log = client.on ? client : client.log\n  unbind.push(\n    log.on('add', (action, meta) => {\n      if (action.type === 'logux/subscribe') {\n        return\n      } else if (action.type === 'logux/unsubscribe') {\n        return\n      }\n\n      if (action.type === 'logux/processed') {\n        delete processing[action.id]\n        setSynchronized()\n      } else if (action.type === 'logux/undo') {\n        delete processing[action.id]\n      } else if (meta.sync) {\n        processing[meta.id] = true\n      }\n\n      if (action.type === 'logux/undo' && action.reason) {\n        if (action.reason === 'denied') {\n          callback('denied', { action, meta })\n        } else {\n          callback('error', { action, meta })\n        }\n      } else if (disconnected && meta.sync && meta.added) {\n        if (!wait) callback('wait')\n        wait = true\n      }\n    })\n  )\n\n  changeState()\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","import { status } from '../status/index.js'\n\nfunction injectStyles(element, styles) {\n  for (let i in styles) {\n    element.style[i] = styles[i]\n  }\n}\n\nfunction setPosition(element, position) {\n  let style = element.style\n  if (position === 'middle-center' || position === 'center-middle') {\n    style.top = '50%'\n    style.left = '50%'\n    style.transform = 'translate(-50%, -50%)'\n  } else {\n    position.split('-').forEach(pos => {\n      if (pos === 'middle') {\n        style.top = '50%'\n        style.transform = 'translateY(-50%)'\n      } else if (pos === 'center') {\n        style.left = '50%'\n        style.transform = 'translateX(-50%)'\n      } else {\n        style[pos] = '0'\n      }\n    })\n  }\n}\n\nconst RESET = {\n  boxSizing: 'content-box',\n  visibility: 'visible',\n  textIndent: '0',\n  textTransform: 'none',\n  wordSpacing: 'normal',\n  letterSpacing: 'normal',\n  fontStyle: 'normal',\n  fontVariant: 'normal',\n  fontWeight: 'normal',\n  lineHeight: 'auto'\n}\n\nexport function badge(client, opts) {\n  let messages = opts.messages\n  let position = opts.position || 'bottom-right'\n  let styles = opts.styles\n\n  let widget = document.createElement('div')\n  let text = document.createElement('span')\n\n  widget.setAttribute('role', 'alert')\n\n  injectStyles(widget, RESET)\n  injectStyles(widget, styles.base)\n  injectStyles(text, styles.text)\n  setPosition(widget, position)\n\n  let show = (style, msg) => {\n    text.innerHTML = msg\n    injectStyles(widget, style)\n    widget.style.display = 'block'\n  }\n\n  let hide = () => {\n    widget.style.display = 'none'\n  }\n\n  let unbind = status(\n    client,\n    state => {\n      if (state === 'sendingAfterWait' || state === 'connectingAfterWait') {\n        show(styles.sending, messages.sending)\n      } else if (state === 'synchronizedAfterWait') {\n        show(styles.synchronized, messages.synchronized)\n      } else if (state === 'synchronized') {\n        hide(widget)\n      } else if (state === 'disconnected') {\n        show(styles.disconnected, messages.disconnected)\n      } else if (state === 'wait') {\n        show(styles.wait, messages.wait)\n      } else if (state === 'protocolError') {\n        show(styles.protocolError, messages.protocolError)\n      } else if (state === 'syncError') {\n        show(styles.error, messages.syncError)\n      } else if (state === 'error') {\n        show(styles.error, messages.error)\n      } else if (state === 'denied') {\n        show(styles.error, messages.denied)\n      }\n    },\n    opts\n  )\n\n  widget.appendChild(text)\n  document.body.appendChild(widget)\n\n  return () => {\n    unbind()\n    document.body.removeChild(widget)\n  }\n}\n\nexport let badgeRu = {\n  synchronized: 'Ваши данные сохранены',\n  disconnected: 'Нет интернета',\n  wait: 'Нет интернета<br>Ваши данные не сохранены',\n  sending: 'Сохраняю ваши данные',\n  syncError: 'Ошибка на сервере<br>Ваши данные не сохранены',\n  error: 'Ошибка на сервере<br>Ваши действия отменены',\n  denied: 'Нет прав<br>Ваши действия отменены',\n  protocolError: 'Сохранение не работает<br>Обновите страницу'\n}\n\nexport let badgeEn = {\n  synchronized: 'Your data has been saved',\n  disconnected: 'No Internet connection',\n  wait: 'No Internet connection<br>Your data has not been saved',\n  sending: 'Data saving',\n  syncError: 'Server error<br>Your data has not been saved',\n  error: 'Server error<br>You changes was reverted',\n  denied: 'You have no access<br>You changes was reverted',\n  protocolError: 'Saving is not working<br>Refresh the page'\n}\n","import { urlAlphabet } from './url-alphabet/index.js'\nif (process.env.NODE_ENV !== 'production') {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, size, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * size) / alphabet.length)\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export class LoguxUndoError extends Error {\n  constructor(action) {\n    let type = action.action ? action.action.type : 'action'\n    super(`Server undid ${type} because of ${action.reason}`)\n    this.name = 'LoguxUndoError'\n    this.action = action\n  }\n}\n","import { createNanoEvents } from 'nanoevents'\nimport {\n  isFirstOlder,\n  WsConnection,\n  MemoryStore,\n  ClientNode,\n  Reconnect,\n  parseId,\n  Log\n} from '@logux/core'\nimport { nanoid } from 'nanoid'\n\nimport { LoguxUndoError } from '../logux-undo-error/index.js'\nimport { track } from '../track/index.js'\n\nlet ALLOWED_META = ['id', 'time', 'subprotocol']\n\nfunction tabPing(c) {\n  localStorage.setItem(c.options.prefix + ':tab:' + c.tabId, Date.now())\n}\n\nfunction cleanTabActions(client, id) {\n  client.log.removeReason('tab' + id).then(() => {\n    if (client.isLocalStorage) {\n      localStorage.removeItem(client.options.prefix + ':tab:' + id)\n    }\n  })\n}\n\nexport class Client {\n  constructor(opts = {}) {\n    this.options = opts\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof this.options.server === 'undefined') {\n        throw new Error('Missed server option in Logux client')\n      }\n      if (typeof this.options.subprotocol === 'undefined') {\n        throw new Error('Missed subprotocol option in Logux client')\n      }\n      if (typeof this.options.userId === 'undefined') {\n        throw new Error(\n          'Missed userId option in Logux client. ' +\n            'Pass false if you have no users.'\n        )\n      }\n      if (this.options.userId === false) {\n        throw new Error('Replace userId: false to userId: \"false\"')\n      }\n      if (typeof this.options.userId !== 'string') {\n        throw new Error('userId must be a string')\n      }\n      if (this.options.userId.includes(':')) {\n        throw new Error('userId can’t contain colon character')\n      }\n    }\n\n    if (typeof this.options.prefix === 'undefined') {\n      this.options.prefix = 'logux'\n    }\n\n    this.isLocalStorage = false\n    if (typeof localStorage !== 'undefined') {\n      let random = nanoid()\n      try {\n        localStorage.setItem(random, '1')\n        localStorage.removeItem(random)\n        this.isLocalStorage = true\n      } catch {}\n    }\n\n    if (!this.options.time) {\n      this.clientId = this.options.userId + ':' + this.getClientId()\n      this.tabId = nanoid(8)\n    } else {\n      this.tabId = this.options.time.lastId + 1 + ''\n      this.clientId = this.options.userId + ':' + this.tabId\n    }\n\n    this.nodeId = this.clientId + ':' + this.tabId\n    let store = this.options.store || new MemoryStore()\n\n    let log\n    if (this.options.time) {\n      log = this.options.time.nextLog({ store, nodeId: this.nodeId })\n    } else {\n      log = new Log({ store, nodeId: this.nodeId })\n    }\n    this.log = log\n\n    log.on('preadd', (action, meta) => {\n      if (parseId(meta.id).nodeId === this.nodeId && !meta.subprotocol) {\n        meta.subprotocol = this.options.subprotocol\n      }\n      if (meta.sync && !meta.resubscribe) meta.reasons.push('syncing')\n    })\n\n    this.last = {}\n    this.subscriptions = {}\n    let subscribing = {}\n    let unsubscribing = {}\n\n    this.emitter = createNanoEvents()\n    this.on('add', (action, meta) => {\n      let type = action.type\n      let json, last\n      if (type === 'logux/processed' || type === 'logux/undo') {\n        this.log.removeReason('syncing', { id: action.id })\n      }\n      if (type === 'logux/subscribe' && !meta.resubscribe) {\n        subscribing[meta.id] = action\n      } else if (type === 'logux/unsubscribe') {\n        unsubscribing[meta.id] = action\n      } else if (type === 'logux/processed') {\n        if (unsubscribing[action.id]) {\n          let unsubscription = unsubscribing[action.id]\n          json = JSON.stringify({ ...unsubscription, type: 'logux/subscribe' })\n          let subscribers = this.subscriptions[json]\n          if (subscribers) {\n            if (subscribers === 1) {\n              delete this.subscriptions[json]\n            } else {\n              this.subscriptions[json] = subscribers - 1\n            }\n          }\n        }\n        if (subscribing[action.id]) {\n          let subscription = subscribing[action.id]\n          delete subscribing[action.id]\n          json = JSON.stringify(subscription)\n          if (this.subscriptions[json]) {\n            this.subscriptions[json] += 1\n          } else {\n            this.subscriptions[json] = 1\n          }\n          last = this.last[subscription.channel]\n          if (!last || isFirstOlder(last, meta)) {\n            this.last[subscription.channel] = { id: meta.id, time: meta.time }\n          }\n        }\n        if (type === 'logux/processed' && this.processing[action.id]) {\n          this.processing[action.id][1](meta)\n          delete this.processing[action.id]\n        }\n      } else if (type === 'logux/undo') {\n        if (this.processing[action.id]) {\n          this.processing[action.id][2](new LoguxUndoError(action))\n          delete this.processing[action.id]\n        }\n        delete subscribing[action.id]\n        delete unsubscribing[action.id]\n      } else if (meta.channels) {\n        if (!meta.id.includes(' ' + this.clientId + ':')) {\n          meta.channels.forEach(channel => {\n            last = this.last[channel]\n            if (!last || isFirstOlder(last, meta)) {\n              this.last[channel] = { id: meta.id, time: meta.time }\n            }\n          })\n        }\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (type === 'logux/subscribe' || type === 'logux/unsubscribe') {\n          if (!meta.sync) {\n            console.error(type + ' action without meta.sync')\n          }\n        }\n      }\n    })\n\n    this.tabPing = 60000\n    this.tabTimeout = 10 * this.tabPing\n    let reason = 'tab' + this.tabId\n    if (this.isLocalStorage) {\n      let unbind = log.on('add', (action, meta) => {\n        if (meta.reasons.includes(reason)) {\n          tabPing(this)\n          this.pinging = setInterval(() => {\n            tabPing(this)\n          }, this.tabPing)\n          unbind()\n        }\n      })\n    }\n\n    let connection\n    if (typeof this.options.server === 'string') {\n      let ws = new WsConnection(this.options.server)\n      connection = new Reconnect(ws, {\n        minDelay: this.options.minDelay,\n        maxDelay: this.options.maxDelay,\n        attempts: this.options.attempts\n      })\n    } else {\n      connection = this.options.server\n    }\n\n    let outFilter = async (action, meta) => {\n      return !!meta.sync && parseId(meta.id).userId === this.options.userId\n    }\n\n    let outMap = async (action, meta) => {\n      let filtered = {}\n      for (let i in meta) {\n        if (i === 'subprotocol') {\n          if (meta.subprotocol !== this.options.subprotocol) {\n            filtered.subprotocol = meta.subprotocol\n          }\n        } else if (ALLOWED_META.includes(i)) {\n          filtered[i] = meta[i]\n        }\n      }\n      return [action, filtered]\n    }\n\n    if (!this.options.time) {\n      if (typeof this.options.timeout === 'undefined') {\n        this.options.timeout = 20000\n      }\n      if (typeof this.options.ping === 'undefined') {\n        this.options.ping = 5000\n      }\n    }\n\n    this.node = new ClientNode(this.nodeId, this.log, connection, {\n      subprotocol: this.options.subprotocol,\n      outFilter,\n      timeout: this.options.timeout,\n      fixTime: !this.options.time,\n      outMap,\n      token: this.options.token,\n      ping: this.options.ping\n    })\n\n    if (/^ws:\\/\\//.test(this.options.server) && !opts.allowDangerousProtocol) {\n      let unbindEnvTest = this.node.on('state', () => {\n        if (this.node.state === 'synchronized') {\n          unbindEnvTest()\n          if (this.node.remoteHeaders.env !== 'development') {\n            console.error(\n              'Without SSL, old proxies block WebSockets. ' +\n                'Use WSS for Logux or set allowDangerousProtocol option.'\n            )\n            this.destroy()\n          }\n        }\n      })\n    }\n\n    this.node.on('debug', (type, stack) => {\n      if (type === 'error') {\n        console.error('Error on Logux server:\\n', stack)\n      }\n    })\n\n    let disconnected = true\n    this.node.on('state', () => {\n      let state = this.node.state\n      if (state === 'synchronized' || state === 'sending') {\n        if (disconnected) {\n          disconnected = false\n          for (let i in this.subscriptions) {\n            let action = JSON.parse(i)\n            let since = this.last[action.channel]\n            if (since) action.since = since\n            this.log.add(action, { sync: true, resubscribe: true })\n          }\n        }\n      } else if (this.node.state === 'disconnected') {\n        disconnected = true\n      }\n    })\n\n    this.onUnload = this.onUnload.bind(this)\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('unload', this.onUnload)\n    }\n\n    this.processing = {}\n  }\n\n  get state() {\n    return this.node.state\n  }\n\n  get connected() {\n    return this.state !== 'disconnected' && this.state !== 'connecting'\n  }\n\n  start() {\n    this.cleanPrevActions()\n    this.node.connection.connect()\n  }\n\n  sync(action, meta = {}) {\n    meta.sync = true\n    if (typeof meta.id === 'undefined') {\n      meta.id = this.log.generateId()\n    }\n\n    this.log.add(action, meta)\n    return track(this, meta.id)\n  }\n\n  type(type, listener, opts) {\n    return this.log.type(type, listener, opts)\n  }\n\n  on(event, listener) {\n    if (event === 'state') {\n      return this.node.emitter.on(event, listener)\n    } else if (event === 'user') {\n      return this.emitter.on(event, listener)\n    } else {\n      return this.log.emitter.on(event, listener)\n    }\n  }\n\n  changeUser(userId, token) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof userId !== 'string') {\n        throw new Error('userId must be a string')\n      }\n      if (userId.includes(':')) {\n        throw new Error('userId can’t contain colon character')\n      }\n    }\n\n    let wasConnected = this.node.connected\n    if (wasConnected) this.node.connection.disconnect('destroy')\n\n    this.options.userId = userId\n    this.options.token = token\n    this.clientId = userId + ':' + this.getClientId()\n    this.nodeId = this.clientId + ':' + this.tabId\n\n    this.log.nodeId = this.nodeId\n    this.node.localNodeId = this.nodeId\n    this.node.options.token = token\n\n    this.emitter.emit('user', userId)\n    if (wasConnected) this.node.connection.connect()\n  }\n\n  waitFor(state) {\n    if (this.state === state) {\n      return Promise.resolve()\n    }\n    return new Promise(resolve => {\n      let unbind = this.on('state', () => {\n        if (this.state === state) {\n          unbind()\n          resolve()\n        }\n      })\n    })\n  }\n\n  destroy() {\n    this.onUnload()\n    this.node.destroy()\n    clearInterval(this.pinging)\n    if (typeof window !== 'undefined' && window.removeEventListener) {\n      window.removeEventListener('unload', this.onUnload)\n    }\n  }\n\n  clean() {\n    this.destroy()\n    return this.log.store.clean ? this.log.store.clean() : Promise.resolve()\n  }\n\n  cleanPrevActions() {\n    if (!this.isLocalStorage) return\n\n    for (let i in localStorage) {\n      let prefix = this.options.prefix + ':tab:'\n      if (i.slice(0, prefix.length) === prefix) {\n        let time = parseInt(localStorage.getItem(i))\n        if (Date.now() - time > this.tabTimeout) {\n          cleanTabActions(this, i.slice(prefix.length))\n        }\n      }\n    }\n  }\n\n  onUnload() {\n    if (this.pinging) cleanTabActions(this, this.tabId)\n  }\n\n  getClientId() {\n    return nanoid(8)\n  }\n}\n","import { LoguxError, actionEvents } from '@logux/core'\n\nimport { Client } from '../client/index.js'\n\nfunction storageKey(client, name) {\n  return client.options.prefix + ':' + client.options.userId + ':' + name\n}\n\nfunction sendToTabs(client, event, data) {\n  if (!client.isLocalStorage) return\n  let key = storageKey(client, event)\n  let json = JSON.stringify(data)\n  try {\n    localStorage.setItem(key, json)\n  } catch (e) {\n    console.error(e)\n    client.isLocalStorage = false\n    client.role = 'leader'\n    client.emitter.emit('role')\n    client.node.connection.connect()\n  }\n}\n\nfunction getLeader(client) {\n  let data = localStorage.getItem(storageKey(client, 'leader'))\n  let json = []\n  if (typeof data === 'string') json = JSON.parse(data)\n  return json\n}\n\nfunction leaderPing(client) {\n  sendToTabs(client, 'leader', [client.tabId, Date.now()])\n}\n\nfunction onDeadLeader(client) {\n  if (client.state !== 'disconnected') {\n    setState(client, 'disconnected')\n  }\n  startElection(client)\n}\n\nfunction watchForLeader(client) {\n  clearTimeout(client.watching)\n  client.watching = setTimeout(() => {\n    if (!isActiveLeader(client)) {\n      onDeadLeader(client)\n    } else {\n      watchForLeader(client)\n    }\n  }, client.roleTimeout)\n}\n\nfunction compareSubprotocols(left, right) {\n  let leftParts = left.split('.')\n  let rightParts = right.split('.')\n  for (let i = 0; i < 3; i++) {\n    let leftNumber = parseInt(leftParts[i] || 0)\n    let rightNumber = parseInt(rightParts[i] || 0)\n    if (leftNumber > rightNumber) {\n      return 1\n    } else if (leftNumber < rightNumber) {\n      return -1\n    }\n  }\n  return 0\n}\n\nfunction setRole(client, role) {\n  if (client.role !== role) {\n    let node = client.node\n    client.role = role\n\n    clearTimeout(client.watching)\n    if (role === 'leader') {\n      localStorage.removeItem(storageKey(client, 'state'))\n      client.leadership = setInterval(() => {\n        if (!client.unloading) leaderPing(client)\n      }, client.leaderPing)\n      node.connection.connect()\n    } else {\n      clearTimeout(client.elections)\n      clearInterval(client.leadership)\n\n      if (node.state !== 'disconnected') {\n        client.node.connection.disconnect()\n      }\n    }\n\n    if (role === 'follower') {\n      let state = 'disconnected'\n      let json = localStorage.getItem(storageKey(client, 'state'))\n      if (json && json !== null) state = JSON.parse(json)\n      if (state !== client.state) {\n        client.state = state\n        client.emitter.emit('state')\n      }\n    }\n\n    client.emitter.emit('role')\n  }\n}\n\nfunction isActiveLeader(client) {\n  let leader = getLeader(client)\n  return leader[1] && leader[1] >= Date.now() - client.leaderTimeout\n}\n\nfunction startElection(client) {\n  leaderPing(client)\n  setRole(client, 'candidate')\n  client.elections = setTimeout(() => {\n    let data = getLeader(client, 'leader')\n    if (data[0] === client.tabId) {\n      setRole(client, 'leader')\n    } else {\n      setRole(client, 'follower')\n      watchForLeader(client)\n    }\n  }, client.electionDelay)\n}\n\nfunction setState(client, state) {\n  client.state = state\n  client.emitter.emit('state')\n  sendToTabs(client, 'state', client.state)\n}\n\nfunction isMemory(store) {\n  return Array.isArray(store.entries) && Array.isArray(store.added)\n}\n\nexport class CrossTabClient extends Client {\n  constructor(opts = {}) {\n    super(opts)\n\n    this.role = 'candidate'\n\n    this.roleTimeout = 3000 + Math.floor(Math.random() * 1000)\n    this.leaderTimeout = 5000\n    this.leaderPing = 2000\n    this.electionDelay = 1000\n\n    this.leaderState = this.node.state\n\n    this.node.on('state', () => {\n      if (this.role === 'leader') {\n        setState(this, this.node.state)\n      }\n    })\n\n    this.log.on('add', (action, meta) => {\n      actionEvents(this.emitter, 'add', action, meta)\n      if (meta.tab !== this.tabId) {\n        sendToTabs(this, 'add', [this.tabId, action, meta])\n      }\n    })\n    this.log.on('clean', (action, meta) => {\n      actionEvents(this.emitter, 'clean', action, meta)\n    })\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('storage', e => this.onStorage(e))\n      window.addEventListener('unload', e => this.onUnload(e))\n    }\n\n    if (this.isLocalStorage) {\n      let subprotocolKey = storageKey(this, 'subprotocol')\n      if (localStorage.getItem(subprotocolKey) !== this.options.subprotocol) {\n        sendToTabs(this, 'subprotocol', this.options.subprotocol)\n      }\n    }\n  }\n\n  get state() {\n    return this.leaderState\n  }\n\n  set state(value) {\n    this.leaderState = value\n  }\n\n  start() {\n    this.cleanPrevActions()\n\n    if (!this.isLocalStorage) {\n      this.role = 'leader'\n      this.emitter.emit('role')\n      this.node.connection.connect()\n      return\n    }\n\n    if (isActiveLeader(this)) {\n      setRole(this, 'follower')\n      watchForLeader(this)\n    } else {\n      startElection(this)\n    }\n  }\n\n  destroy() {\n    super.destroy()\n\n    clearTimeout(this.watching)\n    clearTimeout(this.elections)\n    clearInterval(this.leadership)\n    if (typeof window !== 'undefined' && window.removeEventListener) {\n      window.removeEventListener('storage', this.onStorage)\n    }\n  }\n\n  clean() {\n    if (this.isLocalStorage) {\n      localStorage.removeItem(storageKey(this, 'add'))\n      localStorage.removeItem(storageKey(this, 'state'))\n      localStorage.removeItem(storageKey(this, 'client'))\n      localStorage.removeItem(storageKey(this, 'leader'))\n    }\n    return super.clean()\n  }\n\n  changeUser(userId, token) {\n    sendToTabs(this, 'user', [this.tabId, userId])\n    super.changeUser(userId, token)\n  }\n\n  type(type, listener, opts = {}) {\n    if (opts.event === 'preadd') {\n      return this.log.type(type, listener, opts)\n    } else {\n      let event = opts.event || 'add'\n      let id = opts.id || ''\n      return this.emitter.on(`${event}-${type}-${id}`, listener)\n    }\n  }\n\n  on(event, listener) {\n    if (event === 'preadd') {\n      return this.log.emitter.on(event, listener)\n    } else {\n      return this.emitter.on(event, listener)\n    }\n  }\n\n  onStorage(e) {\n    if (e.newValue === null) return\n\n    let data\n    if (e.key === storageKey(this, 'add')) {\n      data = JSON.parse(e.newValue)\n      if (data[0] !== this.tabId) {\n        let action = data[1]\n        let meta = data[2]\n        if (!meta.tab || meta.tab === this.tabId) {\n          if (isMemory(this.log.store)) {\n            this.log.store.add(action, meta)\n          }\n          actionEvents(this.emitter, 'add', action, meta)\n          if (this.role === 'leader') {\n            this.node.onAdd(action, meta)\n          }\n        }\n      }\n    } else if (e.key === storageKey(this, 'leader')) {\n      data = JSON.parse(e.newValue)\n      if (data.length === 0) {\n        onDeadLeader(this)\n      } else if (data[0] !== this.tabId && this.role !== 'candidate') {\n        setRole(this, 'follower')\n        watchForLeader(this)\n      }\n    } else if (e.key === storageKey(this, 'state')) {\n      let state = JSON.parse(localStorage.getItem(e.key))\n      if (this.leaderState !== state) {\n        this.leaderState = state\n        this.emitter.emit('state')\n      }\n    } else if (e.key === storageKey(this, 'user')) {\n      data = JSON.parse(e.newValue)\n      if (data[0] !== this.tabId) {\n        this.emitter.emit('user', data[1])\n      }\n    } else if (e.key === storageKey(this, 'subprotocol')) {\n      let other = JSON.parse(e.newValue)\n      let compare = compareSubprotocols(this.options.subprotocol, other)\n      if (compare === 1) {\n        sendToTabs(this, 'subprotocol', this.options.subprotocol)\n      } else if (compare === -1) {\n        let err = new LoguxError(\n          'wrong-subprotocol',\n          { supported: other, used: this.options.subprotocol },\n          true\n        )\n        this.node.emitter.emit('error', err)\n      }\n    }\n  }\n\n  onUnload() {\n    if (this.role === 'leader') {\n      this.unloading = true\n      sendToTabs(this, 'leader', [])\n    }\n    super.onUnload()\n  }\n\n  getClientId() {\n    let key = storageKey(this, 'client')\n    if (!this.isLocalStorage) {\n      return super.getClientId()\n    } else if (localStorage.getItem(key)) {\n      return localStorage.getItem(key)\n    } else {\n      let clientId = super.getClientId()\n      localStorage.setItem(key, clientId)\n      return clientId\n    }\n  }\n}\n","function block(e) {\n  e.returnValue = 'unsynced'\n  return 'unsynced'\n}\n\nexport function confirm(client) {\n  let disconnected = client.state === 'disconnected'\n  let wait = false\n\n  let update = () => {\n    if (client.state === 'disconnected') {\n      disconnected = true\n    } else if (client.state === 'synchronized') {\n      disconnected = false\n      wait = false\n    }\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      if (client.role !== 'follower' && wait && disconnected) {\n        window.addEventListener('beforeunload', block)\n      } else {\n        window.removeEventListener('beforeunload', block)\n      }\n    }\n  }\n\n  let unbind = []\n  unbind.push(client.on('role', update))\n  unbind.push(client.on('state', update))\n  update()\n\n  unbind.push(\n    client.on('add', (action, meta) => {\n      if (action.type === 'logux/subscribe') {\n        return\n      } else if (action.type === 'logux/unsubscribe') {\n        return\n      }\n      if (disconnected && meta.sync && meta.added) {\n        wait = true\n        update()\n      }\n    })\n  )\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","import { parseId } from '@logux/core'\n\nfunction bold(string) {\n  return '%c' + string + '%c'\n}\n\nfunction showLog(text, details) {\n  text = '%cLogux%c ' + text\n  let args = Array.from(text.match(/%c/g)).map((_, i) => {\n    if (i === 0) {\n      return 'color:#ffa200;font-weight:bold'\n    } else if (i % 2 === 0) {\n      return 'font-weight:bold'\n    } else {\n      return 'font-weight:normal'\n    }\n  })\n\n  if (details) {\n    console.groupCollapsed(text, ...args)\n    for (let name in details) {\n      if (typeof details[name] === 'string') {\n        console.log(name + ': %c' + details[name], 'font-weight:bold')\n      } else {\n        console.log(name, details[name])\n      }\n    }\n    console.groupEnd()\n  } else {\n    console.log(text, ...args)\n  }\n}\n\nexport function log(client, messages = {}) {\n  let node = client.node\n\n  let sent = {}\n  let unbind = []\n  let prevConnected = false\n\n  if (messages.state !== false) {\n    unbind.push(\n      client.on('state', () => {\n        let details\n        if (client.state === 'connecting' && node.connection.url) {\n          details = {\n            'Node ID': node.localNodeId,\n            'Server': node.connection.url\n          }\n        } else if (client.connected && !prevConnected && node.remoteNodeId) {\n          prevConnected = true\n          details = {\n            'Server ID': node.remoteNodeId\n          }\n        } else if (!client.connected) {\n          prevConnected = false\n        }\n        showLog('state is ' + bold(client.state), details)\n      })\n    )\n  }\n\n  if (messages.role !== false) {\n    unbind.push(\n      client.on('role', () => {\n        showLog('tab role is ' + bold(client.role))\n      })\n    )\n  }\n\n  let cleaned = {}\n  let ignore = (messages.ignoreActions || []).reduce((all, i) => {\n    all[i] = true\n    return all\n  }, {})\n\n  if (messages.add !== false) {\n    unbind.push(\n      client.on('add', (action, meta) => {\n        if (meta.tab && meta.tab !== client.tabId) return\n        if (ignore[action.type]) return\n        if (meta.sync) sent[meta.id] = action\n        let message\n        if (action.type === 'logux/subscribe') {\n          message = 'subscribing to ' + bold(action.channel) + ' channel'\n          if (Object.keys(action).length === 2) {\n            showLog(message)\n          } else {\n            showLog(message, { Action: action })\n          }\n        } else if (action.type === 'logux/subscribed') {\n          showLog(\n            'subscribed to ' + bold(action.channel) + ' channel by server'\n          )\n        } else if (action.type === 'logux/unsubscribe') {\n          message = 'unsubscribed from channel ' + bold(action.channel)\n          if (Object.keys(action).length === 2) {\n            showLog(message)\n          } else {\n            showLog(message, { Action: action })\n          }\n        } else if (action.type === 'logux/processed') {\n          if (sent[action.id]) {\n            let processed = sent[action.id]\n            let details = {\n              'Processed Action': processed\n            }\n            if (processed.type === 'logux/subscribe') {\n              showLog(\n                'subscribed to ' + bold(processed.channel) + ' channel',\n                details\n              )\n            } else {\n              showLog(\n                'action ' + bold(processed.type) + ' was processed',\n                details\n              )\n            }\n            delete sent[action.id]\n          } else {\n            showLog('action ' + bold(action.id) + ' was processed')\n          }\n        } else if (action.type === 'logux/undo') {\n          if (action.action.type === 'logux/subscribe') {\n            message = 'subscription to ' + bold(action.action.channel)\n          } else {\n            message = 'action ' + bold(action.action.type)\n          }\n          message += ' was undone because of ' + bold(action.reason)\n          let details = {\n            'Reverted Action': action.action\n          }\n          if (Object.keys(action).length > 4) {\n            details['Undo Action'] = action\n          }\n          if (sent[action.id]) {\n            delete sent[action.id]\n          }\n          showLog(message, details)\n        } else {\n          let details = { Action: action, Meta: meta }\n          message = 'added '\n          if (meta.reasons.length === 0) {\n            cleaned[meta.id] = true\n            message += 'and cleaned '\n          }\n          message += bold(action.type) + ' action'\n          let { nodeId } = parseId(meta.id)\n          if (nodeId !== node.localNodeId) {\n            details.From = nodeId\n          }\n          showLog(message, details)\n        }\n      })\n    )\n  }\n\n  if (messages.user !== false) {\n    unbind.push(\n      client.on('user', userId => {\n        let message = 'user ID was changed to ' + bold(userId)\n        showLog(message, { 'Node ID': client.nodeId })\n      })\n    )\n  }\n\n  if (messages.clean !== false) {\n    unbind.push(\n      client.on('clean', (action, meta) => {\n        if (cleaned[meta.id]) {\n          delete cleaned[meta.id]\n          return\n        }\n        if (meta.tab && meta.tab !== client.id) return\n        if (ignore[action.type]) return\n        if (action.type.startsWith('logux/')) return\n        let message = 'cleaned ' + bold(action.type) + ' action'\n        showLog(message, { Action: action, Meta: meta })\n      })\n    )\n  }\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('jGf7V') + require('./helpers/bundle-manifest').resolve(\"9KQjq\");","module.exports = require('./helpers/bundle-url').getBundleURL('jGf7V') + require('./helpers/bundle-manifest').resolve(\"dVjUq\");","module.exports = require('./helpers/bundle-url').getBundleURL('jGf7V') + require('./helpers/bundle-manifest').resolve(\"gWDF8\");","module.exports = require('./helpers/bundle-url').getBundleURL('jGf7V') + require('./helpers/bundle-manifest').resolve(\"6EP5R\");","import refresh from './refresh.svg'\nimport success from './success.svg'\nimport offline from './offline.svg'\nimport error from './error.svg'\n\nexport let badgeStyles = {\n  base: {\n    position: 'fixed',\n    width: '15.4em',\n    height: '4em',\n    lineHeight: '1.4',\n    margin: '1.5em',\n    paddingLeft: '4.2em',\n    opacity: '0.8',\n    borderRadius: '0.4em',\n    color: '#fff',\n    fontFamily: 'Helvetica Neue, sans-serif',\n    zIndex: '999',\n    backgroundPosition: '1.2em center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '1.8em'\n  },\n  text: {\n    display: 'table-cell',\n    verticalAlign: 'middle',\n    height: '4em'\n  },\n  synchronized: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + success + ')'\n  },\n  disconnected: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + offline + ')'\n  },\n  wait: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + offline + ')'\n  },\n  sending: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + refresh + ')'\n  },\n  error: {\n    backgroundColor: '#F42A2A',\n    backgroundImage: 'url(' + error + ')'\n  },\n  protocolError: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + refresh + ')'\n  }\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('jGf7V') + require('./helpers/bundle-manifest').resolve(\"d2JJm\");","module.exports = require('./helpers/bundle-url').getBundleURL('jGf7V') + require('./helpers/bundle-manifest').resolve(\"2YULu\");","module.exports = require('./helpers/bundle-url').getBundleURL('jGf7V') + require('./helpers/bundle-manifest').resolve(\"ht41N\");","import { MemoryStore, ClientNode, LocalPair, BaseNode, Log } from '@logux/core'\n\nimport {\n  CrossTabClient,\n  attention,\n  badgeEn,\n  confirm,\n  favicon,\n  status,\n  badge,\n  log\n} from '../../index.js'\nimport { badgeStyles } from '../../badge/styles/index.js'\nimport faviconOffline from './offline.png'\nimport faviconNormal from './normal.png'\nimport faviconError from './error.png'\n\nlet pair = new LocalPair(500)\n\nlet serverLog = new Log({\n  store: new MemoryStore(),\n  nodeId: 'server:uuid'\n})\nnew BaseNode('server:uuid', serverLog, pair.right)\n\nserverLog.on('add', (action, meta) => {\n  if (action.type !== 'logux/processed') {\n    setTimeout(() => {\n      serverLog.add({ type: 'logux/processed', id: meta.id })\n    }, 500)\n  }\n})\n\nlet client = new CrossTabClient({\n  subprotocol: location.hash.slice(1) || '1.0.0',\n  userId: '10',\n  server: 'wss://example.com/'\n})\n\nlet node = new ClientNode(client.node.localNodeId, client.log, pair.left)\nnode.connection.url = 'wss://example.com/'\nnode.emitter = client.node.emitter\nclient.node = node\n\nattention(client)\nconfirm(client)\nfavicon(client, {\n  normal: faviconNormal,\n  offline: faviconOffline,\n  error: faviconError\n})\nbadge(client, {\n  messages: badgeEn,\n  styles: badgeStyles\n})\nlog(client)\nstatus(client, s => {\n  document.all.status.innerText = s\n})\n\nlet count = 0\nfunction emoji(state) {\n  if (state === 'disconnected') {\n    return '😴'\n  } else if (state === 'connecting') {\n    return '🔌'\n  } else {\n    return '😊'\n  }\n}\nfunction role(value) {\n  return value.slice(0, 1).toUpperCase()\n}\nfunction updateTitle() {\n  document.title = emoji(client.state) + ' ' + role(client.role) + ' ' + count\n}\n\nclient.on('state', () => {\n  document.all.connection.checked = client.connected\n  updateTitle()\n})\nclient.on('role', () => {\n  updateTitle()\n  document.all.connection.disabled = client.role !== 'leader'\n})\nclient.on('add', action => {\n  if (action.type === 'TICK') count++\n  updateTitle()\n})\nclient.on('clean', action => {\n  if (action.type === 'TICK') count--\n  updateTitle()\n})\n\nclient.log\n  .each(action => {\n    if (action.type === 'TICK') count++\n  })\n  .then(() => {\n    updateTitle()\n  })\n\nclient.on('role', () => {\n  let isLeader = client.role === 'leader'\n  document.all.connection.disabled = !isLeader\n  document.all.disabled.style.display = isLeader ? 'none' : 'inline'\n})\n\nclient.start()\n\ndocument.all.connection.onchange = e => {\n  if (e.target.checked) {\n    client.node.connection.connect()\n  } else {\n    client.node.connection.disconnect()\n  }\n}\n\ndocument.all.add.onclick = () => {\n  client.log.add({ type: 'TICK' }, { reasons: ['tick'], sync: true })\n}\n\ndocument.all.clean.onclick = () => {\n  client.log.removeReason('tick')\n}\n\ndocument.all.error.onclick = () => {\n  setTimeout(() => {\n    client.log.add({ type: 'logux/undo', reason: 'error' })\n  }, 3000)\n}\n\ndocument.all.denied.onclick = () => {\n  setTimeout(() => {\n    client.log.add({ type: 'logux/undo', reason: 'denied' })\n  }, 3000)\n}\n\ndocument.all.serverError.onclick = () => {\n  setTimeout(() => {\n    pair.right.send(['error', 'wrong-format'])\n  }, 3000)\n}\n\ndocument.all.subprotocolError.onclick = () => {\n  client.node.syncError('wrong-subprotocol', {\n    supported: '2.x',\n    used: '1.0.0'\n  })\n}\n\nif (client.options.subprotocol === '1.0.1') {\n  document.all.subprotocolClient.disabled = true\n} else {\n  document.all.subprotocolClient.onclick = () => {\n    window.open(location.toString() + '#1.0.1', '_blank')\n  }\n}\n","export function track(client, id) {\n  if (client.processing[id]) return client.processing[id][0]\n\n  let resolveCallback, rejectCallback\n  let promise = new Promise((resolve, reject) => {\n    resolveCallback = resolve\n    rejectCallback = reject\n  })\n  client.processing[id] = [promise, resolveCallback, rejectCallback]\n\n  return promise\n}\n","export function attention(client) {\n  let doc = document\n  let originTitle = false\n  let unbind = []\n  let timeout = false\n\n  let restoreTitle = () => {\n    if (originTitle) {\n      doc.title = originTitle\n      originTitle = false\n    }\n  }\n\n  let blink = () => {\n    if (doc.hidden && !originTitle) {\n      originTitle = doc.title\n      doc.title = '* ' + doc.title\n    } else {\n      restoreTitle()\n    }\n\n    if (doc.hidden) timeout = setTimeout(blink, 1000)\n  }\n\n  let tabListener = () => {\n    if (!doc.hidden && timeout) {\n      timeout = clearTimeout(timeout)\n      restoreTitle()\n    }\n  }\n\n  if (doc && typeof doc.hidden !== 'undefined') {\n    unbind.push(\n      client.node.on('error', error => {\n        if (error.type !== 'timeout' && !timeout) {\n          blink()\n        }\n      })\n    )\n\n    unbind.push(\n      client.on('add', action => {\n        if (action.type === 'logux/undo' && action.reason && !timeout) {\n          blink()\n        }\n      })\n    )\n\n    document.addEventListener('visibilitychange', tabListener, false)\n    unbind.push(() => {\n      document.removeEventListener('visibilitychange', tabListener, false)\n    })\n  }\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","export function favicon(client, links) {\n  let normal = links.normal\n  let offline = links.offline\n  let error = links.error\n\n  let unbind = []\n  let doc = document\n  let fav = false\n  let prevFav = false\n\n  function update() {\n    if (client.connected && prevFav !== normal) {\n      fav.href = prevFav = normal\n    } else if (\n      !client.connected &&\n      offline &&\n      prevFav !== offline &&\n      prevFav !== error\n    ) {\n      fav.href = prevFav = offline\n    }\n  }\n\n  function setError() {\n    if (error && prevFav !== error) {\n      fav.href = prevFav = error\n    }\n  }\n\n  if (doc) {\n    fav = doc.querySelector('link[rel~=\"icon\"]')\n\n    if (typeof normal === 'undefined') {\n      normal = fav ? fav.href : ''\n    }\n\n    if (!fav) {\n      fav = doc.createElement('link')\n      fav.rel = 'icon'\n      fav.href = ''\n      doc.head.appendChild(fav)\n    }\n\n    unbind.push(client.on('state', update))\n    update()\n\n    unbind.push(\n      client.on('add', action => {\n        if (action.type === 'logux/undo' && action.reason) setError()\n      })\n    )\n\n    unbind.push(\n      client.node.on('error', err => {\n        if (err.type !== 'timeout') setError()\n      })\n    )\n  }\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n"],"names":["$74281f9d72f8a5f9$export$6503ec6e8aabbaf","$74281f9d72f8a5f9$export$f7ad0328861e2f03","$74281f9d72f8a5f9$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$a720697d0a54ac3a$export$c944a4526d4ed4f3","events","emit","event","args","this","forEach","on","cb","push","filter","$b08b24fe0ae9b392$export$b283a0679303f4ba","emitter","action","meta","type","$b08b24fe0ae9b392$export$ce30dbb46644d06c","opts","nodeId","lastTime","sequence","store","listener","newId","generateId","time","parseInt","reasons","keepLast","removeReason","olderThan","action2","byId","addedMeta","add","now","Date","each","callback","order","Promise","resolve","nextPage","get","result","page","entries","entry","next","bind","diff","k","remove","changeMeta","reason","criteria","$d41e5596b89550a7$export$a5c06b7241b24c94","firstMeta","secondMeta","first","split","second","firstNode","secondNode","firstCounter","secondCounter","firstNodeTime","secondNodeTime","$7084e85547fecb7a$export$ea0df116fa892998","url","Class","connected","WebSocket","init","ws","onerror","error","onclose","onmessage","data","connect","undefined","onopen","disconnect","close","send","message","readyState","OPEN","stringify","err","received","$2cbe0fffe1d0ea3f$var$checkIndex","index","indexes","added","$2cbe0fffe1d0ea3f$var$forEachIndex","$2cbe0fffe1d0ea3f$var$isDefined","$2cbe0fffe1d0ea3f$var$insert","lastAdded","$2cbe0fffe1d0ea3f$var$eject","start","end","middle","otherAdded","splice","$2cbe0fffe1d0ea3f$var$find","list","value","$2cbe0fffe1d0ea3f$export$b72d712fed4d036d","lastReceived","lastSent","otherMeta","indexList","j","findIndex","item","created","indexed","slice","key","removed","reasonPos","indexOf","c","youngerThan","minAdded","maxAdded","removedAdded","map","m","removing","includes","sent","values","$70e2c9e8331327dc$export$2abef671c5ad47c8","options","supported","used","super","name","description","describe","captureStackTrace","$75dd5efad971c248$var$auth","node","token","auth","authenticated","remoteHeaders","unauthenticated","onMessage","sendError","destroy","e","$75dd5efad971c248$var$checkProtocol","ver","remoteProtocol","minProtocol","$75dd5efad971c248$var$emitEvent","$192b57422b82239b$var$NOT_TO_THROW","timeout","$192b57422b82239b$var$BEFORE_AUTH","$192b57422b82239b$var$syncMappedEvent","lastAddedCache","outMap","changed","sendSync","$192b57422b82239b$export$410b0c854570d131","log","connection","remoteNodeId","remoteSubprotocol","localProtocol","localNodeId","ping","timeFix","syncing","state","timeouts","throwsError","unbind","onAdd","onConnecting","onConnect","onDisconnect","initialized","initializing","initialize","localHeaders","catch","waitFor","clearTimeout","pingTimeout","endTimeout","setLocalHeaders","headers","sendHeaders","msg","delayPing","setState","outFilter","syncError","startTimeout","ms","setTimeout","shift","sendPing","lastSynced","promises","then","r","all","syncSinceQuery","setLastSent","setLastSynced","setLastReceived","synced","getLastSynced","getLastAdded","sendDuilian","$192b57422b82239b$var$DUILIANS","duilianMessage","line","prototype","sendConnect","subprotocol","fixTime","connectSended","sendConnected","connectMessage","baseTime","syncSince","connectedMessage","authTime","roundTrip","Math","floor","originMeta","unshift","concat","sendSynced","syncMessage","join","process","inMap","meta2","filtered","inFilter","res","syncedMessage","pingMessage","pongMessage","sendDebug","debugMessage","errorMessage","headersMessage","$b95097f236f7d204$var$DEFAULT_OPTIONS","$b95097f236f7d204$export$b4fa87e80e36ef61","$47f5f424eab98e26$var$LocalConnection","pair","other","right","left","delay","$d104e4cbe13faf84$var$DEFAULT_OPTIONS","minDelay","maxDelay","attempts","Infinity","$d104e4cbe13faf84$var$FATAL_ERRORS","$d104e4cbe13faf84$export$495c43d07cb6ba9a","reconnecting","connecting","reconnect","timer","visibility","document","hidden","navigator","onLine","window","addEventListener","removeEventListener","nextDelay","base","rand","random","deviation","min","$54854e226b4e94aa$export$bf3b66d897b985f1","parts","userId","clientId","$381d0c76d494d1d2$export$471f7ae5c4103ae1","client","observable","disconnected","wait","old","duration","processing","setSynchronized","changeState","sync","$43ed9ae1624b5e4a$var$injectStyles","element","styles","style","$43ed9ae1624b5e4a$var$RESET","boxSizing","textIndent","textTransform","wordSpacing","letterSpacing","fontStyle","fontVariant","fontWeight","lineHeight","$2581638f2b8f6ec5$export$ac4959f4f1338dfc","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","$936f715570c45cc6$export$5e6967d3d1d0f8e8","$934683be227bc5f9$var$ALLOWED_META","$934683be227bc5f9$var$tabPing","localStorage","setItem","prefix","tabId","$934683be227bc5f9$var$cleanTabActions","isLocalStorage","removeItem","$3f4a150e2a2d6e8c$var$storageKey","$3f4a150e2a2d6e8c$var$sendToTabs","json","console","role","$3f4a150e2a2d6e8c$var$getLeader","getItem","$3f4a150e2a2d6e8c$var$leaderPing","$3f4a150e2a2d6e8c$var$onDeadLeader","$3f4a150e2a2d6e8c$var$setState","$3f4a150e2a2d6e8c$var$startElection","$3f4a150e2a2d6e8c$var$watchForLeader","watching","$3f4a150e2a2d6e8c$var$isActiveLeader","roleTimeout","$3f4a150e2a2d6e8c$var$setRole","leadership","setInterval","unloading","leaderPing","elections","clearInterval","leader","leaderTimeout","electionDelay","$92c221575bcb6155$var$block","returnValue","$b89f4eef5869bc81$var$bold","string","$b89f4eef5869bc81$var$showLog","text","details","Array","from","match","_","groupCollapsed","groupEnd","$8c20ce6fb20c7651$export$bdfd709ae4826697","$8c20ce6fb20c7651$var$bundleURL","$8c20ce6fb20c7651$var$getBaseURL","replace","matches","stack","$8c20ce6fb20c7651$var$getBundleURL","$6986271c0d4d215a$exports","getBundleURL","$1216d495bb15493a$exports","$83498c2fbf775fe5$exports","$6652770df3e19312$exports","$8ea0e945c1553d5f$export$92de9191ffb7ae9b","position","width","height","margin","paddingLeft","opacity","borderRadius","color","fontFamily","zIndex","backgroundPosition","backgroundRepeat","backgroundSize","display","verticalAlign","synchronized","backgroundColor","backgroundImage","$parcel$interopDefault","sending","protocolError","$e6c1c7bfed60d28c$exports","$cd4dff390286f864$exports","$1859bde6fd185219$exports","$d4931476f3d38f0e$var$pair","$d4931476f3d38f0e$var$serverLog","$d4931476f3d38f0e$var$client","cleanPrevActions","resolveCallback","rejectCallback","promise","reject","$a13a9584f86e1d87$export$6b2a7d5132615086","changeUser","wasConnected","getClientId","onUnload","pinging","clean","tabTimeout","lastId","nextLog","resubscribe","last","subscriptions","subscribing","unsubscribing","unsubscription","subscribers","subscription","channel","channels","tabPing","server","async","test","allowDangerousProtocol","unbindEnvTest","env","since","leaderState","onStorage","newValue","tab","isArray","compare","leftParts","rightParts","leftNumber","rightNumber","$3f4a150e2a2d6e8c$var$compareSubprotocols","subprotocolKey","location","hash","$d4931476f3d38f0e$var$node","doc","originTitle","restoreTitle","title","blink","tabListener","$a1bf8e76beec93ff$export$45b92471da762af7","update","$92c221575bcb6155$export$715f9d76bb8c1fea","links","normal","offline","fav","prevFav","href","setError","querySelector","createElement","rel","head","appendChild","$9140c3b5d7d1f5f6$export$d1d228f217d37317","messages","widget","setAttribute","top","transform","pos","$43ed9ae1624b5e4a$var$setPosition","show","innerHTML","denied","body","$43ed9ae1624b5e4a$export$4aebd143f31d0c0d","prevConnected","Server","cleaned","ignore","ignoreActions","reduce","Action","processed","Meta","From","user","startsWith","$b89f4eef5869bc81$export$bef1f36f5486a6a3","s","status","innerText","$d4931476f3d38f0e$var$count","$d4931476f3d38f0e$var$updateTitle","checked","disabled","isLeader","onchange","target","onclick","serverError","subprotocolError","subprotocolClient","open"],"version":3,"file":"index.cc7985fb.js.map"}