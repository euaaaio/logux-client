{"mappings":"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","sources":["node_modules/.pnpm/@parcel+runtime-js@2.0.1_@parcel+core@2.0.1/node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/.pnpm/@parcel+runtime-js@2.0.1_@parcel+core@2.0.1/node_modules/@parcel/runtime-js/lib/runtime-049c92e338342cee.js","node_modules/.pnpm/nanoevents@6.0.2/node_modules/nanoevents/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/log/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/is-first-older/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/ws-connection/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/memory-store/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/logux-error/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/connect/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/base-node/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/sync/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/ping/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/debug/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/error/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/headers/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/client-node/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/local-pair/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/reconnect/index.js","node_modules/.pnpm/@logux+core@0.7.2/node_modules/@logux/core/parse-id/index.js","status/index.js","badge/index.js","node_modules/.pnpm/nanoid@3.1.30/node_modules/nanoid/index.browser.js","logux-undo-error/index.js","client/index.js","cross-tab-client/index.js","confirm/index.js","log/index.js","node_modules/.pnpm/@parcel+runtime-js@2.0.1_@parcel+core@2.0.1/node_modules/@parcel/runtime-js/lib/runtime-bba6d1e5fb5aec58.js","node_modules/.pnpm/@parcel+runtime-js@2.0.1_@parcel+core@2.0.1/node_modules/@parcel/runtime-js/lib/runtime-cff18ed4cada7e17.js","node_modules/.pnpm/@parcel+runtime-js@2.0.1_@parcel+core@2.0.1/node_modules/@parcel/runtime-js/lib/runtime-aa3f07d6f2fb58b5.js","node_modules/.pnpm/@parcel+runtime-js@2.0.1_@parcel+core@2.0.1/node_modules/@parcel/runtime-js/lib/runtime-c31475119635e562.js","badge/styles/index.js","node_modules/.pnpm/@parcel+runtime-js@2.0.1_@parcel+core@2.0.1/node_modules/@parcel/runtime-js/lib/runtime-4d4d7cc23529ba8f.js","node_modules/.pnpm/@parcel+runtime-js@2.0.1_@parcel+core@2.0.1/node_modules/@parcel/runtime-js/lib/runtime-96e102d085ef7a3f.js","node_modules/.pnpm/@parcel+runtime-js@2.0.1_@parcel+core@2.0.1/node_modules/@parcel/runtime-js/lib/runtime-0820a3a9f436125c.js","test/demo/index.js","track/index.js","attention/index.js","favicon/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"g3rFI\\\":\\\"index.3f1a31ce.js\\\",\\\"6oYAh\\\":\\\"refresh.f7f11930.svg\\\",\\\"iEz5C\\\":\\\"success.5585cf5f.svg\\\",\\\"cULX8\\\":\\\"offline.c7da2f9d.svg\\\",\\\"aF8lW\\\":\\\"error.8319e405.svg\\\",\\\"joALL\\\":\\\"offline.203f1963.png\\\",\\\"8ySKy\\\":\\\"normal.60452f34.png\\\",\\\"9op2g\\\":\\\"error.a2ca88ad.png\\\"}\"));","export let createNanoEvents = () => ({\n  events: {},\n  emit(event, ...args) {\n    ;(this.events[event] || []).forEach(i => i(...args))\n  },\n  on(event, cb) {\n    ;(this.events[event] = this.events[event] || []).push(cb)\n    return () =>\n      (this.events[event] = (this.events[event] || []).filter(i => i !== cb))\n  }\n})\n","import { createNanoEvents } from 'nanoevents'\n\nexport function actionEvents(emitter, event, action, meta) {\n  if (action.id) {\n    emitter.emit(`${event}-${action.type}-${action.id}`, action, meta)\n  }\n  emitter.emit(`${event}-${action.type}-`, action, meta)\n  emitter.emit(event, action, meta)\n}\n\nexport class Log {\n  constructor(opts = {}) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof opts.nodeId === 'undefined') {\n        throw new Error('Expected node ID')\n      }\n      if (typeof opts.store !== 'object') {\n        throw new Error('Expected store')\n      }\n      if (opts.nodeId.includes(' ')) {\n        throw new Error('Space is prohibited in node ID')\n      }\n    }\n\n    this.nodeId = opts.nodeId\n\n    this.lastTime = 0\n    this.sequence = 0\n\n    this.store = opts.store\n\n    this.emitter = createNanoEvents()\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  type(type, listener, opts = {}) {\n    let event = opts.event || 'add'\n    let id = opts.id || ''\n    return this.emitter.on(`${event}-${type}-${id}`, listener)\n  }\n\n  async add(action, meta = {}) {\n    if (typeof action.type === 'undefined') {\n      throw new Error('Expected \"type\" in action')\n    }\n\n    let newId = false\n    if (typeof meta.id === 'undefined') {\n      newId = true\n      meta.id = this.generateId()\n    }\n\n    if (typeof meta.time === 'undefined') {\n      meta.time = parseInt(meta.id)\n    }\n\n    if (typeof meta.reasons === 'undefined') {\n      meta.reasons = []\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(meta.reasons)) {\n        throw new Error('Expected \"reasons\" to be an array of strings')\n      }\n\n      for (let reason of meta.reasons) {\n        if (typeof reason !== 'string') {\n          throw new Error('Expected \"reasons\" to be an array of strings')\n        }\n      }\n\n      if (typeof meta.indexes !== 'undefined') {\n        if (!Array.isArray(meta.indexes)) {\n          throw new Error('Expected \"indexes\" to be an array of strings')\n        }\n\n        for (let index of meta.indexes) {\n          if (typeof index !== 'string') {\n            throw new Error('Expected \"indexes\" to be an array of strings')\n          }\n        }\n      }\n    }\n\n    actionEvents(this.emitter, 'preadd', action, meta)\n\n    if (meta.keepLast) {\n      this.removeReason(meta.keepLast, { olderThan: meta })\n      meta.reasons.push(meta.keepLast)\n    }\n\n    if (meta.reasons.length === 0 && newId) {\n      actionEvents(this.emitter, 'add', action, meta)\n      actionEvents(this.emitter, 'clean', action, meta)\n      return meta\n    } else if (meta.reasons.length === 0) {\n      let [action2] = await this.store.byId(meta.id)\n      if (action2) {\n        return false\n      } else {\n        actionEvents(this.emitter, 'add', action, meta)\n        actionEvents(this.emitter, 'clean', action, meta)\n        return meta\n      }\n    } else {\n      let addedMeta = await this.store.add(action, meta)\n      if (addedMeta === false) {\n        return false\n      } else {\n        actionEvents(this.emitter, 'add', action, meta)\n        return addedMeta\n      }\n    }\n  }\n\n  generateId() {\n    let now = Date.now()\n    if (now <= this.lastTime) {\n      now = this.lastTime\n      this.sequence += 1\n    } else {\n      this.lastTime = now\n      this.sequence = 0\n    }\n    return now + ' ' + this.nodeId + ' ' + this.sequence\n  }\n\n  each(opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = { order: 'created' }\n    }\n\n    let store = this.store\n    return new Promise(resolve => {\n      async function nextPage(get) {\n        let page = await get()\n        let result\n        for (let i = page.entries.length - 1; i >= 0; i--) {\n          let entry = page.entries[i]\n          result = callback(entry[0], entry[1])\n          if (result === false) break\n        }\n\n        if (result === false || !page.next) {\n          resolve()\n        } else {\n          nextPage(page.next)\n        }\n      }\n\n      nextPage(store.get.bind(store, opts))\n    })\n  }\n\n  async changeMeta(id, diff) {\n    for (let k in diff) {\n      if (\n        k === 'id' ||\n        k === 'added' ||\n        k === 'time' ||\n        k === 'subprotocol' ||\n        k === 'indexes'\n      ) {\n        throw new Error('Meta \"' + k + '\" is read-only')\n      }\n    }\n\n    if (diff.reasons && diff.reasons.length === 0) {\n      let entry = await this.store.remove(id)\n      if (entry) {\n        for (let k in diff) entry[1][k] = diff[k]\n        actionEvents(this.emitter, 'clean', entry[0], entry[1])\n      }\n      return !!entry\n    } else {\n      return this.store.changeMeta(id, diff)\n    }\n  }\n\n  removeReason(reason, criteria = {}) {\n    return this.store.removeReason(reason, criteria, (action, meta) => {\n      actionEvents(this.emitter, 'clean', action, meta)\n    })\n  }\n\n  byId(id) {\n    return this.store.byId(id)\n  }\n}\n","export function isFirstOlder(firstMeta, secondMeta) {\n  if (firstMeta && !secondMeta) {\n    return false\n  } else if (!firstMeta && secondMeta) {\n    return true\n  }\n\n  if (firstMeta.time > secondMeta.time) {\n    return false\n  } else if (firstMeta.time < secondMeta.time) {\n    return true\n  }\n\n  let first = firstMeta.id.split(' ')\n  let second = secondMeta.id.split(' ')\n\n  let firstNode = first[1]\n  let secondNode = second[1]\n  if (firstNode > secondNode) {\n    return false\n  } else if (firstNode < secondNode) {\n    return true\n  }\n\n  let firstCounter = parseInt(first[2])\n  let secondCounter = parseInt(second[2])\n  if (firstCounter > secondCounter) {\n    return false\n  } else if (firstCounter < secondCounter) {\n    return true\n  }\n\n  let firstNodeTime = parseInt(first[0])\n  let secondNodeTime = parseInt(second[0])\n  if (firstNodeTime > secondNodeTime) {\n    return false\n  } else if (firstNodeTime < secondNodeTime) {\n    return true\n  }\n\n  return false\n}\n","import { createNanoEvents } from 'nanoevents'\n\nexport class WsConnection {\n  constructor(url, Class, opts) {\n    this.connected = false\n    this.emitter = createNanoEvents()\n    if (Class) {\n      this.Class = Class\n    } else if (typeof WebSocket !== 'undefined') {\n      this.Class = WebSocket\n    } else {\n      throw new Error('No WebSocket support')\n    }\n    this.url = url\n    this.opts = opts\n  }\n\n  init(ws) {\n    ws.onerror = event => {\n      this.emitter.emit('error', event.error || new Error('WS Error'))\n    }\n\n    ws.onclose = () => {\n      this.onclose()\n    }\n\n    ws.onmessage = event => {\n      let data\n      try {\n        data = JSON.parse(event.data)\n      } catch {\n        this.error(event.data)\n        return\n      }\n      this.emitter.emit('message', data)\n    }\n\n    this.ws = ws\n  }\n\n  connect() {\n    if (this.ws) return Promise.resolve()\n\n    this.emitter.emit('connecting')\n    this.init(new this.Class(this.url, undefined, this.opts))\n\n    return new Promise(resolve => {\n      this.ws.onopen = () => {\n        this.connected = true\n        this.emitter.emit('connect')\n        resolve()\n      }\n    })\n  }\n\n  disconnect() {\n    if (this.ws) {\n      this.ws.onclose = undefined\n      this.ws.close()\n      this.onclose()\n    }\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  send(message) {\n    if (this.ws && this.ws.readyState === this.ws.OPEN) {\n      this.ws.send(JSON.stringify(message))\n    } else {\n      this.emitter.emit('error', new Error('WS was closed'))\n    }\n  }\n\n  error(message) {\n    let err = new Error('Wrong message format')\n    err.received = message\n    this.emitter.emit('error', err)\n  }\n\n  onclose() {\n    if (this.ws) {\n      this.connected = false\n      this.emitter.emit('disconnect')\n      this.ws = undefined\n    }\n  }\n}\n","import { isFirstOlder } from '../is-first-older/index.js'\n\nfunction checkIndex(store, index) {\n  if (!store.indexes[index]) {\n    store.indexes[index] = { added: [], entries: [] }\n  }\n}\n\nfunction forEachIndex(meta, cb) {\n  let indexes = meta.indexes\n  if (isDefined(indexes) && indexes.length > 0) {\n    for (let index of indexes) {\n      cb(index)\n    }\n  }\n}\n\nfunction insert(store, entry) {\n  store.lastAdded += 1\n  entry[1].added = store.lastAdded\n  store.added.push(entry)\n  forEachIndex(entry[1], index => {\n    checkIndex(store, index)\n    store.indexes[index].added.push(entry)\n  })\n  return Promise.resolve(entry[1])\n}\n\nfunction eject(store, meta) {\n  let added = meta.added\n  let start = 0\n  let end = store.added.length - 1\n  while (start <= end) {\n    let middle = (end + start) >> 1\n    let otherAdded = store.added[middle][1].added\n    if (otherAdded < added) {\n      start = middle + 1\n    } else if (otherAdded > added) {\n      end = middle - 1\n    } else {\n      store.added.splice(middle, 1)\n      break\n    }\n  }\n}\n\nfunction find(list, id) {\n  for (let i = list.length - 1; i >= 0; i--) {\n    if (id === list[i][1].id) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction isDefined(value) {\n  return typeof value !== 'undefined'\n}\n\nexport class MemoryStore {\n  constructor() {\n    this.entries = []\n    this.added = []\n    this.indexes = {}\n    this.lastReceived = 0\n    this.lastAdded = 0\n    this.lastSent = 0\n  }\n\n  async add(action, meta) {\n    let entry = [action, meta]\n    let id = meta.id\n\n    let list = this.entries\n    for (let i = 0; i < list.length; i++) {\n      let [, otherMeta] = list[i]\n      if (id === otherMeta.id) {\n        return false\n      } else if (!isFirstOlder(otherMeta, meta)) {\n        forEachIndex(meta, index => {\n          checkIndex(this, index)\n          let indexList = this.indexes[index].entries\n          let j = indexList.findIndex(item => !isFirstOlder(item[1], meta))\n          indexList.splice(j, 0, entry)\n        })\n        list.splice(i, 0, entry)\n        return insert(this, entry)\n      }\n    }\n\n    forEachIndex(meta, index => {\n      checkIndex(this, index)\n      this.indexes[index].entries.push(entry)\n    })\n    list.push(entry)\n    return insert(this, entry)\n  }\n\n  async byId(id) {\n    let created = find(this.entries, id)\n    if (created === -1) {\n      return [null, null]\n    } else {\n      let [action, meta] = this.entries[created]\n      return [action, meta]\n    }\n  }\n\n  async remove(id, created) {\n    if (typeof created === 'undefined') {\n      created = find(this.entries, id)\n      if (created === -1) return Promise.resolve(false)\n    }\n\n    let entry = [this.entries[created][0], this.entries[created][1]]\n    forEachIndex(entry[1], index => {\n      let entries = this.indexes[index].entries\n      let indexed = find(entries, id)\n      if (indexed !== -1) entries.splice(indexed, 1)\n    })\n    this.entries.splice(created, 1)\n\n    forEachIndex(entry[1], index => {\n      eject(this.indexes[index], entry[1])\n    })\n    eject(this, entry[1])\n\n    return entry\n  }\n\n  async get(opts = {}) {\n    let index = opts.index\n    let store = this\n    let entries\n    if (index) {\n      store = this.indexes[index] || { added: [], entries: [] }\n    }\n    if (opts.order === 'created') {\n      entries = store.entries\n    } else {\n      entries = store.added\n    }\n    return { entries: entries.slice(0) }\n  }\n\n  async changeMeta(id, diff) {\n    let index = find(this.entries, id)\n    if (index === -1) {\n      return false\n    } else {\n      let meta = this.entries[index][1]\n      for (let key in diff) meta[key] = diff[key]\n      return true\n    }\n  }\n\n  async removeReason(reason, criteria, callback) {\n    let removed = []\n\n    if (criteria.id) {\n      let index = find(this.entries, criteria.id)\n      if (index !== -1) {\n        let meta = this.entries[index][1]\n        let reasonPos = meta.reasons.indexOf(reason)\n        if (reasonPos !== -1) {\n          meta.reasons.splice(reasonPos, 1)\n          if (meta.reasons.length === 0) {\n            callback(this.entries[index][0], meta)\n            this.remove(criteria.id)\n          }\n        }\n      }\n    } else {\n      this.entries = this.entries.filter(([action, meta]) => {\n        let c = criteria\n\n        let reasonPos = meta.reasons.indexOf(reason)\n        if (reasonPos === -1) {\n          return true\n        }\n        if (isDefined(c.olderThan) && !isFirstOlder(meta, c.olderThan)) {\n          return true\n        }\n        if (isDefined(c.youngerThan) && !isFirstOlder(c.youngerThan, meta)) {\n          return true\n        }\n        if (isDefined(c.minAdded) && meta.added < c.minAdded) {\n          return true\n        }\n        if (isDefined(c.maxAdded) && meta.added > c.maxAdded) {\n          return true\n        }\n\n        meta.reasons.splice(reasonPos, 1)\n        if (meta.reasons.length === 0) {\n          callback(action, meta)\n          removed.push(meta)\n          return false\n        } else {\n          return true\n        }\n      })\n\n      let removedAdded = removed.map(m => m.added)\n      let removing = i => !removedAdded.includes(i[1].added)\n      this.added = this.added.filter(removing)\n\n      for (let meta of removed) {\n        forEachIndex(meta, i => {\n          this.indexes[i].entries = this.indexes[i].entries.filter(removing)\n          this.indexes[i].added = this.indexes[i].added.filter(removing)\n        })\n      }\n    }\n  }\n\n  async clean() {\n    this.entries = []\n    this.added = []\n    this.indexes = {}\n    this.lastReceived = 0\n    this.lastAdded = 0\n    this.lastSent = 0\n  }\n\n  async getLastAdded() {\n    return this.lastAdded\n  }\n\n  async getLastSynced() {\n    return {\n      received: this.lastReceived,\n      sent: this.lastSent\n    }\n  }\n\n  async setLastSynced(values) {\n    if (typeof values.sent !== 'undefined') {\n      this.lastSent = values.sent\n    }\n    if (typeof values.received !== 'undefined') {\n      this.lastReceived = values.received\n    }\n  }\n}\n","export class LoguxError extends Error {\n  static describe(type, options) {\n    if (type === 'timeout') {\n      return 'A timeout was reached (' + options + ' ms)'\n    } else if (type === 'wrong-format') {\n      return 'Wrong message format in ' + options\n    } else if (type === 'unknown-message') {\n      return 'Unknown message `' + options + '` type'\n    } else if (type === 'bruteforce') {\n      return 'Too many wrong authentication attempts'\n    } else if (type === 'wrong-protocol') {\n      return (\n        `Logux supports protocols only from version ${options.supported}` +\n        `, but you use ${options.used}`\n      )\n    } else if (type === 'wrong-subprotocol') {\n      return (\n        `Only ${options.supported} application subprotocols are ` +\n        `supported, but you use ${options.used}`\n      )\n    } else if (type === 'wrong-credentials') {\n      return 'Wrong credentials'\n    } else {\n      return type\n    }\n  }\n\n  constructor(type, options, received) {\n    super(type)\n    this.name = 'LoguxError'\n    this.type = type\n    this.options = options\n    this.description = LoguxError.describe(type, options)\n    this.received = !!received\n\n    if (received) {\n      this.message = 'Logux received ' + this.type + ' error'\n      if (this.description !== this.type) {\n        this.message += ' (' + this.description + ')'\n      }\n    } else {\n      this.message = this.description\n    }\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, LoguxError)\n    }\n  }\n}\n","import { LoguxError } from '../logux-error/index.js'\n\nasync function auth(node, nodeId, token, callback) {\n  if (!node.options.auth) {\n    node.authenticated = true\n    callback()\n    return\n  }\n\n  try {\n    let access = await node.options.auth(nodeId, token, node.remoteHeaders)\n    if (access) {\n      node.authenticated = true\n      callback()\n      for (let i = 0; i < node.unauthenticated.length; i++) {\n        node.onMessage(node.unauthenticated[i])\n      }\n      node.unauthenticated = []\n    } else {\n      node.sendError(new LoguxError('wrong-credentials'))\n      node.destroy()\n    }\n  } catch (e) {\n    if (e.name === 'LoguxError') {\n      node.sendError(e)\n      node.destroy()\n    } else {\n      node.error(e)\n    }\n  }\n}\n\nfunction checkProtocol(node, ver) {\n  node.remoteProtocol = ver\n\n  if (ver >= node.minProtocol) {\n    return true\n  } else {\n    node.sendError(\n      new LoguxError('wrong-protocol', {\n        supported: node.minProtocol,\n        used: ver\n      })\n    )\n    node.destroy()\n    return false\n  }\n}\n\nfunction emitEvent(node) {\n  try {\n    node.emitter.emit('connect')\n  } catch (e) {\n    if (e.name === 'LoguxError') {\n      node.sendError(e)\n      return false\n    } else {\n      throw e\n    }\n  }\n  return true\n}\n\nexport async function sendConnect() {\n  let message = [\n    'connect',\n    this.localProtocol,\n    this.localNodeId,\n    this.lastReceived\n  ]\n\n  let options = {}\n  if (this.options.token) {\n    if (typeof this.options.token === 'function') {\n      options.token = await this.options.token()\n    } else {\n      options.token = this.options.token\n    }\n  }\n  if (this.options.subprotocol) {\n    options.subprotocol = this.options.subprotocol\n  }\n  if (Object.keys(options).length > 0) message.push(options)\n\n  if (this.options.fixTime) this.connectSended = this.now()\n\n  if (Object.keys(this.localHeaders).length > 0) {\n    this.sendHeaders(this.localHeaders)\n  }\n\n  this.startTimeout()\n  this.send(message)\n}\n\nexport async function sendConnected(start, end) {\n  let message = [\n    'connected',\n    this.localProtocol,\n    this.localNodeId,\n    [start, end]\n  ]\n\n  let options = {}\n  if (this.options.token) {\n    if (typeof this.options.token === 'function') {\n      options.token = await this.options.token()\n    } else {\n      options.token = this.options.token\n    }\n  }\n  if (this.options.subprotocol) {\n    options.subprotocol = this.options.subprotocol\n  }\n  if (Object.keys(options).length > 0) message.push(options)\n\n  if (Object.keys(this.localHeaders).length > 0) {\n    this.sendHeaders(this.localHeaders)\n  }\n\n  this.send(message)\n}\n\nexport function connectMessage(ver, nodeId, synced, options) {\n  let start = this.now()\n  if (!options) options = {}\n\n  this.remoteNodeId = nodeId\n  if (!checkProtocol(this, ver)) return\n\n  this.remoteSubprotocol = options.subprotocol || '0.0.0'\n\n  if (!emitEvent(this)) {\n    this.destroy()\n    return\n  }\n\n  auth(this, nodeId, options.token, () => {\n    this.baseTime = this.now()\n    this.sendConnected(start, this.baseTime)\n    this.syncSince(synced)\n  })\n}\n\nexport function connectedMessage(ver, nodeId, time, options) {\n  if (!options) options = {}\n\n  this.endTimeout()\n  this.remoteNodeId = nodeId\n  if (!checkProtocol(this, ver)) return\n\n  this.baseTime = time[1]\n\n  if (this.options.fixTime) {\n    let now = this.now()\n    let authTime = time[1] - time[0]\n    let roundTrip = now - this.connectSended - authTime\n    this.timeFix = Math.floor(this.connectSended - time[0] + roundTrip / 2)\n  }\n\n  this.remoteSubprotocol = options.subprotocol || '0.0.0'\n\n  if (!emitEvent(this)) {\n    this.destroy()\n    return\n  }\n\n  auth(this, nodeId, options.token, () => {\n    this.syncSince(this.lastSent)\n  })\n}\n","import { createNanoEvents } from 'nanoevents'\n\nimport {\n  sendConnect,\n  sendConnected,\n  connectMessage,\n  connectedMessage\n} from '../connect/index.js'\nimport {\n  syncedMessage,\n  syncMessage,\n  sendSynced,\n  sendSync\n} from '../sync/index.js'\nimport { sendPing, pingMessage, pongMessage } from '../ping/index.js'\nimport { sendHeaders, headersMessage } from '../headers/index.js'\nimport { sendDebug, debugMessage } from '../debug/index.js'\nimport { sendError, errorMessage } from '../error/index.js'\nimport { LoguxError } from '../logux-error/index.js'\n\nconst NOT_TO_THROW = {\n  'wrong-subprotocol': true,\n  'wrong-protocol': true,\n  'timeout': true\n}\n\nconst BEFORE_AUTH = ['connect', 'connected', 'error', 'debug', 'headers']\n\nasync function syncMappedEvent(node, action, meta) {\n  let added = meta.added\n  if (typeof added === 'undefined') {\n    let lastAdded = node.lastAddedCache\n    added = lastAdded > node.lastSent ? lastAdded : node.lastSent\n  }\n  if (node.options.outMap) {\n    try {\n      let changed = await node.options.outMap(action, meta)\n      node.sendSync(added, [changed])\n    } catch (e) {\n      node.error(e)\n    }\n  } else {\n    node.sendSync(added, [[action, meta]])\n  }\n}\n\nexport class BaseNode {\n  constructor(nodeId, log, connection, options = {}) {\n    this.remoteNodeId = undefined\n    this.remoteProtocol = undefined\n    this.remoteSubprotocol = undefined\n\n    this.minProtocol = 3\n    this.localProtocol = 4\n    this.localNodeId = nodeId\n\n    this.log = log\n    this.connection = connection\n    this.options = options\n\n    if (this.options.ping && !this.options.timeout) {\n      throw new Error('You must set timeout option to use ping')\n    }\n\n    this.connected = false\n    this.authenticated = false\n    this.unauthenticated = []\n\n    this.timeFix = 0\n    this.syncing = 0\n    this.received = {}\n\n    this.lastSent = 0\n    this.lastReceived = 0\n\n    this.state = 'disconnected'\n\n    this.emitter = createNanoEvents()\n    this.timeouts = []\n    this.throwsError = true\n\n    this.unbind = [\n      log.on('add', (action, meta) => {\n        this.onAdd(action, meta)\n      }),\n      connection.on('connecting', () => {\n        this.onConnecting()\n      }),\n      connection.on('connect', () => {\n        this.onConnect()\n      }),\n      connection.on('message', message => {\n        this.onMessage(message)\n      }),\n      connection.on('error', error => {\n        if (error.message === 'Wrong message format') {\n          this.sendError(new LoguxError('wrong-format', error.received))\n          this.connection.disconnect('error')\n        } else {\n          this.error(error)\n        }\n      }),\n      connection.on('disconnect', () => {\n        this.onDisconnect()\n      })\n    ]\n\n    this.initialized = false\n    this.lastAddedCache = 0\n    this.initializing = this.initialize()\n    this.localHeaders = {}\n    this.remoteHeaders = {}\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  catch(listener) {\n    this.throwsError = false\n    let unbind = this.on('error', listener)\n    return () => {\n      this.throwsError = true\n      unbind()\n    }\n  }\n\n  waitFor(state) {\n    if (this.state === state) {\n      return Promise.resolve()\n    }\n    return new Promise(resolve => {\n      let unbind = this.on('state', () => {\n        if (this.state === state) {\n          unbind()\n          resolve()\n        }\n      })\n    })\n  }\n\n  destroy() {\n    if (this.connection.destroy) {\n      this.connection.destroy()\n    } else if (this.connected) {\n      this.connection.disconnect('destroy')\n    }\n    for (let i of this.unbind) i()\n    clearTimeout(this.pingTimeout)\n    this.endTimeout()\n  }\n\n  setLocalHeaders(headers) {\n    this.localHeaders = headers\n    if (this.connected) {\n      this.sendHeaders(headers)\n    }\n  }\n\n  send(msg) {\n    if (!this.connected) return\n    this.delayPing()\n    try {\n      this.connection.send(msg)\n    } catch (e) {\n      this.error(e)\n    }\n  }\n\n  onConnecting() {\n    this.setState('connecting')\n  }\n\n  onConnect() {\n    this.delayPing()\n    this.connected = true\n  }\n\n  onDisconnect() {\n    while (this.timeouts.length > 0) {\n      this.endTimeout()\n    }\n    if (this.pingTimeout) clearTimeout(this.pingTimeout)\n    this.authenticated = false\n    this.connected = false\n    this.setState('disconnected')\n  }\n\n  onMessage(msg) {\n    this.delayPing()\n    let name = msg[0]\n\n    if (!this.authenticated && !BEFORE_AUTH.includes(name)) {\n      this.unauthenticated.push(msg)\n      return\n    }\n\n    this[name + 'Message'](...msg.slice(1))\n  }\n\n  async onAdd(action, meta) {\n    if (!this.authenticated) return\n    if (this.lastAddedCache < meta.added) {\n      this.lastAddedCache = meta.added\n    }\n\n    if (this.received && this.received[meta.id]) {\n      delete this.received[meta.id]\n      return\n    }\n\n    if (this.options.outFilter) {\n      try {\n        let result = await this.options.outFilter(action, meta)\n        if (result) syncMappedEvent(this, action, meta)\n      } catch (e) {\n        this.error(e)\n      }\n    } else {\n      syncMappedEvent(this, action, meta)\n    }\n  }\n\n  syncError(type, options, received) {\n    let err = new LoguxError(type, options, received)\n    this.emitter.emit('error', err)\n    if (!NOT_TO_THROW[type] && this.throwsError) {\n      throw err\n    }\n  }\n\n  error(err) {\n    this.emitter.emit('error', err)\n    this.connection.disconnect('error')\n    if (this.throwsError) {\n      throw err\n    }\n  }\n\n  setState(state) {\n    if (this.state !== state) {\n      this.state = state\n      this.emitter.emit('state')\n    }\n  }\n\n  startTimeout() {\n    if (!this.options.timeout) return\n\n    let ms = this.options.timeout\n    let timeout = setTimeout(() => {\n      if (this.connected) this.connection.disconnect('timeout')\n      this.syncError('timeout', ms)\n    }, ms)\n\n    this.timeouts.push(timeout)\n  }\n\n  endTimeout() {\n    if (this.timeouts.length > 0) {\n      clearTimeout(this.timeouts.shift())\n    }\n  }\n\n  delayPing() {\n    if (!this.options.ping) return\n    if (this.pingTimeout) clearTimeout(this.pingTimeout)\n\n    this.pingTimeout = setTimeout(() => {\n      if (this.connected && this.authenticated) this.sendPing()\n    }, this.options.ping)\n  }\n\n  async syncSinceQuery(lastSynced) {\n    let promises = []\n    await this.log.each({ order: 'added' }, (action, meta) => {\n      if (meta.added <= lastSynced) return false\n      if (this.options.outFilter) {\n        promises.push(\n          this.options\n            .outFilter(action, meta)\n            .then(r => {\n              if (r) {\n                return [action, meta]\n              } else {\n                return false\n              }\n            })\n            .catch(e => {\n              this.error(e)\n            })\n        )\n      } else {\n        promises.push(Promise.resolve([action, meta]))\n      }\n      return true\n    })\n\n    let entries = await Promise.all(promises)\n\n    let data = { added: 0 }\n    data.entries = entries.filter(entry => {\n      if (entry && data.added < entry[1].added) {\n        data.added = entry[1].added\n      }\n      return entry !== false\n    })\n    return data\n  }\n\n  async syncSince(lastSynced) {\n    let data = await this.syncSinceQuery(lastSynced)\n    if (!this.connected) return\n    if (data.entries.length > 0) {\n      if (this.options.outMap) {\n        Promise.all(\n          data.entries.map(i => {\n            return this.options.outMap(i[0], i[1])\n          })\n        )\n          .then(changed => {\n            this.sendSync(data.added, changed)\n          })\n          .catch(e => {\n            this.error(e)\n          })\n      } else {\n        this.sendSync(data.added, data.entries)\n      }\n    } else {\n      this.setState('synchronized')\n    }\n  }\n\n  setLastSent(value) {\n    if (this.lastSent < value) {\n      this.lastSent = value\n      this.log.store.setLastSynced({ sent: value })\n    }\n  }\n\n  setLastReceived(value) {\n    if (this.lastReceived < value) this.lastReceived = value\n    this.log.store.setLastSynced({ received: value })\n  }\n\n  now() {\n    return Date.now()\n  }\n\n  async initialize() {\n    let [synced, added] = await Promise.all([\n      this.log.store.getLastSynced(),\n      this.log.store.getLastAdded()\n    ])\n    this.initialized = true\n    this.lastSent = synced.sent\n    this.lastReceived = synced.received\n    this.lastAddedCache = added\n    if (this.connection.connected) this.onConnect()\n  }\n\n  sendDuilian() {\n    this.send(['duilian', Object.keys(DUILIANS)[0]])\n  }\n\n  duilianMessage(line) {\n    if (DUILIANS[line]) {\n      this.send(['duilian', DUILIANS[line]])\n    }\n  }\n}\n\nBaseNode.prototype.sendConnect = sendConnect\nBaseNode.prototype.sendConnected = sendConnected\nBaseNode.prototype.connectMessage = connectMessage\nBaseNode.prototype.connectedMessage = connectedMessage\n\nBaseNode.prototype.sendSync = sendSync\nBaseNode.prototype.sendSynced = sendSynced\nBaseNode.prototype.syncMessage = syncMessage\nBaseNode.prototype.syncedMessage = syncedMessage\n\nBaseNode.prototype.sendPing = sendPing\nBaseNode.prototype.pingMessage = pingMessage\nBaseNode.prototype.pongMessage = pongMessage\n\nBaseNode.prototype.sendDebug = sendDebug\nBaseNode.prototype.debugMessage = debugMessage\n\nBaseNode.prototype.sendError = sendError\nBaseNode.prototype.errorMessage = errorMessage\n\nBaseNode.prototype.sendHeaders = sendHeaders\nBaseNode.prototype.headersMessage = headersMessage\n\nconst DUILIANS = {\n  金木水火土: '板城烧锅酒'\n}\n","export function sendSync(added, entries) {\n  this.startTimeout()\n\n  let data = []\n  for (let [action, originMeta] of entries) {\n    let meta = {}\n    for (let key in originMeta) {\n      if (key === 'id') {\n        meta.id = originMeta.id.split(' ')\n      } else if (key !== 'added') {\n        meta[key] = originMeta[key]\n      }\n    }\n\n    if (this.timeFix) meta.time -= this.timeFix\n    meta.id[0] = parseInt(meta.id[0]) - this.baseTime\n    meta.id[2] = parseInt(meta.id[2])\n    meta.time -= this.baseTime\n\n    if (meta.id[1] === this.localNodeId) {\n      if (meta.id[2] === 0) {\n        meta.id = meta.id[0]\n      } else {\n        meta.id = [meta.id[0], meta.id[2]]\n      }\n    }\n\n    data.unshift(action, meta)\n  }\n\n  this.syncing += 1\n  this.setState('sending')\n  this.send(['sync', added].concat(data))\n}\n\nexport function sendSynced(added) {\n  this.send(['synced', added])\n}\n\nexport async function syncMessage(added, ...data) {\n  let promises = []\n\n  for (let i = 0; i < data.length - 1; i += 2) {\n    let action = data[i]\n    let meta = data[i + 1]\n\n    if (typeof meta.id === 'number') {\n      meta.id = meta.id + this.baseTime + ' ' + this.remoteNodeId + ' ' + 0\n    } else {\n      meta.id[0] = meta.id[0] + this.baseTime\n      if (meta.id.length === 2) {\n        meta.id = meta.id[0] + ' ' + this.remoteNodeId + ' ' + meta.id[1]\n      } else {\n        meta.id = meta.id.join(' ')\n      }\n    }\n\n    meta.time = meta.time + this.baseTime\n    if (this.timeFix) meta.time = meta.time + this.timeFix\n\n    let process = Promise.resolve([action, meta])\n\n    if (this.options.inMap) {\n      process = process\n        .then(([action2, meta2]) => {\n          return this.options.inMap(action2, meta2)\n        })\n        .catch(e => {\n          this.error(e)\n        })\n    }\n\n    process\n      .then(filtered => {\n        if (filtered && this.options.inFilter) {\n          return this.options\n            .inFilter(...filtered)\n            .then(res => {\n              return res ? filtered : false\n            })\n            .catch(e => {\n              this.error(e)\n            })\n        } else {\n          return filtered\n        }\n      })\n      .then(changed => {\n        if (!changed) return false\n        if (this.received) this.received[changed[1].id] = true\n        return this.log.add(changed[0], changed[1])\n      })\n\n    promises.push(process)\n  }\n\n  await Promise.all(promises)\n  this.setLastReceived(added)\n  this.sendSynced(added)\n}\n\nexport function syncedMessage(synced) {\n  this.endTimeout()\n  this.setLastSent(synced)\n  if (this.syncing > 0) this.syncing -= 1\n  if (this.syncing === 0) {\n    this.setState('synchronized')\n  }\n}\n","export function sendPing() {\n  this.startTimeout()\n  this.send(['ping', this.lastAddedCache])\n  if (this.pingTimeout) clearTimeout(this.pingTimeout)\n}\n\nexport function pingMessage(synced) {\n  this.setLastReceived(synced)\n  if (this.connected && this.authenticated) {\n    this.send(['pong', this.lastAddedCache])\n  }\n}\n\nexport function pongMessage(synced) {\n  this.setLastReceived(synced)\n  this.endTimeout()\n}\n","export function sendDebug(type, data) {\n  this.send(['debug', type, data])\n}\n\nexport function debugMessage(type, data) {\n  this.emitter.emit('debug', type, data)\n}\n","export function sendError(error) {\n  let message = ['error', error.type]\n  if (typeof error.options !== 'undefined') message.push(error.options)\n  this.send(message)\n\n  this.emitter.emit('clientError', error)\n}\n\nexport function errorMessage(type, options) {\n  this.syncError(type, options, true)\n}\n","export function sendHeaders(data) {\n  this.send(['headers', data])\n}\n\nexport function headersMessage(data) {\n  this.remoteHeaders = data\n  this.emitter.emit('headers', data)\n}\n","import { BaseNode } from '../base-node/index.js'\n\nconst DEFAULT_OPTIONS = {\n  fixTime: true,\n  timeout: 20000,\n  ping: 5000\n}\n\nexport class ClientNode extends BaseNode {\n  constructor(nodeId, log, connection, options = {}) {\n    options = { ...DEFAULT_OPTIONS, ...options }\n    super(nodeId, log, connection, options)\n  }\n\n  onConnect() {\n    if (!this.connected) {\n      this.connected = true\n      this.initializing = this.initializing.then(() => {\n        if (this.connected) this.sendConnect()\n      })\n    }\n  }\n}\n","import { createNanoEvents } from 'nanoevents'\n\nclass LocalConnection {\n  constructor(pair, type) {\n    this.connected = false\n    this.emitter = createNanoEvents()\n    this.type = type\n    this.pair = pair\n  }\n\n  other() {\n    if (this.type === 'left') {\n      return this.pair.right\n    } else {\n      return this.pair.left\n    }\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  connect() {\n    if (this.connected) {\n      throw new Error('Connection already established')\n    } else {\n      this.emitter.emit('connecting')\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.other().connected = true\n          this.connected = true\n          this.other().emitter.emit('connect')\n          this.emitter.emit('connect')\n          resolve()\n        }, this.pair.delay)\n      })\n    }\n  }\n\n  disconnect(reason) {\n    if (!this.connected) {\n      throw new Error('Connection already finished')\n    } else {\n      this.connected = false\n      this.emitter.emit('disconnect', reason)\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.other().connected = false\n          this.other().emitter.emit('disconnect')\n          resolve()\n        }, 1)\n      })\n    }\n  }\n\n  send(message) {\n    if (this.connected) {\n      setTimeout(() => {\n        this.other().emitter.emit('message', message)\n      }, this.pair.delay)\n    } else {\n      throw new Error('Connection should be started before sending a message')\n    }\n  }\n}\n\nexport class LocalPair {\n  constructor(delay = 1) {\n    this.delay = delay\n    this.left = new LocalConnection(this, 'left')\n    this.right = new LocalConnection(this, 'right')\n  }\n}\n","const DEFAULT_OPTIONS = {\n  minDelay: 1000,\n  maxDelay: 5000,\n  attempts: Infinity\n}\n\nconst FATAL_ERRORS = [\n  'wrong-protocol',\n  'wrong-subprotocol',\n  'wrong-credentials'\n]\n\nexport class Reconnect {\n  constructor(connection, options = {}) {\n    this.connection = connection\n    this.options = { ...DEFAULT_OPTIONS, ...options }\n\n    this.reconnecting = connection.connected\n    this.connecting = false\n    this.attempts = 0\n\n    this.unbind = [\n      this.connection.on('message', msg => {\n        if (msg[0] === 'error' && FATAL_ERRORS.includes(msg[1])) {\n          this.reconnecting = false\n        }\n      }),\n      this.connection.on('connecting', () => {\n        this.connecting = true\n      }),\n      this.connection.on('connect', () => {\n        this.attempts = 0\n        this.connecting = false\n      }),\n      this.connection.on('disconnect', () => {\n        this.connecting = false\n        if (this.reconnecting) this.reconnect()\n      }),\n      () => {\n        clearTimeout(this.timer)\n      }\n    ]\n\n    let visibility = () => {\n      if (this.reconnecting && !this.connected && !this.connecting) {\n        if (typeof document !== 'undefined' && !document.hidden) this.connect()\n      }\n    }\n    let connect = () => {\n      if (this.reconnecting && !this.connected && !this.connecting) {\n        if (navigator.onLine) this.connect()\n      }\n    }\n    let disconnect = () => {\n      this.disconnect('freeze')\n    }\n    if (\n      typeof document !== 'undefined' &&\n      typeof window !== 'undefined' &&\n      document.addEventListener &&\n      window.addEventListener\n    ) {\n      document.addEventListener('visibilitychange', visibility, false)\n      window.addEventListener('focus', connect, false)\n      window.addEventListener('online', connect, false)\n      window.addEventListener('resume', connect, false)\n      window.addEventListener('freeze', disconnect, false)\n      this.unbind.push(() => {\n        document.removeEventListener('visibilitychange', visibility, false)\n        window.removeEventListener('focus', connect, false)\n        window.removeEventListener('online', connect, false)\n        window.removeEventListener('resume', connect, false)\n        window.removeEventListener('freeze', disconnect, false)\n      })\n    }\n  }\n\n  connect() {\n    this.attempts += 1\n    this.reconnecting = true\n    return this.connection.connect()\n  }\n\n  disconnect(reason) {\n    if (reason !== 'timeout' && reason !== 'error' && reason !== 'freeze') {\n      this.reconnecting = false\n    }\n    return this.connection.disconnect(reason)\n  }\n\n  destroy() {\n    for (let i of this.unbind) i()\n    this.disconnect('destroy')\n  }\n\n  reconnect() {\n    if (this.attempts > this.options.attempts - 1) {\n      this.reconnecting = false\n      this.attempts = 0\n      return\n    }\n\n    let delay = this.nextDelay()\n    this.timer = setTimeout(() => {\n      if (this.reconnecting && !this.connecting && !this.connected) {\n        this.connect()\n      }\n    }, delay)\n  }\n\n  send(...args) {\n    return this.connection.send(...args)\n  }\n\n  on(...args) {\n    return this.connection.on(...args)\n  }\n\n  nextDelay() {\n    let base = this.options.minDelay * 2 ** this.attempts\n    let rand = Math.random()\n    let deviation = rand * 0.5 * base\n    if (Math.floor(rand * 10) === 1) deviation = -deviation\n    return Math.min(base + deviation, this.options.maxDelay) || 0\n  }\n\n  get connected() {\n    return this.connection.connected\n  }\n\n  get emitter() {\n    return this.connection.emitter\n  }\n}\n","export function parseId(nodeId) {\n  if (nodeId.includes(' ')) nodeId = nodeId.split(' ')[1]\n  let parts = nodeId.split(':')\n  if (parts.length === 1) {\n    return { nodeId, userId: undefined, clientId: nodeId }\n  } else {\n    let userId = parts[0]\n    return { nodeId, userId, clientId: parts[0] + ':' + parts[1] }\n  }\n}\n","export function status(client, callback, options = {}) {\n  let observable = client.on ? client : client.node\n  let disconnected = observable.state === 'disconnected'\n  let wait = false\n  let old = false\n\n  if (typeof options.duration === 'undefined') options.duration = 3000\n\n  let timeout\n  let unbind = []\n  let processing = {}\n\n  function setSynchronized() {\n    if (Object.keys(processing).length === 0) {\n      if (wait) {\n        wait = false\n        callback('synchronizedAfterWait')\n        timeout = setTimeout(() => {\n          callback('synchronized')\n        }, options.duration)\n      } else {\n        callback('synchronized')\n      }\n    }\n  }\n\n  function changeState() {\n    clearTimeout(timeout)\n\n    if (old) return\n    if (observable.state === 'disconnected') {\n      disconnected = true\n      callback(wait ? 'wait' : 'disconnected')\n    } else if (observable.state === 'synchronized') {\n      disconnected = false\n      setSynchronized()\n    } else if (observable.state === 'connecting') {\n      timeout = setTimeout(() => {\n        callback('connecting' + (wait ? 'AfterWait' : ''))\n      }, 100)\n    } else {\n      callback(client.state + (wait ? 'AfterWait' : ''))\n    }\n  }\n\n  unbind.push(observable.on('state', changeState))\n\n  unbind.push(\n    client.node.on('error', error => {\n      if (\n        error.type === 'wrong-protocol' ||\n        error.type === 'wrong-subprotocol'\n      ) {\n        old = true\n        callback('protocolError')\n      } else if (error.type !== 'timeout') {\n        callback('syncError', { error })\n      }\n    })\n  )\n\n  unbind.push(\n    client.node.on('clientError', error => {\n      callback('syncError', { error })\n    })\n  )\n\n  let log = client.on ? client : client.log\n  unbind.push(\n    log.on('add', (action, meta) => {\n      if (action.type === 'logux/subscribe') {\n        return\n      } else if (action.type === 'logux/unsubscribe') {\n        return\n      }\n\n      if (action.type === 'logux/processed') {\n        delete processing[action.id]\n        setSynchronized()\n      } else if (action.type === 'logux/undo') {\n        delete processing[action.id]\n      } else if (meta.sync) {\n        processing[meta.id] = true\n      }\n\n      if (action.type === 'logux/undo' && action.reason) {\n        if (action.reason === 'denied') {\n          callback('denied', { action, meta })\n        } else {\n          callback('error', { action, meta })\n        }\n      } else if (disconnected && meta.sync && meta.added) {\n        if (!wait) callback('wait')\n        wait = true\n      }\n    })\n  )\n\n  changeState()\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","import { status } from '../status/index.js'\n\nfunction injectStyles(element, styles) {\n  for (let i in styles) {\n    element.style[i] = styles[i]\n  }\n}\n\nfunction setPosition(element, position) {\n  let style = element.style\n  if (position === 'middle-center' || position === 'center-middle') {\n    style.top = '50%'\n    style.left = '50%'\n    style.transform = 'translate(-50%, -50%)'\n  } else {\n    position.split('-').forEach(pos => {\n      if (pos === 'middle') {\n        style.top = '50%'\n        style.transform = 'translateY(-50%)'\n      } else if (pos === 'center') {\n        style.left = '50%'\n        style.transform = 'translateX(-50%)'\n      } else {\n        style[pos] = '0'\n      }\n    })\n  }\n}\n\nconst RESET = {\n  boxSizing: 'content-box',\n  visibility: 'visible',\n  textIndent: '0',\n  textTransform: 'none',\n  wordSpacing: 'normal',\n  letterSpacing: 'normal',\n  fontStyle: 'normal',\n  fontVariant: 'normal',\n  fontWeight: 'normal',\n  lineHeight: 'auto'\n}\n\nexport function badge(client, opts) {\n  let messages = opts.messages\n  let position = opts.position || 'bottom-right'\n  let styles = opts.styles\n\n  let widget = document.createElement('div')\n  let text = document.createElement('span')\n\n  widget.setAttribute('role', 'alert')\n\n  injectStyles(widget, RESET)\n  injectStyles(widget, styles.base)\n  injectStyles(text, styles.text)\n  setPosition(widget, position)\n\n  let show = (style, msg) => {\n    text.innerHTML = msg\n    injectStyles(widget, style)\n    widget.style.display = 'block'\n  }\n\n  let hide = () => {\n    widget.style.display = 'none'\n  }\n\n  let unbind = status(\n    client,\n    state => {\n      if (state === 'sendingAfterWait' || state === 'connectingAfterWait') {\n        show(styles.sending, messages.sending)\n      } else if (state === 'synchronizedAfterWait') {\n        show(styles.synchronized, messages.synchronized)\n      } else if (state === 'synchronized') {\n        hide(widget)\n      } else if (state === 'disconnected') {\n        show(styles.disconnected, messages.disconnected)\n      } else if (state === 'wait') {\n        show(styles.wait, messages.wait)\n      } else if (state === 'protocolError') {\n        show(styles.protocolError, messages.protocolError)\n      } else if (state === 'syncError') {\n        show(styles.error, messages.syncError)\n      } else if (state === 'error') {\n        show(styles.error, messages.error)\n      } else if (state === 'denied') {\n        show(styles.error, messages.denied)\n      }\n    },\n    opts\n  )\n\n  widget.appendChild(text)\n  document.body.appendChild(widget)\n\n  return () => {\n    unbind()\n    document.body.removeChild(widget)\n  }\n}\n\nexport let badgeRu = {\n  synchronized: 'Ваши данные сохранены',\n  disconnected: 'Нет интернета',\n  wait: 'Нет интернета<br>Ваши данные не сохранены',\n  sending: 'Сохраняю ваши данные',\n  syncError: 'Ошибка на сервере<br>Ваши данные не сохранены',\n  error: 'Ошибка на сервере<br>Ваши действия отменены',\n  denied: 'Нет прав<br>Ваши действия отменены',\n  protocolError: 'Сохранение не работает<br>Обновите страницу'\n}\n\nexport let badgeEn = {\n  synchronized: 'Your data has been saved',\n  disconnected: 'No Internet connection',\n  wait: 'No Internet connection<br>Your data has not been saved',\n  sending: 'Data saving',\n  syncError: 'Server error<br>Your data has not been saved',\n  error: 'Server error<br>You changes was reverted',\n  denied: 'You have no access<br>You changes was reverted',\n  protocolError: 'Saving is not working<br>Refresh the page'\n}\n","import { urlAlphabet } from './url-alphabet/index.js'\nif (process.env.NODE_ENV !== 'production') {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, size, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * size) / alphabet.length)\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export class LoguxUndoError extends Error {\n  constructor(action) {\n    let type = action.action ? action.action.type : 'action'\n    super(`Server undid ${type} because of ${action.reason}`)\n    this.name = 'LoguxUndoError'\n    this.action = action\n  }\n}\n","import { createNanoEvents } from 'nanoevents'\nimport {\n  isFirstOlder,\n  WsConnection,\n  MemoryStore,\n  ClientNode,\n  Reconnect,\n  parseId,\n  Log\n} from '@logux/core'\nimport { nanoid } from 'nanoid'\n\nimport { LoguxUndoError } from '../logux-undo-error/index.js'\nimport { track } from '../track/index.js'\n\nlet ALLOWED_META = ['id', 'time', 'subprotocol']\n\nfunction tabPing(c) {\n  localStorage.setItem(c.options.prefix + ':tab:' + c.tabId, Date.now())\n}\n\nfunction cleanTabActions(client, id) {\n  client.log.removeReason('tab' + id).then(() => {\n    if (client.isLocalStorage) {\n      localStorage.removeItem(client.options.prefix + ':tab:' + id)\n    }\n  })\n}\n\nexport class Client {\n  constructor(opts = {}) {\n    this.options = opts\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof this.options.server === 'undefined') {\n        throw new Error('Missed server option in Logux client')\n      }\n      if (typeof this.options.subprotocol === 'undefined') {\n        throw new Error('Missed subprotocol option in Logux client')\n      }\n      if (typeof this.options.userId === 'undefined') {\n        throw new Error(\n          'Missed userId option in Logux client. ' +\n            'Pass false if you have no users.'\n        )\n      }\n      if (this.options.userId === false) {\n        throw new Error('Replace userId: false to userId: \"false\"')\n      }\n      if (typeof this.options.userId !== 'string') {\n        throw new Error('userId must be a string')\n      }\n      if (this.options.userId.includes(':')) {\n        throw new Error('userId can’t contain colon character')\n      }\n    }\n\n    if (typeof this.options.prefix === 'undefined') {\n      this.options.prefix = 'logux'\n    }\n\n    this.isLocalStorage = false\n    if (typeof localStorage !== 'undefined') {\n      let random = nanoid()\n      try {\n        localStorage.setItem(random, '1')\n        localStorage.removeItem(random)\n        this.isLocalStorage = true\n      } catch {}\n    }\n\n    if (!this.options.time) {\n      this.clientId = this.options.userId + ':' + this.getClientId()\n      this.tabId = nanoid(8)\n    } else {\n      this.tabId = this.options.time.lastId + 1 + ''\n      this.clientId = this.options.userId + ':' + this.tabId\n    }\n\n    this.nodeId = this.clientId + ':' + this.tabId\n    let store = this.options.store || new MemoryStore()\n\n    let log\n    if (this.options.time) {\n      log = this.options.time.nextLog({ store, nodeId: this.nodeId })\n    } else {\n      log = new Log({ store, nodeId: this.nodeId })\n    }\n    this.log = log\n\n    log.on('preadd', (action, meta) => {\n      if (parseId(meta.id).nodeId === this.nodeId && !meta.subprotocol) {\n        meta.subprotocol = this.options.subprotocol\n      }\n      if (meta.sync && !meta.resubscribe) meta.reasons.push('syncing')\n    })\n\n    this.last = {}\n    this.subscriptions = {}\n    let subscribing = {}\n    let unsubscribing = {}\n\n    this.emitter = createNanoEvents()\n    this.on('add', (action, meta) => {\n      let type = action.type\n      let json, last\n      if (type === 'logux/processed' || type === 'logux/undo') {\n        this.log.removeReason('syncing', { id: action.id })\n      }\n      if (type === 'logux/subscribe' && !meta.resubscribe) {\n        subscribing[meta.id] = action\n      } else if (type === 'logux/unsubscribe') {\n        unsubscribing[meta.id] = action\n      } else if (type === 'logux/processed') {\n        if (unsubscribing[action.id]) {\n          let unsubscription = unsubscribing[action.id]\n          json = JSON.stringify({ ...unsubscription, type: 'logux/subscribe' })\n          let subscribers = this.subscriptions[json]\n          if (subscribers) {\n            if (subscribers === 1) {\n              delete this.subscriptions[json]\n            } else {\n              this.subscriptions[json] = subscribers - 1\n            }\n          }\n        }\n        if (subscribing[action.id]) {\n          let subscription = subscribing[action.id]\n          delete subscribing[action.id]\n          json = JSON.stringify(subscription)\n          if (this.subscriptions[json]) {\n            this.subscriptions[json] += 1\n          } else {\n            this.subscriptions[json] = 1\n          }\n          last = this.last[subscription.channel]\n          if (!last || isFirstOlder(last, meta)) {\n            this.last[subscription.channel] = { id: meta.id, time: meta.time }\n          }\n        }\n        if (type === 'logux/processed' && this.processing[action.id]) {\n          this.processing[action.id][1](meta)\n          delete this.processing[action.id]\n        }\n      } else if (type === 'logux/undo') {\n        if (this.processing[action.id]) {\n          this.processing[action.id][2](new LoguxUndoError(action))\n          delete this.processing[action.id]\n        }\n        delete subscribing[action.id]\n        delete unsubscribing[action.id]\n      } else if (meta.channels) {\n        if (!meta.id.includes(' ' + this.clientId + ':')) {\n          meta.channels.forEach(channel => {\n            last = this.last[channel]\n            if (!last || isFirstOlder(last, meta)) {\n              this.last[channel] = { id: meta.id, time: meta.time }\n            }\n          })\n        }\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (type === 'logux/subscribe' || type === 'logux/unsubscribe') {\n          if (!meta.sync) {\n            console.error(type + ' action without meta.sync')\n          }\n        }\n      }\n    })\n\n    this.tabPing = 60000\n    this.tabTimeout = 10 * this.tabPing\n    let reason = 'tab' + this.tabId\n    if (this.isLocalStorage) {\n      let unbind = log.on('add', (action, meta) => {\n        if (meta.reasons.includes(reason)) {\n          tabPing(this)\n          this.pinging = setInterval(() => {\n            tabPing(this)\n          }, this.tabPing)\n          unbind()\n        }\n      })\n    }\n\n    let connection\n    if (typeof this.options.server === 'string') {\n      let ws = new WsConnection(this.options.server)\n      connection = new Reconnect(ws, {\n        minDelay: this.options.minDelay,\n        maxDelay: this.options.maxDelay,\n        attempts: this.options.attempts\n      })\n    } else {\n      connection = this.options.server\n    }\n\n    let outFilter = async (action, meta) => {\n      return !!meta.sync && parseId(meta.id).userId === this.options.userId\n    }\n\n    let outMap = async (action, meta) => {\n      let filtered = {}\n      for (let i in meta) {\n        if (i === 'subprotocol') {\n          if (meta.subprotocol !== this.options.subprotocol) {\n            filtered.subprotocol = meta.subprotocol\n          }\n        } else if (ALLOWED_META.includes(i)) {\n          filtered[i] = meta[i]\n        }\n      }\n      return [action, filtered]\n    }\n\n    if (!this.options.time) {\n      if (typeof this.options.timeout === 'undefined') {\n        this.options.timeout = 20000\n      }\n      if (typeof this.options.ping === 'undefined') {\n        this.options.ping = 5000\n      }\n    }\n\n    this.node = new ClientNode(this.nodeId, this.log, connection, {\n      subprotocol: this.options.subprotocol,\n      outFilter,\n      timeout: this.options.timeout,\n      fixTime: !this.options.time,\n      outMap,\n      token: this.options.token,\n      ping: this.options.ping\n    })\n\n    if (/^ws:\\/\\//.test(this.options.server) && !opts.allowDangerousProtocol) {\n      let unbindEnvTest = this.node.on('state', () => {\n        if (this.node.state === 'synchronized') {\n          unbindEnvTest()\n          if (this.node.remoteHeaders.env !== 'development') {\n            console.error(\n              'Without SSL, old proxies block WebSockets. ' +\n                'Use WSS for Logux or set allowDangerousProtocol option.'\n            )\n            this.destroy()\n          }\n        }\n      })\n    }\n\n    this.node.on('debug', (type, stack) => {\n      if (type === 'error') {\n        console.error('Error on Logux server:\\n', stack)\n      }\n    })\n\n    let disconnected = true\n    this.node.on('state', () => {\n      let state = this.node.state\n      if (state === 'synchronized' || state === 'sending') {\n        if (disconnected) {\n          disconnected = false\n          for (let i in this.subscriptions) {\n            let action = JSON.parse(i)\n            let since = this.last[action.channel]\n            if (since) action.since = since\n            this.log.add(action, { sync: true, resubscribe: true })\n          }\n        }\n      } else if (this.node.state === 'disconnected') {\n        disconnected = true\n      }\n    })\n\n    this.onUnload = this.onUnload.bind(this)\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('unload', this.onUnload)\n    }\n\n    this.processing = {}\n  }\n\n  get state() {\n    return this.node.state\n  }\n\n  get connected() {\n    return this.state !== 'disconnected' && this.state !== 'connecting'\n  }\n\n  start() {\n    this.cleanPrevActions()\n    this.node.connection.connect()\n  }\n\n  sync(action, meta = {}) {\n    meta.sync = true\n    if (typeof meta.id === 'undefined') {\n      meta.id = this.log.generateId()\n    }\n\n    this.log.add(action, meta)\n    return track(this, meta.id)\n  }\n\n  type(type, listener, opts) {\n    return this.log.type(type, listener, opts)\n  }\n\n  on(event, listener) {\n    if (event === 'state') {\n      return this.node.emitter.on(event, listener)\n    } else if (event === 'user') {\n      return this.emitter.on(event, listener)\n    } else {\n      return this.log.emitter.on(event, listener)\n    }\n  }\n\n  changeUser(userId, token) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof userId !== 'string') {\n        throw new Error('userId must be a string')\n      }\n      if (userId.includes(':')) {\n        throw new Error('userId can’t contain colon character')\n      }\n    }\n\n    let wasConnected = this.node.connected\n    if (wasConnected) this.node.connection.disconnect('destroy')\n\n    this.options.userId = userId\n    this.options.token = token\n    this.clientId = userId + ':' + this.getClientId()\n    this.nodeId = this.clientId + ':' + this.tabId\n\n    this.log.nodeId = this.nodeId\n    this.node.localNodeId = this.nodeId\n    this.node.options.token = token\n\n    this.emitter.emit('user', userId)\n    if (wasConnected) this.node.connection.connect()\n  }\n\n  waitFor(state) {\n    if (this.state === state) {\n      return Promise.resolve()\n    }\n    return new Promise(resolve => {\n      let unbind = this.on('state', () => {\n        if (this.state === state) {\n          unbind()\n          resolve()\n        }\n      })\n    })\n  }\n\n  destroy() {\n    this.onUnload()\n    this.node.destroy()\n    clearInterval(this.pinging)\n    if (typeof window !== 'undefined' && window.removeEventListener) {\n      window.removeEventListener('unload', this.onUnload)\n    }\n  }\n\n  clean() {\n    this.destroy()\n    return this.log.store.clean ? this.log.store.clean() : Promise.resolve()\n  }\n\n  cleanPrevActions() {\n    if (!this.isLocalStorage) return\n\n    for (let i in localStorage) {\n      let prefix = this.options.prefix + ':tab:'\n      if (i.slice(0, prefix.length) === prefix) {\n        let time = parseInt(localStorage.getItem(i))\n        if (Date.now() - time > this.tabTimeout) {\n          cleanTabActions(this, i.slice(prefix.length))\n        }\n      }\n    }\n  }\n\n  onUnload() {\n    if (this.pinging) cleanTabActions(this, this.tabId)\n  }\n\n  getClientId() {\n    return nanoid(8)\n  }\n}\n","import { LoguxError, actionEvents } from '@logux/core'\n\nimport { Client } from '../client/index.js'\n\nfunction storageKey(client, name) {\n  return client.options.prefix + ':' + client.options.userId + ':' + name\n}\n\nfunction sendToTabs(client, event, data) {\n  if (!client.isLocalStorage) return\n  let key = storageKey(client, event)\n  let json = JSON.stringify(data)\n  try {\n    localStorage.setItem(key, json)\n  } catch (e) {\n    console.error(e)\n    client.isLocalStorage = false\n    client.role = 'leader'\n    client.emitter.emit('role')\n    client.node.connection.connect()\n  }\n}\n\nfunction getLeader(client) {\n  let data = localStorage.getItem(storageKey(client, 'leader'))\n  let json = []\n  if (typeof data === 'string') json = JSON.parse(data)\n  return json\n}\n\nfunction leaderPing(client) {\n  sendToTabs(client, 'leader', [client.tabId, Date.now()])\n}\n\nfunction onDeadLeader(client) {\n  if (client.state !== 'disconnected') {\n    setState(client, 'disconnected')\n  }\n  startElection(client)\n}\n\nfunction watchForLeader(client) {\n  clearTimeout(client.watching)\n  client.watching = setTimeout(() => {\n    if (!isActiveLeader(client)) {\n      onDeadLeader(client)\n    } else {\n      watchForLeader(client)\n    }\n  }, client.roleTimeout)\n}\n\nfunction compareSubprotocols(left, right) {\n  let leftParts = left.split('.')\n  let rightParts = right.split('.')\n  for (let i = 0; i < 3; i++) {\n    let leftNumber = parseInt(leftParts[i] || 0)\n    let rightNumber = parseInt(rightParts[i] || 0)\n    if (leftNumber > rightNumber) {\n      return 1\n    } else if (leftNumber < rightNumber) {\n      return -1\n    }\n  }\n  return 0\n}\n\nfunction setRole(client, role) {\n  if (client.role !== role) {\n    let node = client.node\n    client.role = role\n\n    clearTimeout(client.watching)\n    if (role === 'leader') {\n      localStorage.removeItem(storageKey(client, 'state'))\n      client.leadership = setInterval(() => {\n        if (!client.unloading) leaderPing(client)\n      }, client.leaderPing)\n      node.connection.connect()\n    } else {\n      clearTimeout(client.elections)\n      clearInterval(client.leadership)\n\n      if (node.state !== 'disconnected') {\n        client.node.connection.disconnect()\n      }\n    }\n\n    if (role === 'follower') {\n      let state = 'disconnected'\n      let json = localStorage.getItem(storageKey(client, 'state'))\n      if (json && json !== null) state = JSON.parse(json)\n      if (state !== client.state) {\n        client.state = state\n        client.emitter.emit('state')\n      }\n    }\n\n    client.emitter.emit('role')\n  }\n}\n\nfunction isActiveLeader(client) {\n  let leader = getLeader(client)\n  return leader[1] && leader[1] >= Date.now() - client.leaderTimeout\n}\n\nfunction startElection(client) {\n  leaderPing(client)\n  setRole(client, 'candidate')\n  client.elections = setTimeout(() => {\n    let data = getLeader(client, 'leader')\n    if (data[0] === client.tabId) {\n      setRole(client, 'leader')\n    } else {\n      setRole(client, 'follower')\n      watchForLeader(client)\n    }\n  }, client.electionDelay)\n}\n\nfunction setState(client, state) {\n  client.state = state\n  client.emitter.emit('state')\n  sendToTabs(client, 'state', client.state)\n}\n\nfunction isMemory(store) {\n  return Array.isArray(store.entries) && Array.isArray(store.added)\n}\n\nexport class CrossTabClient extends Client {\n  constructor(opts = {}) {\n    super(opts)\n\n    this.role = 'candidate'\n\n    this.roleTimeout = 3000 + Math.floor(Math.random() * 1000)\n    this.leaderTimeout = 5000\n    this.leaderPing = 2000\n    this.electionDelay = 1000\n\n    this.leaderState = this.node.state\n\n    this.node.on('state', () => {\n      if (this.role === 'leader') {\n        setState(this, this.node.state)\n      }\n    })\n\n    this.log.on('add', (action, meta) => {\n      actionEvents(this.emitter, 'add', action, meta)\n      if (meta.tab !== this.tabId) {\n        sendToTabs(this, 'add', [this.tabId, action, meta])\n      }\n    })\n    this.log.on('clean', (action, meta) => {\n      actionEvents(this.emitter, 'clean', action, meta)\n    })\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('storage', e => this.onStorage(e))\n      window.addEventListener('unload', e => this.onUnload(e))\n    }\n\n    if (this.isLocalStorage) {\n      let subprotocolKey = storageKey(this, 'subprotocol')\n      if (localStorage.getItem(subprotocolKey) !== this.options.subprotocol) {\n        sendToTabs(this, 'subprotocol', this.options.subprotocol)\n      }\n    }\n  }\n\n  get state() {\n    return this.leaderState\n  }\n\n  set state(value) {\n    this.leaderState = value\n  }\n\n  start() {\n    this.cleanPrevActions()\n\n    if (!this.isLocalStorage) {\n      this.role = 'leader'\n      this.emitter.emit('role')\n      this.node.connection.connect()\n      return\n    }\n\n    if (isActiveLeader(this)) {\n      setRole(this, 'follower')\n      watchForLeader(this)\n    } else {\n      startElection(this)\n    }\n  }\n\n  destroy() {\n    super.destroy()\n\n    clearTimeout(this.watching)\n    clearTimeout(this.elections)\n    clearInterval(this.leadership)\n    if (typeof window !== 'undefined' && window.removeEventListener) {\n      window.removeEventListener('storage', this.onStorage)\n    }\n  }\n\n  clean() {\n    if (this.isLocalStorage) {\n      localStorage.removeItem(storageKey(this, 'add'))\n      localStorage.removeItem(storageKey(this, 'state'))\n      localStorage.removeItem(storageKey(this, 'client'))\n      localStorage.removeItem(storageKey(this, 'leader'))\n    }\n    return super.clean()\n  }\n\n  changeUser(userId, token) {\n    sendToTabs(this, 'user', [this.tabId, userId])\n    super.changeUser(userId, token)\n  }\n\n  type(type, listener, opts = {}) {\n    if (opts.event === 'preadd') {\n      return this.log.type(type, listener, opts)\n    } else {\n      let event = opts.event || 'add'\n      let id = opts.id || ''\n      return this.emitter.on(`${event}-${type}-${id}`, listener)\n    }\n  }\n\n  on(event, listener) {\n    if (event === 'preadd') {\n      return this.log.emitter.on(event, listener)\n    } else {\n      return this.emitter.on(event, listener)\n    }\n  }\n\n  onStorage(e) {\n    if (e.newValue === null) return\n\n    let data\n    if (e.key === storageKey(this, 'add')) {\n      data = JSON.parse(e.newValue)\n      if (data[0] !== this.tabId) {\n        let action = data[1]\n        let meta = data[2]\n        if (!meta.tab || meta.tab === this.tabId) {\n          if (isMemory(this.log.store)) {\n            this.log.store.add(action, meta)\n          }\n          actionEvents(this.emitter, 'add', action, meta)\n          if (this.role === 'leader') {\n            this.node.onAdd(action, meta)\n          }\n        }\n      }\n    } else if (e.key === storageKey(this, 'leader')) {\n      data = JSON.parse(e.newValue)\n      if (data.length === 0) {\n        onDeadLeader(this)\n      } else if (data[0] !== this.tabId && this.role !== 'candidate') {\n        setRole(this, 'follower')\n        watchForLeader(this)\n      }\n    } else if (e.key === storageKey(this, 'state')) {\n      let state = JSON.parse(localStorage.getItem(e.key))\n      if (this.leaderState !== state) {\n        this.leaderState = state\n        this.emitter.emit('state')\n      }\n    } else if (e.key === storageKey(this, 'user')) {\n      data = JSON.parse(e.newValue)\n      if (data[0] !== this.tabId) {\n        this.emitter.emit('user', data[1])\n      }\n    } else if (e.key === storageKey(this, 'subprotocol')) {\n      let other = JSON.parse(e.newValue)\n      let compare = compareSubprotocols(this.options.subprotocol, other)\n      if (compare === 1) {\n        sendToTabs(this, 'subprotocol', this.options.subprotocol)\n      } else if (compare === -1) {\n        let err = new LoguxError(\n          'wrong-subprotocol',\n          { supported: other, used: this.options.subprotocol },\n          true\n        )\n        this.node.emitter.emit('error', err)\n      }\n    }\n  }\n\n  onUnload() {\n    if (this.role === 'leader') {\n      this.unloading = true\n      sendToTabs(this, 'leader', [])\n    }\n    super.onUnload()\n  }\n\n  getClientId() {\n    let key = storageKey(this, 'client')\n    if (!this.isLocalStorage) {\n      return super.getClientId()\n    } else if (localStorage.getItem(key)) {\n      return localStorage.getItem(key)\n    } else {\n      let clientId = super.getClientId()\n      localStorage.setItem(key, clientId)\n      return clientId\n    }\n  }\n}\n","function block(e) {\n  e.returnValue = 'unsynced'\n  return 'unsynced'\n}\n\nexport function confirm(client) {\n  let disconnected = client.state === 'disconnected'\n  let wait = false\n\n  let update = () => {\n    if (client.state === 'disconnected') {\n      disconnected = true\n    } else if (client.state === 'synchronized') {\n      disconnected = false\n      wait = false\n    }\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      if (client.role !== 'follower' && wait && disconnected) {\n        window.addEventListener('beforeunload', block)\n      } else {\n        window.removeEventListener('beforeunload', block)\n      }\n    }\n  }\n\n  let unbind = []\n  unbind.push(client.on('role', update))\n  unbind.push(client.on('state', update))\n  update()\n\n  unbind.push(\n    client.on('add', (action, meta) => {\n      if (action.type === 'logux/subscribe') {\n        return\n      } else if (action.type === 'logux/unsubscribe') {\n        return\n      }\n      if (disconnected && meta.sync && meta.added) {\n        wait = true\n        update()\n      }\n    })\n  )\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","import { parseId } from '@logux/core'\n\nfunction bold(string) {\n  return '%c' + string + '%c'\n}\n\nfunction showLog(text, details) {\n  text = '%cLogux%c ' + text\n  let args = Array.from(text.match(/%c/g)).map((_, i) => {\n    if (i === 0) {\n      return 'color:#ffa200;font-weight:bold'\n    } else if (i % 2 === 0) {\n      return 'font-weight:bold'\n    } else {\n      return 'font-weight:normal'\n    }\n  })\n\n  if (details) {\n    console.groupCollapsed(text, ...args)\n    for (let name in details) {\n      if (typeof details[name] === 'string') {\n        console.log(name + ': %c' + details[name], 'font-weight:bold')\n      } else {\n        console.log(name, details[name])\n      }\n    }\n    console.groupEnd()\n  } else {\n    console.log(text, ...args)\n  }\n}\n\nexport function log(client, messages = {}) {\n  let node = client.node\n\n  let sent = {}\n  let unbind = []\n  let prevConnected = false\n\n  if (messages.state !== false) {\n    unbind.push(\n      client.on('state', () => {\n        let details\n        if (client.state === 'connecting' && node.connection.url) {\n          details = {\n            'Node ID': node.localNodeId,\n            'Server': node.connection.url\n          }\n        } else if (client.connected && !prevConnected && node.remoteNodeId) {\n          prevConnected = true\n          details = {\n            'Server ID': node.remoteNodeId\n          }\n        } else if (!client.connected) {\n          prevConnected = false\n        }\n        showLog('state is ' + bold(client.state), details)\n      })\n    )\n  }\n\n  if (messages.role !== false) {\n    unbind.push(\n      client.on('role', () => {\n        showLog('tab role is ' + bold(client.role))\n      })\n    )\n  }\n\n  let cleaned = {}\n  let ignore = (messages.ignoreActions || []).reduce((all, i) => {\n    all[i] = true\n    return all\n  }, {})\n\n  if (messages.add !== false) {\n    unbind.push(\n      client.on('add', (action, meta) => {\n        if (meta.tab && meta.tab !== client.tabId) return\n        if (ignore[action.type]) return\n        if (meta.sync) sent[meta.id] = action\n        let message\n        if (action.type === 'logux/subscribe') {\n          message = 'subscribing to ' + bold(action.channel) + ' channel'\n          if (Object.keys(action).length === 2) {\n            showLog(message)\n          } else {\n            showLog(message, { Action: action })\n          }\n        } else if (action.type === 'logux/subscribed') {\n          showLog(\n            'subscribed to ' + bold(action.channel) + ' channel by server'\n          )\n        } else if (action.type === 'logux/unsubscribe') {\n          message = 'unsubscribed from channel ' + bold(action.channel)\n          if (Object.keys(action).length === 2) {\n            showLog(message)\n          } else {\n            showLog(message, { Action: action })\n          }\n        } else if (action.type === 'logux/processed') {\n          if (sent[action.id]) {\n            let processed = sent[action.id]\n            let details = {\n              'Processed Action': processed\n            }\n            if (processed.type === 'logux/subscribe') {\n              showLog(\n                'subscribed to ' + bold(processed.channel) + ' channel',\n                details\n              )\n            } else {\n              showLog(\n                'action ' + bold(processed.type) + ' was processed',\n                details\n              )\n            }\n            delete sent[action.id]\n          } else {\n            showLog('action ' + bold(action.id) + ' was processed')\n          }\n        } else if (action.type === 'logux/undo') {\n          if (action.action.type === 'logux/subscribe') {\n            message = 'subscription to ' + bold(action.action.channel)\n          } else {\n            message = 'action ' + bold(action.action.type)\n          }\n          message += ' was undone because of ' + bold(action.reason)\n          let details = {\n            'Reverted Action': action.action\n          }\n          if (Object.keys(action).length > 4) {\n            details['Undo Action'] = action\n          }\n          if (sent[action.id]) {\n            delete sent[action.id]\n          }\n          showLog(message, details)\n        } else {\n          let details = { Action: action, Meta: meta }\n          message = 'added '\n          if (meta.reasons.length === 0) {\n            cleaned[meta.id] = true\n            message += 'and cleaned '\n          }\n          message += bold(action.type) + ' action'\n          let { nodeId } = parseId(meta.id)\n          if (nodeId !== node.localNodeId) {\n            details.From = nodeId\n          }\n          showLog(message, details)\n        }\n      })\n    )\n  }\n\n  if (messages.user !== false) {\n    unbind.push(\n      client.on('user', userId => {\n        let message = 'user ID was changed to ' + bold(userId)\n        showLog(message, { 'Node ID': client.nodeId })\n      })\n    )\n  }\n\n  if (messages.clean !== false) {\n    unbind.push(\n      client.on('clean', (action, meta) => {\n        if (cleaned[meta.id]) {\n          delete cleaned[meta.id]\n          return\n        }\n        if (meta.tab && meta.tab !== client.tabId) return\n        if (ignore[action.type]) return\n        if (action.type.startsWith('logux/')) return\n        let message = 'cleaned ' + bold(action.type) + ' action'\n        showLog(message, { Action: action, Meta: meta })\n      })\n    )\n  }\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6oYAh\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iEz5C\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"cULX8\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"aF8lW\")).toString();","import refresh from './refresh.svg'\nimport success from './success.svg'\nimport offline from './offline.svg'\nimport error from './error.svg'\n\nexport let badgeStyles = {\n  base: {\n    position: 'fixed',\n    width: '15.4em',\n    height: '4em',\n    lineHeight: '1.4',\n    margin: '1.5em',\n    paddingLeft: '4.2em',\n    opacity: '0.8',\n    borderRadius: '0.4em',\n    color: '#fff',\n    fontFamily: 'Helvetica Neue, sans-serif',\n    zIndex: '999',\n    backgroundPosition: '1.2em center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '1.8em'\n  },\n  text: {\n    display: 'table-cell',\n    verticalAlign: 'middle',\n    height: '4em'\n  },\n  synchronized: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + success + ')'\n  },\n  disconnected: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + offline + ')'\n  },\n  wait: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + offline + ')'\n  },\n  sending: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + refresh + ')'\n  },\n  error: {\n    backgroundColor: '#F42A2A',\n    backgroundImage: 'url(' + error + ')'\n  },\n  protocolError: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + refresh + ')'\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"joALL\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8ySKy\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9op2g\")).toString();","import { MemoryStore, ClientNode, LocalPair, BaseNode, Log } from '@logux/core'\n\nimport {\n  CrossTabClient,\n  attention,\n  badgeEn,\n  confirm,\n  favicon,\n  status,\n  badge,\n  log\n} from '../../index.js'\nimport { badgeStyles } from '../../badge/styles/index.js'\nimport faviconOffline from './offline.png'\nimport faviconNormal from './normal.png'\nimport faviconError from './error.png'\n\nlet pair = new LocalPair(500)\n\nlet serverLog = new Log({\n  store: new MemoryStore(),\n  nodeId: 'server:uuid'\n})\nnew BaseNode('server:uuid', serverLog, pair.right)\n\nserverLog.on('add', (action, meta) => {\n  if (action.type !== 'logux/processed') {\n    setTimeout(() => {\n      serverLog.add({ type: 'logux/processed', id: meta.id })\n    }, 500)\n  }\n})\n\nlet client = new CrossTabClient({\n  subprotocol: location.hash.slice(1) || '1.0.0',\n  userId: '10',\n  server: 'wss://example.com/'\n})\n\nlet node = new ClientNode(client.node.localNodeId, client.log, pair.left)\nnode.connection.url = 'wss://example.com/'\nnode.emitter = client.node.emitter\nclient.node = node\n\nattention(client)\nconfirm(client)\nfavicon(client, {\n  normal: faviconNormal,\n  offline: faviconOffline,\n  error: faviconError\n})\nbadge(client, {\n  messages: badgeEn,\n  styles: badgeStyles\n})\nlog(client)\nstatus(client, s => {\n  document.all.status.innerText = s\n})\n\nlet count = 0\nfunction emoji(state) {\n  if (state === 'disconnected') {\n    return '😴'\n  } else if (state === 'connecting') {\n    return '🔌'\n  } else {\n    return '😊'\n  }\n}\nfunction role(value) {\n  return value.slice(0, 1).toUpperCase()\n}\nfunction updateTitle() {\n  document.title = emoji(client.state) + ' ' + role(client.role) + ' ' + count\n}\n\nclient.on('state', () => {\n  document.all.connection.checked = client.connected\n  updateTitle()\n})\nclient.on('role', () => {\n  updateTitle()\n  document.all.connection.disabled = client.role !== 'leader'\n})\nclient.on('add', action => {\n  if (action.type === 'TICK') count++\n  updateTitle()\n})\nclient.on('clean', action => {\n  if (action.type === 'TICK') count--\n  updateTitle()\n})\n\nclient.log\n  .each(action => {\n    if (action.type === 'TICK') count++\n  })\n  .then(() => {\n    updateTitle()\n  })\n\nclient.on('role', () => {\n  let isLeader = client.role === 'leader'\n  document.all.connection.disabled = !isLeader\n  document.all.disabled.style.display = isLeader ? 'none' : 'inline'\n})\n\nclient.start()\n\ndocument.all.connection.onchange = e => {\n  if (e.target.checked) {\n    client.node.connection.connect()\n  } else {\n    client.node.connection.disconnect()\n  }\n}\n\ndocument.all.add.onclick = () => {\n  client.log.add({ type: 'TICK' }, { reasons: ['tick'], sync: true })\n}\n\ndocument.all.clean.onclick = () => {\n  client.log.removeReason('tick')\n}\n\ndocument.all.error.onclick = () => {\n  setTimeout(() => {\n    client.log.add({ type: 'logux/undo', reason: 'error' })\n  }, 3000)\n}\n\ndocument.all.denied.onclick = () => {\n  setTimeout(() => {\n    client.log.add({ type: 'logux/undo', reason: 'denied' })\n  }, 3000)\n}\n\ndocument.all.serverError.onclick = () => {\n  setTimeout(() => {\n    pair.right.send(['error', 'wrong-format'])\n  }, 3000)\n}\n\ndocument.all.subprotocolError.onclick = () => {\n  client.node.syncError('wrong-subprotocol', {\n    supported: '2.x',\n    used: '1.0.0'\n  })\n}\n\nif (client.options.subprotocol === '1.0.1') {\n  document.all.subprotocolClient.disabled = true\n} else {\n  document.all.subprotocolClient.onclick = () => {\n    window.open(location.toString() + '#1.0.1', '_blank')\n  }\n}\n","export function track(client, id) {\n  if (client.processing[id]) return client.processing[id][0]\n\n  let resolveCallback, rejectCallback\n  let promise = new Promise((resolve, reject) => {\n    resolveCallback = resolve\n    rejectCallback = reject\n  })\n  client.processing[id] = [promise, resolveCallback, rejectCallback]\n\n  return promise\n}\n","export function attention(client) {\n  let doc = document\n  let originTitle = false\n  let unbind = []\n  let timeout = false\n\n  let restoreTitle = () => {\n    if (originTitle) {\n      doc.title = originTitle\n      originTitle = false\n    }\n  }\n\n  let blink = () => {\n    if (doc.hidden && !originTitle) {\n      originTitle = doc.title\n      doc.title = '* ' + doc.title\n    } else {\n      restoreTitle()\n    }\n\n    if (doc.hidden) timeout = setTimeout(blink, 1000)\n  }\n\n  let tabListener = () => {\n    if (!doc.hidden && timeout) {\n      timeout = clearTimeout(timeout)\n      restoreTitle()\n    }\n  }\n\n  if (doc && typeof doc.hidden !== 'undefined') {\n    unbind.push(\n      client.node.on('error', error => {\n        if (error.type !== 'timeout' && !timeout) {\n          blink()\n        }\n      })\n    )\n\n    unbind.push(\n      client.on('add', action => {\n        if (action.type === 'logux/undo' && action.reason && !timeout) {\n          blink()\n        }\n      })\n    )\n\n    document.addEventListener('visibilitychange', tabListener, false)\n    unbind.push(() => {\n      document.removeEventListener('visibilitychange', tabListener, false)\n    })\n  }\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","export function favicon(client, links) {\n  let normal = links.normal\n  let offline = links.offline\n  let error = links.error\n\n  let unbind = []\n  let doc = document\n  let fav = false\n  let prevFav = false\n\n  function update() {\n    if (client.connected && prevFav !== normal) {\n      fav.href = prevFav = normal\n    } else if (\n      !client.connected &&\n      offline &&\n      prevFav !== offline &&\n      prevFav !== error\n    ) {\n      fav.href = prevFav = offline\n    }\n  }\n\n  function setError() {\n    if (error && prevFav !== error) {\n      fav.href = prevFav = error\n    }\n  }\n\n  if (doc) {\n    fav = doc.querySelector('link[rel~=\"icon\"]')\n\n    if (typeof normal === 'undefined') {\n      normal = fav ? fav.href : ''\n    }\n\n    if (!fav) {\n      fav = doc.createElement('link')\n      fav.rel = 'icon'\n      fav.href = ''\n      doc.head.appendChild(fav)\n    }\n\n    unbind.push(client.on('state', update))\n    update()\n\n    unbind.push(\n      client.on('add', action => {\n        if (action.type === 'logux/undo' && action.reason) setError()\n      })\n    )\n\n    unbind.push(\n      client.node.on('error', err => {\n        if (err.type !== 'timeout') setError()\n      })\n    )\n  }\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n"],"names":["$63d2109620f56860$export$6503ec6e8aabbaf","$63d2109620f56860$export$f7ad0328861e2f03","$63d2109620f56860$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$d876bf4e93556ea2$export$c944a4526d4ed4f3","events","emit","event","args","this","forEach","on","cb","push","filter","$1d66856225a58a08$export$b283a0679303f4ba","emitter","action","meta","type","$1d66856225a58a08$export$ce30dbb46644d06c","opts","nodeId","lastTime","sequence","store","listener","listener1","opts1","action1","meta1","newId","generateId","time","parseInt","reasons","keepLast","removeReason","olderThan","action2","byId","addedMeta","add","now","Date","each","opts2","callback","order","Promise","resolve","nextPage","get","result","page","entries","entry","next","bind","diff","k","remove","changeMeta","reason","criteria","id1","$39ff97dd0e81c8b3$export$a5c06b7241b24c94","firstMeta","secondMeta","first","split","second","firstNode","secondNode","firstCounter","secondCounter","firstNodeTime","secondNodeTime","$1fa7c02a11401d93$export$ea0df116fa892998","url","Class","connected","WebSocket","init","ws","onerror","error","onclose","onmessage","data","connect","undefined","onopen","disconnect","close","send","message","readyState","OPEN","stringify","message1","err","received","$008b5e73f8eecaa0$var$checkIndex","index","indexes","added","$008b5e73f8eecaa0$var$forEachIndex","$008b5e73f8eecaa0$var$isDefined","$008b5e73f8eecaa0$var$insert","lastAdded","$008b5e73f8eecaa0$var$eject","start","end","middle","otherAdded","splice","$008b5e73f8eecaa0$var$find","list","value","$008b5e73f8eecaa0$export$b72d712fed4d036d","lastReceived","lastSent","meta2","otherMeta","indexList","j","findIndex","item","created","indexed","slice","id2","key","removed","reasonPos","indexOf","c","youngerThan","minAdded","maxAdded","removedAdded","map","m","removing","includes","sent","values","$3d418336ca5714bb$export$2abef671c5ad47c8","options","supported","used","type1","options1","super","name","description","describe","captureStackTrace","$d3a32a3950e10f5f$var$auth","node","token","auth","authenticated","remoteHeaders","unauthenticated","onMessage","sendError","destroy","e","$d3a32a3950e10f5f$var$checkProtocol","ver","remoteProtocol","minProtocol","$d3a32a3950e10f5f$var$emitEvent","$5810171a6d75ad17$var$NOT_TO_THROW","timeout","$5810171a6d75ad17$var$BEFORE_AUTH","$5810171a6d75ad17$var$syncMappedEvent","lastAddedCache","outMap","changed","sendSync","$5810171a6d75ad17$export$410b0c854570d131","log","connection","remoteNodeId","remoteSubprotocol","localProtocol","localNodeId","ping","timeFix","syncing","state","timeouts","throwsError","unbind","onAdd","onConnecting","onConnect","onDisconnect","initialized","initializing","initialize","localHeaders","catch","waitFor","clearTimeout","pingTimeout","endTimeout","setLocalHeaders","headers","sendHeaders","msg","delayPing","setState","msg1","outFilter","syncError","state1","startTimeout","ms","setTimeout","shift","sendPing","lastSynced","promises","then","r","all","lastSynced1","syncSinceQuery","setLastSent","setLastSynced","setLastReceived","value1","synced","getLastSynced","getLastAdded","sendDuilian","$5810171a6d75ad17$var$DUILIANS","duilianMessage","line","prototype","sendConnect","subprotocol","fixTime","connectSended","sendConnected","connectMessage","baseTime","syncSince","connectedMessage","authTime","roundTrip","Math","floor","originMeta","unshift","concat","sendSynced","syncMessage","join","process","inMap","filtered","inFilter","res","syncedMessage","pingMessage","pongMessage","sendDebug","debugMessage","errorMessage","headersMessage","$e498a8c71ba1e290$var$DEFAULT_OPTIONS","$e498a8c71ba1e290$export$b4fa87e80e36ef61","$b9fce833465b4433$var$LocalConnection","pair","other","right","left","delay","$01fffeb060f191fe$var$DEFAULT_OPTIONS","minDelay","maxDelay","attempts","Infinity","$01fffeb060f191fe$var$FATAL_ERRORS","$01fffeb060f191fe$export$495c43d07cb6ba9a","reconnecting","connecting","reconnect","timer","visibility","document","hidden","navigator","onLine","window","addEventListener","removeEventListener","nextDelay","args1","base","rand","random","deviation","min","$bfbe87293f7dc9a0$export$bf3b66d897b985f1","parts","userId","clientId","$ca74aeddf6f6e4e4$export$471f7ae5c4103ae1","client","observable","disconnected","wait","old","duration","processing","setSynchronized","changeState","sync","$72e90b5c41fa8b0e$var$injectStyles","element","styles","style","$72e90b5c41fa8b0e$var$RESET","boxSizing","textIndent","textTransform","wordSpacing","letterSpacing","fontStyle","fontVariant","fontWeight","lineHeight","$2d10d5f430cd6bf5$export$ac4959f4f1338dfc","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","$43493949eed14d08$export$5e6967d3d1d0f8e8","$13bd0331ed4c6f42$var$ALLOWED_META","$13bd0331ed4c6f42$var$tabPing","localStorage","setItem","prefix","tabId","$13bd0331ed4c6f42$var$cleanTabActions","isLocalStorage","removeItem","$92880aeea7e47d37$var$storageKey","$92880aeea7e47d37$var$sendToTabs","json","console","role","$92880aeea7e47d37$var$getLeader","getItem","$92880aeea7e47d37$var$leaderPing","$92880aeea7e47d37$var$onDeadLeader","$92880aeea7e47d37$var$setState","$92880aeea7e47d37$var$startElection","$92880aeea7e47d37$var$watchForLeader","watching","$92880aeea7e47d37$var$isActiveLeader","roleTimeout","$92880aeea7e47d37$var$setRole","leadership","setInterval","unloading","leaderPing","elections","clearInterval","leader","leaderTimeout","electionDelay","$14432fafe9b1f292$var$block","returnValue","$b180e4f359139a62$var$bold","string","$b180e4f359139a62$var$showLog","text","details","Array","from","match","_","groupCollapsed","groupEnd","$5a34dd4ab0f961e7$exports","URL","import","$e915da90da96d5c5$exports","$f0fd0b83b79a5a63$exports","$0279561a09c703f2$exports","$2b45d7e40e2e0e61$export$92de9191ffb7ae9b","position","width","height","margin","paddingLeft","opacity","borderRadius","color","fontFamily","zIndex","backgroundPosition","backgroundRepeat","backgroundSize","display","verticalAlign","synchronized","backgroundColor","backgroundImage","$parcel$interopDefault","sending","protocolError","$eabffa60ff82d9fa$exports","$919a8f50ce876a0d$exports","$ba38961c0db1c7ba$exports","$71d6922eb9d326ce$var$pair","$71d6922eb9d326ce$var$serverLog","$71d6922eb9d326ce$var$client","cleanPrevActions","resolveCallback","rejectCallback","promise","reject","$8bd902903ed3993f$export$6b2a7d5132615086","changeUser","wasConnected","getClientId","onUnload","pinging","clean","tabTimeout","lastId","nextLog","resubscribe","last","subscriptions","subscribing","unsubscribing","unsubscription","subscribers","subscription","channel","channels","tabPing","server","async","test","allowDangerousProtocol","unbindEnvTest","env","stack","since","leaderState","onStorage","e1","newValue","tab","isArray","compare","leftParts","rightParts","leftNumber","rightNumber","$92880aeea7e47d37$var$compareSubprotocols","subprotocolKey","location","hash","$71d6922eb9d326ce$var$node","doc","originTitle","restoreTitle","title","blink","tabListener","$d7e41fcc2cda5154$export$45b92471da762af7","update","$14432fafe9b1f292$export$715f9d76bb8c1fea","links","normal","offline","fav","prevFav","href","setError","querySelector","createElement","rel","head","appendChild","$beb3ce22e0db6c85$export$d1d228f217d37317","messages","widget","setAttribute","top","transform","pos","$72e90b5c41fa8b0e$var$setPosition","show","innerHTML","denied","body","$72e90b5c41fa8b0e$export$4aebd143f31d0c0d","prevConnected","Server","cleaned","ignore","ignoreActions","reduce","Action","processed","Meta","From","user","startsWith","$b180e4f359139a62$export$bef1f36f5486a6a3","s","status","innerText","$71d6922eb9d326ce$var$count","$71d6922eb9d326ce$var$updateTitle","checked","disabled","isLeader","onchange","target","onclick","serverError","subprotocolError","subprotocolClient","open"],"version":3,"file":"index.3f1a31ce.js.map"}