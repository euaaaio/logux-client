{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-884933bf03045105.js","node_modules/nanoevents/index.js","node_modules/@logux/core/log/index.js","node_modules/@logux/core/is-first-older/index.js","node_modules/@logux/core/ws-connection/index.js","node_modules/@logux/core/memory-store/index.js","node_modules/@logux/core/logux-error/index.js","node_modules/@logux/core/connect/index.js","node_modules/@logux/core/base-node/index.js","node_modules/@logux/core/sync/index.js","node_modules/@logux/core/ping/index.js","node_modules/@logux/core/debug/index.js","node_modules/@logux/core/error/index.js","node_modules/@logux/core/headers/index.js","node_modules/@logux/core/client-node/index.js","node_modules/@logux/core/local-pair/index.js","node_modules/@logux/core/reconnect/index.js","node_modules/@logux/core/parse-id/index.js","status/index.js","badge/index.js","node_modules/nanoid/index.browser.js","logux-undo-error/index.js","client/index.js","cross-tab-client/index.js","confirm/index.js","log/index.js","node_modules/@parcel/runtime-js/lib/runtime-804521e07fe7baf8.js","node_modules/@parcel/runtime-js/lib/runtime-b362589429e9c0ca.js","node_modules/@parcel/runtime-js/lib/runtime-8e8ad29bcd66e3f3.js","node_modules/@parcel/runtime-js/lib/runtime-1434a82afe1195f1.js","badge/styles/index.js","node_modules/@parcel/runtime-js/lib/runtime-44a8df838a83343f.js","node_modules/@parcel/runtime-js/lib/runtime-d1134dda1a907e17.js","node_modules/@parcel/runtime-js/lib/runtime-e50e77fc15c3cc7b.js","test/demo/index.js","track/index.js","attention/index.js","favicon/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"7VAMW\\\":\\\"index.88c45cfd.js\\\",\\\"6eFIr\\\":\\\"refresh.f7f11930.svg\\\",\\\"h6GVz\\\":\\\"success.5585cf5f.svg\\\",\\\"2sWNB\\\":\\\"offline.c7da2f9d.svg\\\",\\\"9YSsL\\\":\\\"error.8319e405.svg\\\",\\\"LxdJF\\\":\\\"offline.203f1963.png\\\",\\\"4khIt\\\":\\\"normal.60452f34.png\\\",\\\"hnHOV\\\":\\\"error.a2ca88ad.png\\\"}\"));","export let createNanoEvents = () => ({\n  events: {},\n  emit(event, ...args) {\n    ;(this.events[event] || []).forEach(i => i(...args))\n  },\n  on(event, cb) {\n    ;(this.events[event] = this.events[event] || []).push(cb)\n    return () =>\n      (this.events[event] = (this.events[event] || []).filter(i => i !== cb))\n  }\n})\n","import { createNanoEvents } from 'nanoevents'\n\nexport function actionEvents(emitter, event, action, meta) {\n  if (action.id) {\n    emitter.emit(`${event}-${action.type}-${action.id}`, action, meta)\n  }\n  emitter.emit(`${event}-${action.type}-`, action, meta)\n  emitter.emit(event, action, meta)\n}\n\nexport class Log {\n  constructor(opts = {}) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof opts.nodeId === 'undefined') {\n        throw new Error('Expected node ID')\n      }\n      if (typeof opts.store !== 'object') {\n        throw new Error('Expected store')\n      }\n      if (opts.nodeId.includes(' ')) {\n        throw new Error('Space is prohibited in node ID')\n      }\n    }\n\n    this.nodeId = opts.nodeId\n\n    this.lastTime = 0\n    this.sequence = 0\n\n    this.store = opts.store\n\n    this.emitter = createNanoEvents()\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  type(type, listener, opts = {}) {\n    let event = opts.event || 'add'\n    let id = opts.id || ''\n    return this.emitter.on(`${event}-${type}-${id}`, listener)\n  }\n\n  async add(action, meta = {}) {\n    if (typeof action.type === 'undefined') {\n      throw new Error('Expected \"type\" in action')\n    }\n\n    let newId = false\n    if (typeof meta.id === 'undefined') {\n      newId = true\n      meta.id = this.generateId()\n    }\n\n    if (typeof meta.time === 'undefined') {\n      meta.time = parseInt(meta.id)\n    }\n\n    if (typeof meta.reasons === 'undefined') {\n      meta.reasons = []\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(meta.reasons)) {\n        throw new Error('Expected \"reasons\" to be an array of strings')\n      }\n\n      for (let reason of meta.reasons) {\n        if (typeof reason !== 'string') {\n          throw new Error('Expected \"reasons\" to be an array of strings')\n        }\n      }\n\n      if (typeof meta.indexes !== 'undefined') {\n        if (!Array.isArray(meta.indexes)) {\n          throw new Error('Expected \"indexes\" to be an array of strings')\n        }\n\n        for (let index of meta.indexes) {\n          if (typeof index !== 'string') {\n            throw new Error('Expected \"indexes\" to be an array of strings')\n          }\n        }\n      }\n    }\n\n    actionEvents(this.emitter, 'preadd', action, meta)\n\n    if (meta.keepLast) {\n      this.removeReason(meta.keepLast, { olderThan: meta })\n      meta.reasons.push(meta.keepLast)\n    }\n\n    if (meta.reasons.length === 0 && newId) {\n      actionEvents(this.emitter, 'add', action, meta)\n      actionEvents(this.emitter, 'clean', action, meta)\n      return meta\n    } else if (meta.reasons.length === 0) {\n      let [action2] = await this.store.byId(meta.id)\n      if (action2) {\n        return false\n      } else {\n        actionEvents(this.emitter, 'add', action, meta)\n        actionEvents(this.emitter, 'clean', action, meta)\n        return meta\n      }\n    } else {\n      let addedMeta = await this.store.add(action, meta)\n      if (addedMeta === false) {\n        return false\n      } else {\n        actionEvents(this.emitter, 'add', action, meta)\n        return addedMeta\n      }\n    }\n  }\n\n  generateId() {\n    let now = Date.now()\n    if (now <= this.lastTime) {\n      now = this.lastTime\n      this.sequence += 1\n    } else {\n      this.lastTime = now\n      this.sequence = 0\n    }\n    return now + ' ' + this.nodeId + ' ' + this.sequence\n  }\n\n  each(opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = { order: 'created' }\n    }\n\n    let store = this.store\n    return new Promise(resolve => {\n      async function nextPage(get) {\n        let page = await get()\n        let result\n        for (let i = page.entries.length - 1; i >= 0; i--) {\n          let entry = page.entries[i]\n          result = callback(entry[0], entry[1])\n          if (result === false) break\n        }\n\n        if (result === false || !page.next) {\n          resolve()\n        } else {\n          nextPage(page.next)\n        }\n      }\n\n      nextPage(store.get.bind(store, opts))\n    })\n  }\n\n  async changeMeta(id, diff) {\n    for (let k in diff) {\n      if (\n        k === 'id' ||\n        k === 'added' ||\n        k === 'time' ||\n        k === 'subprotocol' ||\n        k === 'indexes'\n      ) {\n        throw new Error('Meta \"' + k + '\" is read-only')\n      }\n    }\n\n    if (diff.reasons && diff.reasons.length === 0) {\n      let entry = await this.store.remove(id)\n      if (entry) {\n        for (let k in diff) entry[1][k] = diff[k]\n        actionEvents(this.emitter, 'clean', entry[0], entry[1])\n      }\n      return !!entry\n    } else {\n      return this.store.changeMeta(id, diff)\n    }\n  }\n\n  removeReason(reason, criteria = {}) {\n    return this.store.removeReason(reason, criteria, (action, meta) => {\n      actionEvents(this.emitter, 'clean', action, meta)\n    })\n  }\n\n  byId(id) {\n    return this.store.byId(id)\n  }\n}\n","export function isFirstOlder(firstMeta, secondMeta) {\n  if (firstMeta && !secondMeta) {\n    return false\n  } else if (!firstMeta && secondMeta) {\n    return true\n  }\n\n  if (firstMeta.time > secondMeta.time) {\n    return false\n  } else if (firstMeta.time < secondMeta.time) {\n    return true\n  }\n\n  let first = firstMeta.id.split(' ')\n  let second = secondMeta.id.split(' ')\n\n  let firstNode = first[1]\n  let secondNode = second[1]\n  if (firstNode > secondNode) {\n    return false\n  } else if (firstNode < secondNode) {\n    return true\n  }\n\n  let firstCounter = parseInt(first[2])\n  let secondCounter = parseInt(second[2])\n  if (firstCounter > secondCounter) {\n    return false\n  } else if (firstCounter < secondCounter) {\n    return true\n  }\n\n  let firstNodeTime = parseInt(first[0])\n  let secondNodeTime = parseInt(second[0])\n  if (firstNodeTime > secondNodeTime) {\n    return false\n  } else if (firstNodeTime < secondNodeTime) {\n    return true\n  }\n\n  return false\n}\n","import { createNanoEvents } from 'nanoevents'\n\nexport class WsConnection {\n  constructor(url, Class, opts) {\n    this.connected = false\n    this.emitter = createNanoEvents()\n    if (Class) {\n      this.Class = Class\n    } else if (typeof WebSocket !== 'undefined') {\n      this.Class = WebSocket\n    } else {\n      throw new Error('No WebSocket support')\n    }\n    this.url = url\n    this.opts = opts\n  }\n\n  init(ws) {\n    ws.onerror = event => {\n      this.emitter.emit('error', event.error || new Error('WS Error'))\n    }\n\n    ws.onclose = () => {\n      this.onclose()\n    }\n\n    ws.onmessage = event => {\n      let data\n      try {\n        data = JSON.parse(event.data)\n      } catch {\n        this.error(event.data)\n        return\n      }\n      this.emitter.emit('message', data)\n    }\n\n    this.ws = ws\n  }\n\n  connect() {\n    if (this.ws) return Promise.resolve()\n\n    this.emitter.emit('connecting')\n    this.init(new this.Class(this.url, undefined, this.opts))\n\n    return new Promise(resolve => {\n      this.ws.onopen = () => {\n        this.connected = true\n        this.emitter.emit('connect')\n        resolve()\n      }\n    })\n  }\n\n  disconnect() {\n    if (this.ws) {\n      this.ws.onclose = undefined\n      this.ws.close()\n      this.onclose()\n    }\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  send(message) {\n    if (this.ws && this.ws.readyState === this.ws.OPEN) {\n      this.ws.send(JSON.stringify(message))\n    } else {\n      this.emitter.emit('error', new Error('WS was closed'))\n    }\n  }\n\n  error(message) {\n    let err = new Error('Wrong message format')\n    err.received = message\n    this.emitter.emit('error', err)\n  }\n\n  onclose() {\n    if (this.ws) {\n      this.connected = false\n      this.emitter.emit('disconnect')\n      this.ws = undefined\n    }\n  }\n}\n","import { isFirstOlder } from '../is-first-older/index.js'\n\nfunction checkIndex(store, index) {\n  if (!store.indexes[index]) {\n    store.indexes[index] = { added: [], entries: [] }\n  }\n}\n\nfunction forEachIndex(meta, cb) {\n  let indexes = meta.indexes\n  if (isDefined(indexes) && indexes.length > 0) {\n    for (let index of indexes) {\n      cb(index)\n    }\n  }\n}\n\nfunction insert(store, entry) {\n  store.lastAdded += 1\n  entry[1].added = store.lastAdded\n  store.added.push(entry)\n  forEachIndex(entry[1], index => {\n    checkIndex(store, index)\n    store.indexes[index].added.push(entry)\n  })\n  return Promise.resolve(entry[1])\n}\n\nfunction eject(store, meta) {\n  let added = meta.added\n  let start = 0\n  let end = store.added.length - 1\n  while (start <= end) {\n    let middle = (end + start) >> 1\n    let otherAdded = store.added[middle][1].added\n    if (otherAdded < added) {\n      start = middle + 1\n    } else if (otherAdded > added) {\n      end = middle - 1\n    } else {\n      store.added.splice(middle, 1)\n      break\n    }\n  }\n}\n\nfunction find(list, id) {\n  for (let i = list.length - 1; i >= 0; i--) {\n    if (id === list[i][1].id) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction isDefined(value) {\n  return typeof value !== 'undefined'\n}\n\nexport class MemoryStore {\n  constructor() {\n    this.entries = []\n    this.added = []\n    this.indexes = {}\n    this.lastReceived = 0\n    this.lastAdded = 0\n    this.lastSent = 0\n  }\n\n  async add(action, meta) {\n    let entry = [action, meta]\n    let id = meta.id\n\n    let list = this.entries\n    for (let i = 0; i < list.length; i++) {\n      let [, otherMeta] = list[i]\n      if (id === otherMeta.id) {\n        return false\n      } else if (!isFirstOlder(otherMeta, meta)) {\n        forEachIndex(meta, index => {\n          checkIndex(this, index)\n          let indexList = this.indexes[index].entries\n          let j = indexList.findIndex(item => !isFirstOlder(item[1], meta))\n          indexList.splice(j, 0, entry)\n        })\n        list.splice(i, 0, entry)\n        return insert(this, entry)\n      }\n    }\n\n    forEachIndex(meta, index => {\n      checkIndex(this, index)\n      this.indexes[index].entries.push(entry)\n    })\n    list.push(entry)\n    return insert(this, entry)\n  }\n\n  async byId(id) {\n    let created = find(this.entries, id)\n    if (created === -1) {\n      return [null, null]\n    } else {\n      let [action, meta] = this.entries[created]\n      return [action, meta]\n    }\n  }\n\n  async remove(id, created) {\n    if (typeof created === 'undefined') {\n      created = find(this.entries, id)\n      if (created === -1) return Promise.resolve(false)\n    }\n\n    let entry = [this.entries[created][0], this.entries[created][1]]\n    forEachIndex(entry[1], index => {\n      let entries = this.indexes[index].entries\n      let indexed = find(entries, id)\n      if (indexed !== -1) entries.splice(indexed, 1)\n    })\n    this.entries.splice(created, 1)\n\n    forEachIndex(entry[1], index => {\n      eject(this.indexes[index], entry[1])\n    })\n    eject(this, entry[1])\n\n    return entry\n  }\n\n  async get(opts = {}) {\n    let index = opts.index\n    let store = this\n    let entries\n    if (index) {\n      store = this.indexes[index] || { added: [], entries: [] }\n    }\n    if (opts.order === 'created') {\n      entries = store.entries\n    } else {\n      entries = store.added\n    }\n    return { entries: entries.slice(0) }\n  }\n\n  async changeMeta(id, diff) {\n    let index = find(this.entries, id)\n    if (index === -1) {\n      return false\n    } else {\n      let meta = this.entries[index][1]\n      for (let key in diff) meta[key] = diff[key]\n      return true\n    }\n  }\n\n  async removeReason(reason, criteria, callback) {\n    let removed = []\n\n    if (criteria.id) {\n      let index = find(this.entries, criteria.id)\n      if (index !== -1) {\n        let meta = this.entries[index][1]\n        let reasonPos = meta.reasons.indexOf(reason)\n        if (reasonPos !== -1) {\n          meta.reasons.splice(reasonPos, 1)\n          if (meta.reasons.length === 0) {\n            callback(this.entries[index][0], meta)\n            this.remove(criteria.id)\n          }\n        }\n      }\n    } else {\n      this.entries = this.entries.filter(([action, meta]) => {\n        let c = criteria\n\n        let reasonPos = meta.reasons.indexOf(reason)\n        if (reasonPos === -1) {\n          return true\n        }\n        if (isDefined(c.olderThan) && !isFirstOlder(meta, c.olderThan)) {\n          return true\n        }\n        if (isDefined(c.youngerThan) && !isFirstOlder(c.youngerThan, meta)) {\n          return true\n        }\n        if (isDefined(c.minAdded) && meta.added < c.minAdded) {\n          return true\n        }\n        if (isDefined(c.maxAdded) && meta.added > c.maxAdded) {\n          return true\n        }\n\n        meta.reasons.splice(reasonPos, 1)\n        if (meta.reasons.length === 0) {\n          callback(action, meta)\n          removed.push(meta)\n          return false\n        } else {\n          return true\n        }\n      })\n\n      let removedAdded = removed.map(m => m.added)\n      let removing = i => !removedAdded.includes(i[1].added)\n      this.added = this.added.filter(removing)\n\n      for (let meta of removed) {\n        forEachIndex(meta, i => {\n          this.indexes[i].entries = this.indexes[i].entries.filter(removing)\n          this.indexes[i].added = this.indexes[i].added.filter(removing)\n        })\n      }\n    }\n  }\n\n  async clean() {\n    this.entries = []\n    this.added = []\n    this.indexes = {}\n    this.lastReceived = 0\n    this.lastAdded = 0\n    this.lastSent = 0\n  }\n\n  async getLastAdded() {\n    return this.lastAdded\n  }\n\n  async getLastSynced() {\n    return {\n      received: this.lastReceived,\n      sent: this.lastSent\n    }\n  }\n\n  async setLastSynced(values) {\n    if (typeof values.sent !== 'undefined') {\n      this.lastSent = values.sent\n    }\n    if (typeof values.received !== 'undefined') {\n      this.lastReceived = values.received\n    }\n  }\n}\n","export class LoguxError extends Error {\n  static describe(type, options) {\n    if (type === 'timeout') {\n      return 'A timeout was reached (' + options + ' ms)'\n    } else if (type === 'wrong-format') {\n      return 'Wrong message format in ' + options\n    } else if (type === 'unknown-message') {\n      return 'Unknown message `' + options + '` type'\n    } else if (type === 'bruteforce') {\n      return 'Too many wrong authentication attempts'\n    } else if (type === 'wrong-protocol') {\n      return (\n        `Logux supports protocols only from version ${options.supported}` +\n        `, but you use ${options.used}`\n      )\n    } else if (type === 'wrong-subprotocol') {\n      return (\n        `Only ${options.supported} application subprotocols are ` +\n        `supported, but you use ${options.used}`\n      )\n    } else if (type === 'wrong-credentials') {\n      return 'Wrong credentials'\n    } else {\n      return type\n    }\n  }\n\n  constructor(type, options, received) {\n    super(type)\n    this.name = 'LoguxError'\n    this.type = type\n    this.options = options\n    this.description = LoguxError.describe(type, options)\n    this.received = !!received\n\n    if (received) {\n      this.message = 'Logux received ' + this.type + ' error'\n      if (this.description !== this.type) {\n        this.message += ' (' + this.description + ')'\n      }\n    } else {\n      this.message = this.description\n    }\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, LoguxError)\n    }\n  }\n}\n","import { LoguxError } from '../logux-error/index.js'\n\nasync function auth(node, nodeId, token, callback) {\n  if (!node.options.auth) {\n    node.authenticated = true\n    callback()\n    return\n  }\n\n  try {\n    let access = await node.options.auth(nodeId, token, node.remoteHeaders)\n    if (access) {\n      node.authenticated = true\n      callback()\n      for (let i = 0; i < node.unauthenticated.length; i++) {\n        node.onMessage(node.unauthenticated[i])\n      }\n      node.unauthenticated = []\n    } else {\n      node.sendError(new LoguxError('wrong-credentials'))\n      node.destroy()\n    }\n  } catch (e) {\n    if (e.name === 'LoguxError') {\n      node.sendError(e)\n      node.destroy()\n    } else {\n      node.error(e)\n    }\n  }\n}\n\nfunction checkProtocol(node, ver) {\n  node.remoteProtocol = ver\n\n  if (ver >= node.minProtocol) {\n    return true\n  } else {\n    node.sendError(\n      new LoguxError('wrong-protocol', {\n        supported: node.minProtocol,\n        used: ver\n      })\n    )\n    node.destroy()\n    return false\n  }\n}\n\nfunction emitEvent(node) {\n  try {\n    node.emitter.emit('connect')\n  } catch (e) {\n    if (e.name === 'LoguxError') {\n      node.sendError(e)\n      return false\n    } else {\n      throw e\n    }\n  }\n  return true\n}\n\nexport async function sendConnect() {\n  let message = [\n    'connect',\n    this.localProtocol,\n    this.localNodeId,\n    this.lastReceived\n  ]\n\n  let options = {}\n  if (this.options.token) {\n    if (typeof this.options.token === 'function') {\n      options.token = await this.options.token()\n    } else {\n      options.token = this.options.token\n    }\n  }\n  if (this.options.subprotocol) {\n    options.subprotocol = this.options.subprotocol\n  }\n  if (Object.keys(options).length > 0) message.push(options)\n\n  if (this.options.fixTime) this.connectSended = this.now()\n\n  if (Object.keys(this.localHeaders).length > 0) {\n    this.sendHeaders(this.localHeaders)\n  }\n\n  this.startTimeout()\n  this.send(message)\n}\n\nexport async function sendConnected(start, end) {\n  let message = [\n    'connected',\n    this.localProtocol,\n    this.localNodeId,\n    [start, end]\n  ]\n\n  let options = {}\n  if (this.options.token) {\n    if (typeof this.options.token === 'function') {\n      options.token = await this.options.token()\n    } else {\n      options.token = this.options.token\n    }\n  }\n  if (this.options.subprotocol) {\n    options.subprotocol = this.options.subprotocol\n  }\n  if (Object.keys(options).length > 0) message.push(options)\n\n  if (Object.keys(this.localHeaders).length > 0) {\n    this.sendHeaders(this.localHeaders)\n  }\n\n  this.send(message)\n}\n\nexport function connectMessage(ver, nodeId, synced, options) {\n  let start = this.now()\n  if (!options) options = {}\n\n  this.remoteNodeId = nodeId\n  if (!checkProtocol(this, ver)) return\n\n  this.remoteSubprotocol = options.subprotocol || '0.0.0'\n\n  if (!emitEvent(this)) {\n    this.destroy()\n    return\n  }\n\n  auth(this, nodeId, options.token, () => {\n    this.baseTime = this.now()\n    this.sendConnected(start, this.baseTime)\n    this.syncSince(synced)\n  })\n}\n\nexport function connectedMessage(ver, nodeId, time, options) {\n  if (!options) options = {}\n\n  this.endTimeout()\n  this.remoteNodeId = nodeId\n  if (!checkProtocol(this, ver)) return\n\n  this.baseTime = time[1]\n\n  if (this.options.fixTime) {\n    let now = this.now()\n    let authTime = time[1] - time[0]\n    let roundTrip = now - this.connectSended - authTime\n    this.timeFix = Math.floor(this.connectSended - time[0] + roundTrip / 2)\n  }\n\n  this.remoteSubprotocol = options.subprotocol || '0.0.0'\n\n  if (!emitEvent(this)) {\n    this.destroy()\n    return\n  }\n\n  auth(this, nodeId, options.token, () => {\n    this.syncSince(this.lastSent)\n  })\n}\n","import { createNanoEvents } from 'nanoevents'\n\nimport {\n  sendConnect,\n  sendConnected,\n  connectMessage,\n  connectedMessage\n} from '../connect/index.js'\nimport {\n  syncedMessage,\n  syncMessage,\n  sendSynced,\n  sendSync\n} from '../sync/index.js'\nimport { sendPing, pingMessage, pongMessage } from '../ping/index.js'\nimport { sendHeaders, headersMessage } from '../headers/index.js'\nimport { sendDebug, debugMessage } from '../debug/index.js'\nimport { sendError, errorMessage } from '../error/index.js'\nimport { LoguxError } from '../logux-error/index.js'\n\nconst NOT_TO_THROW = {\n  'wrong-subprotocol': true,\n  'wrong-protocol': true,\n  'timeout': true\n}\n\nconst BEFORE_AUTH = ['connect', 'connected', 'error', 'debug', 'headers']\n\nasync function syncMappedEvent(node, action, meta) {\n  let added = meta.added\n  if (typeof added === 'undefined') {\n    let lastAdded = node.lastAddedCache\n    added = lastAdded > node.lastSent ? lastAdded : node.lastSent\n  }\n  if (node.options.outMap) {\n    try {\n      let changed = await node.options.outMap(action, meta)\n      node.sendSync(added, [changed])\n    } catch (e) {\n      node.error(e)\n    }\n  } else {\n    node.sendSync(added, [[action, meta]])\n  }\n}\n\nexport class BaseNode {\n  constructor(nodeId, log, connection, options = {}) {\n    this.remoteNodeId = undefined\n    this.remoteProtocol = undefined\n    this.remoteSubprotocol = undefined\n\n    this.minProtocol = 3\n    this.localProtocol = 4\n    this.localNodeId = nodeId\n\n    this.log = log\n    this.connection = connection\n    this.options = options\n\n    if (this.options.ping && !this.options.timeout) {\n      throw new Error('You must set timeout option to use ping')\n    }\n\n    this.connected = false\n    this.authenticated = false\n    this.unauthenticated = []\n\n    this.timeFix = 0\n    this.syncing = 0\n    this.received = {}\n\n    this.lastSent = 0\n    this.lastReceived = 0\n\n    this.state = 'disconnected'\n\n    this.emitter = createNanoEvents()\n    this.timeouts = []\n    this.throwsError = true\n\n    this.unbind = [\n      log.on('add', (action, meta) => {\n        this.onAdd(action, meta)\n      }),\n      connection.on('connecting', () => {\n        this.onConnecting()\n      }),\n      connection.on('connect', () => {\n        this.onConnect()\n      }),\n      connection.on('message', message => {\n        this.onMessage(message)\n      }),\n      connection.on('error', error => {\n        if (error.message === 'Wrong message format') {\n          this.sendError(new LoguxError('wrong-format', error.received))\n          this.connection.disconnect('error')\n        } else {\n          this.error(error)\n        }\n      }),\n      connection.on('disconnect', () => {\n        this.onDisconnect()\n      })\n    ]\n\n    this.initialized = false\n    this.lastAddedCache = 0\n    this.initializing = this.initialize()\n    this.localHeaders = {}\n    this.remoteHeaders = {}\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  catch(listener) {\n    this.throwsError = false\n    let unbind = this.on('error', listener)\n    return () => {\n      this.throwsError = true\n      unbind()\n    }\n  }\n\n  waitFor(state) {\n    if (this.state === state) {\n      return Promise.resolve()\n    }\n    return new Promise(resolve => {\n      let unbind = this.on('state', () => {\n        if (this.state === state) {\n          unbind()\n          resolve()\n        }\n      })\n    })\n  }\n\n  destroy() {\n    if (this.connection.destroy) {\n      this.connection.destroy()\n    } else if (this.connected) {\n      this.connection.disconnect('destroy')\n    }\n    for (let i of this.unbind) i()\n    clearTimeout(this.pingTimeout)\n    this.endTimeout()\n  }\n\n  setLocalHeaders(headers) {\n    this.localHeaders = headers\n    if (this.connected) {\n      this.sendHeaders(headers)\n    }\n  }\n\n  send(msg) {\n    if (!this.connected) return\n    this.delayPing()\n    try {\n      this.connection.send(msg)\n    } catch (e) {\n      this.error(e)\n    }\n  }\n\n  onConnecting() {\n    this.setState('connecting')\n  }\n\n  onConnect() {\n    this.delayPing()\n    this.connected = true\n  }\n\n  onDisconnect() {\n    while (this.timeouts.length > 0) {\n      this.endTimeout()\n    }\n    if (this.pingTimeout) clearTimeout(this.pingTimeout)\n    this.authenticated = false\n    this.connected = false\n    this.setState('disconnected')\n  }\n\n  onMessage(msg) {\n    this.delayPing()\n    let name = msg[0]\n\n    if (!this.authenticated && !BEFORE_AUTH.includes(name)) {\n      this.unauthenticated.push(msg)\n      return\n    }\n\n    this[name + 'Message'](...msg.slice(1))\n  }\n\n  async onAdd(action, meta) {\n    if (!this.authenticated) return\n    if (this.lastAddedCache < meta.added) {\n      this.lastAddedCache = meta.added\n    }\n\n    if (this.received && this.received[meta.id]) {\n      delete this.received[meta.id]\n      return\n    }\n\n    if (this.options.outFilter) {\n      try {\n        let result = await this.options.outFilter(action, meta)\n        if (result) syncMappedEvent(this, action, meta)\n      } catch (e) {\n        this.error(e)\n      }\n    } else {\n      syncMappedEvent(this, action, meta)\n    }\n  }\n\n  syncError(type, options, received) {\n    let err = new LoguxError(type, options, received)\n    this.emitter.emit('error', err)\n    if (!NOT_TO_THROW[type] && this.throwsError) {\n      throw err\n    }\n  }\n\n  error(err) {\n    this.emitter.emit('error', err)\n    this.connection.disconnect('error')\n    if (this.throwsError) {\n      throw err\n    }\n  }\n\n  setState(state) {\n    if (this.state !== state) {\n      this.state = state\n      this.emitter.emit('state')\n    }\n  }\n\n  startTimeout() {\n    if (!this.options.timeout) return\n\n    let ms = this.options.timeout\n    let timeout = setTimeout(() => {\n      if (this.connected) this.connection.disconnect('timeout')\n      this.syncError('timeout', ms)\n    }, ms)\n\n    this.timeouts.push(timeout)\n  }\n\n  endTimeout() {\n    if (this.timeouts.length > 0) {\n      clearTimeout(this.timeouts.shift())\n    }\n  }\n\n  delayPing() {\n    if (!this.options.ping) return\n    if (this.pingTimeout) clearTimeout(this.pingTimeout)\n\n    this.pingTimeout = setTimeout(() => {\n      if (this.connected && this.authenticated) this.sendPing()\n    }, this.options.ping)\n  }\n\n  async syncSinceQuery(lastSynced) {\n    let promises = []\n    await this.log.each({ order: 'added' }, (action, meta) => {\n      if (meta.added <= lastSynced) return false\n      if (this.options.outFilter) {\n        promises.push(\n          this.options\n            .outFilter(action, meta)\n            .then(r => {\n              if (r) {\n                return [action, meta]\n              } else {\n                return false\n              }\n            })\n            .catch(e => {\n              this.error(e)\n            })\n        )\n      } else {\n        promises.push(Promise.resolve([action, meta]))\n      }\n      return true\n    })\n\n    let entries = await Promise.all(promises)\n\n    let data = { added: 0 }\n    data.entries = entries.filter(entry => {\n      if (entry && data.added < entry[1].added) {\n        data.added = entry[1].added\n      }\n      return entry !== false\n    })\n    return data\n  }\n\n  async syncSince(lastSynced) {\n    let data = await this.syncSinceQuery(lastSynced)\n    if (!this.connected) return\n    if (data.entries.length > 0) {\n      if (this.options.outMap) {\n        Promise.all(\n          data.entries.map(i => {\n            return this.options.outMap(i[0], i[1])\n          })\n        )\n          .then(changed => {\n            this.sendSync(data.added, changed)\n          })\n          .catch(e => {\n            this.error(e)\n          })\n      } else {\n        this.sendSync(data.added, data.entries)\n      }\n    } else {\n      this.setState('synchronized')\n    }\n  }\n\n  setLastSent(value) {\n    if (this.lastSent < value) {\n      this.lastSent = value\n      this.log.store.setLastSynced({ sent: value })\n    }\n  }\n\n  setLastReceived(value) {\n    if (this.lastReceived < value) this.lastReceived = value\n    this.log.store.setLastSynced({ received: value })\n  }\n\n  now() {\n    return Date.now()\n  }\n\n  async initialize() {\n    let [synced, added] = await Promise.all([\n      this.log.store.getLastSynced(),\n      this.log.store.getLastAdded()\n    ])\n    this.initialized = true\n    this.lastSent = synced.sent\n    this.lastReceived = synced.received\n    this.lastAddedCache = added\n    if (this.connection.connected) this.onConnect()\n  }\n\n  sendDuilian() {\n    this.send(['duilian', Object.keys(DUILIANS)[0]])\n  }\n\n  duilianMessage(line) {\n    if (DUILIANS[line]) {\n      this.send(['duilian', DUILIANS[line]])\n    }\n  }\n}\n\nBaseNode.prototype.sendConnect = sendConnect\nBaseNode.prototype.sendConnected = sendConnected\nBaseNode.prototype.connectMessage = connectMessage\nBaseNode.prototype.connectedMessage = connectedMessage\n\nBaseNode.prototype.sendSync = sendSync\nBaseNode.prototype.sendSynced = sendSynced\nBaseNode.prototype.syncMessage = syncMessage\nBaseNode.prototype.syncedMessage = syncedMessage\n\nBaseNode.prototype.sendPing = sendPing\nBaseNode.prototype.pingMessage = pingMessage\nBaseNode.prototype.pongMessage = pongMessage\n\nBaseNode.prototype.sendDebug = sendDebug\nBaseNode.prototype.debugMessage = debugMessage\n\nBaseNode.prototype.sendError = sendError\nBaseNode.prototype.errorMessage = errorMessage\n\nBaseNode.prototype.sendHeaders = sendHeaders\nBaseNode.prototype.headersMessage = headersMessage\n\nconst DUILIANS = {\n  金木水火土: '板城烧锅酒'\n}\n","export function sendSync(added, entries) {\n  this.startTimeout()\n\n  let data = []\n  for (let [action, originMeta] of entries) {\n    let meta = {}\n    for (let key in originMeta) {\n      if (key === 'id') {\n        meta.id = originMeta.id.split(' ')\n      } else if (key !== 'added') {\n        meta[key] = originMeta[key]\n      }\n    }\n\n    if (this.timeFix) meta.time -= this.timeFix\n    meta.id[0] = parseInt(meta.id[0]) - this.baseTime\n    meta.id[2] = parseInt(meta.id[2])\n    meta.time -= this.baseTime\n\n    if (meta.id[1] === this.localNodeId) {\n      if (meta.id[2] === 0) {\n        meta.id = meta.id[0]\n      } else {\n        meta.id = [meta.id[0], meta.id[2]]\n      }\n    }\n\n    data.unshift(action, meta)\n  }\n\n  this.syncing += 1\n  this.setState('sending')\n  this.send(['sync', added].concat(data))\n}\n\nexport function sendSynced(added) {\n  this.send(['synced', added])\n}\n\nexport async function syncMessage(added, ...data) {\n  let promises = []\n\n  for (let i = 0; i < data.length - 1; i += 2) {\n    let action = data[i]\n    let meta = data[i + 1]\n\n    if (typeof meta.id === 'number') {\n      meta.id = meta.id + this.baseTime + ' ' + this.remoteNodeId + ' ' + 0\n    } else {\n      meta.id[0] = meta.id[0] + this.baseTime\n      if (meta.id.length === 2) {\n        meta.id = meta.id[0] + ' ' + this.remoteNodeId + ' ' + meta.id[1]\n      } else {\n        meta.id = meta.id.join(' ')\n      }\n    }\n\n    meta.time = meta.time + this.baseTime\n    if (this.timeFix) meta.time = meta.time + this.timeFix\n\n    let process = Promise.resolve([action, meta])\n\n    if (this.options.inMap) {\n      process = process\n        .then(([action2, meta2]) => {\n          return this.options.inMap(action2, meta2)\n        })\n        .catch(e => {\n          this.error(e)\n        })\n    }\n\n    process\n      .then(filtered => {\n        if (filtered && this.options.inFilter) {\n          return this.options\n            .inFilter(...filtered)\n            .then(res => {\n              return res ? filtered : false\n            })\n            .catch(e => {\n              this.error(e)\n            })\n        } else {\n          return filtered\n        }\n      })\n      .then(changed => {\n        if (!changed) return false\n        if (this.received) this.received[changed[1].id] = true\n        return this.log.add(changed[0], changed[1])\n      })\n\n    promises.push(process)\n  }\n\n  await Promise.all(promises)\n  this.setLastReceived(added)\n  this.sendSynced(added)\n}\n\nexport function syncedMessage(synced) {\n  this.endTimeout()\n  this.setLastSent(synced)\n  if (this.syncing > 0) this.syncing -= 1\n  if (this.syncing === 0) {\n    this.setState('synchronized')\n  }\n}\n","export function sendPing() {\n  this.startTimeout()\n  this.send(['ping', this.lastAddedCache])\n  if (this.pingTimeout) clearTimeout(this.pingTimeout)\n}\n\nexport function pingMessage(synced) {\n  this.setLastReceived(synced)\n  if (this.connected && this.authenticated) {\n    this.send(['pong', this.lastAddedCache])\n  }\n}\n\nexport function pongMessage(synced) {\n  this.setLastReceived(synced)\n  this.endTimeout()\n}\n","export function sendDebug(type, data) {\n  this.send(['debug', type, data])\n}\n\nexport function debugMessage(type, data) {\n  this.emitter.emit('debug', type, data)\n}\n","export function sendError(error) {\n  let message = ['error', error.type]\n  if (typeof error.options !== 'undefined') message.push(error.options)\n  this.send(message)\n\n  this.emitter.emit('clientError', error)\n}\n\nexport function errorMessage(type, options) {\n  this.syncError(type, options, true)\n}\n","export function sendHeaders(data) {\n  this.send(['headers', data])\n}\n\nexport function headersMessage(data) {\n  this.remoteHeaders = data\n  this.emitter.emit('headers', data)\n}\n","import { BaseNode } from '../base-node/index.js'\n\nconst DEFAULT_OPTIONS = {\n  fixTime: true,\n  timeout: 20000,\n  ping: 5000\n}\n\nexport class ClientNode extends BaseNode {\n  constructor(nodeId, log, connection, options = {}) {\n    options = { ...DEFAULT_OPTIONS, ...options }\n    super(nodeId, log, connection, options)\n  }\n\n  onConnect() {\n    if (!this.connected) {\n      this.connected = true\n      this.initializing = this.initializing.then(() => {\n        if (this.connected) this.sendConnect()\n      })\n    }\n  }\n}\n","import { createNanoEvents } from 'nanoevents'\n\nclass LocalConnection {\n  constructor(pair, type) {\n    this.connected = false\n    this.emitter = createNanoEvents()\n    this.type = type\n    this.pair = pair\n  }\n\n  other() {\n    if (this.type === 'left') {\n      return this.pair.right\n    } else {\n      return this.pair.left\n    }\n  }\n\n  on(event, listener) {\n    return this.emitter.on(event, listener)\n  }\n\n  connect() {\n    if (this.connected) {\n      throw new Error('Connection already established')\n    } else {\n      this.emitter.emit('connecting')\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.other().connected = true\n          this.connected = true\n          this.other().emitter.emit('connect')\n          this.emitter.emit('connect')\n          resolve()\n        }, this.pair.delay)\n      })\n    }\n  }\n\n  disconnect(reason) {\n    if (!this.connected) {\n      throw new Error('Connection already finished')\n    } else {\n      this.connected = false\n      this.emitter.emit('disconnect', reason)\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.other().connected = false\n          this.other().emitter.emit('disconnect')\n          resolve()\n        }, 1)\n      })\n    }\n  }\n\n  send(message) {\n    if (this.connected) {\n      setTimeout(() => {\n        this.other().emitter.emit('message', message)\n      }, this.pair.delay)\n    } else {\n      throw new Error('Connection should be started before sending a message')\n    }\n  }\n}\n\nexport class LocalPair {\n  constructor(delay = 1) {\n    this.delay = delay\n    this.left = new LocalConnection(this, 'left')\n    this.right = new LocalConnection(this, 'right')\n  }\n}\n","const DEFAULT_OPTIONS = {\n  minDelay: 1000,\n  maxDelay: 5000,\n  attempts: Infinity\n}\n\nconst FATAL_ERRORS = [\n  'wrong-protocol',\n  'wrong-subprotocol',\n  'wrong-credentials'\n]\n\nexport class Reconnect {\n  constructor(connection, options = {}) {\n    this.connection = connection\n    this.options = { ...DEFAULT_OPTIONS, ...options }\n\n    this.reconnecting = connection.connected\n    this.connecting = false\n    this.attempts = 0\n\n    this.unbind = [\n      this.connection.on('message', msg => {\n        if (msg[0] === 'error' && FATAL_ERRORS.includes(msg[1])) {\n          this.reconnecting = false\n        }\n      }),\n      this.connection.on('connecting', () => {\n        this.connecting = true\n      }),\n      this.connection.on('connect', () => {\n        this.attempts = 0\n        this.connecting = false\n      }),\n      this.connection.on('disconnect', () => {\n        this.connecting = false\n        if (this.reconnecting) this.reconnect()\n      }),\n      () => {\n        clearTimeout(this.timer)\n      }\n    ]\n\n    let visibility = () => {\n      if (this.reconnecting && !this.connected && !this.connecting) {\n        if (typeof document !== 'undefined' && !document.hidden) this.connect()\n      }\n    }\n    let connect = () => {\n      if (this.reconnecting && !this.connected && !this.connecting) {\n        if (navigator.onLine) this.connect()\n      }\n    }\n    let disconnect = () => {\n      this.disconnect('freeze')\n    }\n    if (\n      typeof document !== 'undefined' &&\n      typeof window !== 'undefined' &&\n      document.addEventListener &&\n      window.addEventListener\n    ) {\n      document.addEventListener('visibilitychange', visibility, false)\n      window.addEventListener('focus', connect, false)\n      window.addEventListener('online', connect, false)\n      window.addEventListener('resume', connect, false)\n      window.addEventListener('freeze', disconnect, false)\n      this.unbind.push(() => {\n        document.removeEventListener('visibilitychange', visibility, false)\n        window.removeEventListener('focus', connect, false)\n        window.removeEventListener('online', connect, false)\n        window.removeEventListener('resume', connect, false)\n        window.removeEventListener('freeze', disconnect, false)\n      })\n    }\n  }\n\n  connect() {\n    this.attempts += 1\n    this.reconnecting = true\n    return this.connection.connect()\n  }\n\n  disconnect(reason) {\n    if (reason !== 'timeout' && reason !== 'error' && reason !== 'freeze') {\n      this.reconnecting = false\n    }\n    return this.connection.disconnect(reason)\n  }\n\n  destroy() {\n    for (let i of this.unbind) i()\n    this.disconnect('destroy')\n  }\n\n  reconnect() {\n    if (this.attempts > this.options.attempts - 1) {\n      this.reconnecting = false\n      this.attempts = 0\n      return\n    }\n\n    let delay = this.nextDelay()\n    this.timer = setTimeout(() => {\n      if (this.reconnecting && !this.connecting && !this.connected) {\n        this.connect()\n      }\n    }, delay)\n  }\n\n  send(...args) {\n    return this.connection.send(...args)\n  }\n\n  on(...args) {\n    return this.connection.on(...args)\n  }\n\n  nextDelay() {\n    let base = this.options.minDelay * 2 ** this.attempts\n    let rand = Math.random()\n    let deviation = rand * 0.5 * base\n    if (Math.floor(rand * 10) === 1) deviation = -deviation\n    return Math.min(base + deviation, this.options.maxDelay) || 0\n  }\n\n  get connected() {\n    return this.connection.connected\n  }\n\n  get emitter() {\n    return this.connection.emitter\n  }\n}\n","export function parseId(nodeId) {\n  if (nodeId.includes(' ')) nodeId = nodeId.split(' ')[1]\n  let parts = nodeId.split(':')\n  if (parts.length === 1) {\n    return { nodeId, userId: undefined, clientId: nodeId }\n  } else {\n    let userId = parts[0]\n    return { nodeId, userId, clientId: parts[0] + ':' + parts[1] }\n  }\n}\n","export function status(client, callback, options = {}) {\n  let observable = client.on ? client : client.node\n  let disconnected = observable.state === 'disconnected'\n  let wait = false\n  let old = false\n\n  if (typeof options.duration === 'undefined') options.duration = 3000\n\n  let timeout\n  let unbind = []\n  let processing = {}\n\n  function setSynchronized() {\n    if (Object.keys(processing).length === 0) {\n      if (wait) {\n        wait = false\n        callback('synchronizedAfterWait')\n        timeout = setTimeout(() => {\n          callback('synchronized')\n        }, options.duration)\n      } else {\n        callback('synchronized')\n      }\n    }\n  }\n\n  function changeState() {\n    clearTimeout(timeout)\n\n    if (old) return\n    if (observable.state === 'disconnected') {\n      disconnected = true\n      callback(wait ? 'wait' : 'disconnected')\n    } else if (observable.state === 'synchronized') {\n      disconnected = false\n      setSynchronized()\n    } else if (observable.state === 'connecting') {\n      timeout = setTimeout(() => {\n        callback('connecting' + (wait ? 'AfterWait' : ''))\n      }, 100)\n    } else {\n      callback(client.state + (wait ? 'AfterWait' : ''))\n    }\n  }\n\n  unbind.push(observable.on('state', changeState))\n\n  unbind.push(\n    client.node.on('error', error => {\n      if (\n        error.type === 'wrong-protocol' ||\n        error.type === 'wrong-subprotocol'\n      ) {\n        old = true\n        callback('protocolError')\n      } else if (error.type !== 'timeout') {\n        callback('syncError', { error })\n      }\n    })\n  )\n\n  unbind.push(\n    client.node.on('clientError', error => {\n      callback('syncError', { error })\n    })\n  )\n\n  let log = client.on ? client : client.log\n  unbind.push(\n    log.on('add', (action, meta) => {\n      if (action.type === 'logux/subscribe') {\n        return\n      } else if (action.type === 'logux/unsubscribe') {\n        return\n      }\n\n      if (action.type === 'logux/processed') {\n        delete processing[action.id]\n        setSynchronized()\n      } else if (action.type === 'logux/undo') {\n        delete processing[action.id]\n      } else if (meta.sync) {\n        processing[meta.id] = true\n      }\n\n      if (action.type === 'logux/undo' && action.reason) {\n        if (action.reason === 'denied') {\n          callback('denied', { action, meta })\n        } else {\n          callback('error', { action, meta })\n        }\n      } else if (disconnected && meta.sync && meta.added) {\n        if (!wait) callback('wait')\n        wait = true\n      }\n    })\n  )\n\n  changeState()\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","import { status } from '../status/index.js'\n\nfunction injectStyles(element, styles) {\n  for (let i in styles) {\n    element.style[i] = styles[i]\n  }\n}\n\nfunction setPosition(element, position) {\n  let style = element.style\n  if (position === 'middle-center' || position === 'center-middle') {\n    style.top = '50%'\n    style.left = '50%'\n    style.transform = 'translate(-50%, -50%)'\n  } else {\n    position.split('-').forEach(pos => {\n      if (pos === 'middle') {\n        style.top = '50%'\n        style.transform = 'translateY(-50%)'\n      } else if (pos === 'center') {\n        style.left = '50%'\n        style.transform = 'translateX(-50%)'\n      } else {\n        style[pos] = '0'\n      }\n    })\n  }\n}\n\nconst RESET = {\n  boxSizing: 'content-box',\n  visibility: 'visible',\n  textIndent: '0',\n  textTransform: 'none',\n  wordSpacing: 'normal',\n  letterSpacing: 'normal',\n  fontStyle: 'normal',\n  fontVariant: 'normal',\n  fontWeight: 'normal',\n  lineHeight: 'auto'\n}\n\nexport function badge(client, opts) {\n  let messages = opts.messages\n  let position = opts.position || 'bottom-right'\n  let styles = opts.styles\n\n  let widget = document.createElement('div')\n  let text = document.createElement('span')\n\n  widget.setAttribute('role', 'alert')\n\n  injectStyles(widget, RESET)\n  injectStyles(widget, styles.base)\n  injectStyles(text, styles.text)\n  setPosition(widget, position)\n\n  let show = (style, msg) => {\n    text.innerHTML = msg\n    injectStyles(widget, style)\n    widget.style.display = 'block'\n  }\n\n  let hide = () => {\n    widget.style.display = 'none'\n  }\n\n  let unbind = status(\n    client,\n    state => {\n      if (state === 'sendingAfterWait' || state === 'connectingAfterWait') {\n        show(styles.sending, messages.sending)\n      } else if (state === 'synchronizedAfterWait') {\n        show(styles.synchronized, messages.synchronized)\n      } else if (state === 'synchronized') {\n        hide(widget)\n      } else if (state === 'disconnected') {\n        show(styles.disconnected, messages.disconnected)\n      } else if (state === 'wait') {\n        show(styles.wait, messages.wait)\n      } else if (state === 'protocolError') {\n        show(styles.protocolError, messages.protocolError)\n      } else if (state === 'syncError') {\n        show(styles.error, messages.syncError)\n      } else if (state === 'error') {\n        show(styles.error, messages.error)\n      } else if (state === 'denied') {\n        show(styles.error, messages.denied)\n      }\n    },\n    opts\n  )\n\n  widget.appendChild(text)\n  document.body.appendChild(widget)\n\n  return () => {\n    unbind()\n    document.body.removeChild(widget)\n  }\n}\n\nexport let badgeRu = {\n  synchronized: 'Ваши данные сохранены',\n  disconnected: 'Нет интернета',\n  wait: 'Нет интернета<br>Ваши данные не сохранены',\n  sending: 'Сохраняю ваши данные',\n  syncError: 'Ошибка на сервере<br>Ваши данные не сохранены',\n  error: 'Ошибка на сервере<br>Ваши действия отменены',\n  denied: 'Нет прав<br>Ваши действия отменены',\n  protocolError: 'Сохранение не работает<br>Обновите страницу'\n}\n\nexport let badgeEn = {\n  synchronized: 'Your data has been saved',\n  disconnected: 'No Internet connection',\n  wait: 'No Internet connection<br>Your data has not been saved',\n  sending: 'Data saving',\n  syncError: 'Server error<br>Your data has not been saved',\n  error: 'Server error<br>You changes was reverted',\n  denied: 'You have no access<br>You changes was reverted',\n  protocolError: 'Saving is not working<br>Refresh the page'\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export class LoguxUndoError extends Error {\n  constructor(action) {\n    let type = action.action ? action.action.type : 'action'\n    super(`Server undid ${type} because of ${action.reason}`)\n    this.name = 'LoguxUndoError'\n    this.action = action\n  }\n}\n","import { createNanoEvents } from 'nanoevents'\nimport {\n  isFirstOlder,\n  WsConnection,\n  MemoryStore,\n  ClientNode,\n  Reconnect,\n  parseId,\n  Log\n} from '@logux/core'\nimport { nanoid } from 'nanoid'\n\nimport { LoguxUndoError } from '../logux-undo-error/index.js'\nimport { track } from '../track/index.js'\n\nlet ALLOWED_META = ['id', 'time', 'subprotocol']\n\nfunction tabPing(c) {\n  localStorage.setItem(c.options.prefix + ':tab:' + c.tabId, Date.now())\n}\n\nfunction cleanTabActions(client, id) {\n  client.log.removeReason('tab' + id).then(() => {\n    if (client.isLocalStorage) {\n      localStorage.removeItem(client.options.prefix + ':tab:' + id)\n    }\n  })\n}\n\nexport class Client {\n  constructor(opts = {}) {\n    this.options = opts\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof this.options.server === 'undefined') {\n        throw new Error('Missed server option in Logux client')\n      }\n      if (typeof this.options.subprotocol === 'undefined') {\n        throw new Error('Missed subprotocol option in Logux client')\n      }\n      if (typeof this.options.userId === 'undefined') {\n        throw new Error(\n          'Missed userId option in Logux client. ' +\n            'Pass false if you have no users.'\n        )\n      }\n      if (this.options.userId === false) {\n        throw new Error('Replace userId: false to userId: \"false\"')\n      }\n      if (typeof this.options.userId !== 'string') {\n        throw new Error('userId must be a string')\n      }\n      if (this.options.userId.includes(':')) {\n        throw new Error('userId can’t contain colon character')\n      }\n    }\n\n    if (typeof this.options.prefix === 'undefined') {\n      this.options.prefix = 'logux'\n    }\n\n    this.isLocalStorage = false\n    if (typeof localStorage !== 'undefined') {\n      let random = nanoid()\n      try {\n        localStorage.setItem(random, '1')\n        localStorage.removeItem(random)\n        this.isLocalStorage = true\n      } catch {}\n    }\n\n    if (!this.options.time) {\n      this.clientId = this.options.userId + ':' + this.getClientId()\n      this.tabId = nanoid(8)\n    } else {\n      this.tabId = this.options.time.lastId + 1 + ''\n      this.clientId = this.options.userId + ':' + this.tabId\n    }\n\n    this.nodeId = this.clientId + ':' + this.tabId\n    let store = this.options.store || new MemoryStore()\n\n    let log\n    if (this.options.time) {\n      log = this.options.time.nextLog({ store, nodeId: this.nodeId })\n    } else {\n      log = new Log({ store, nodeId: this.nodeId })\n    }\n    this.log = log\n\n    log.on('preadd', (action, meta) => {\n      if (parseId(meta.id).nodeId === this.nodeId && !meta.subprotocol) {\n        meta.subprotocol = this.options.subprotocol\n      }\n      if (meta.sync && !meta.resubscribe) meta.reasons.push('syncing')\n    })\n\n    this.last = {}\n    this.subscriptions = {}\n    let subscribing = {}\n    let unsubscribing = {}\n\n    this.emitter = createNanoEvents()\n    this.on('add', (action, meta) => {\n      let type = action.type\n      let json, last\n      if (type === 'logux/processed' || type === 'logux/undo') {\n        this.log.removeReason('syncing', { id: action.id })\n      }\n      if (type === 'logux/subscribe' && !meta.resubscribe) {\n        subscribing[meta.id] = action\n      } else if (type === 'logux/unsubscribe') {\n        unsubscribing[meta.id] = action\n      } else if (type === 'logux/processed') {\n        if (unsubscribing[action.id]) {\n          let unsubscription = unsubscribing[action.id]\n          json = JSON.stringify({ ...unsubscription, type: 'logux/subscribe' })\n          let subscribers = this.subscriptions[json]\n          if (subscribers) {\n            if (subscribers === 1) {\n              delete this.subscriptions[json]\n            } else {\n              this.subscriptions[json] = subscribers - 1\n            }\n          }\n        }\n        if (subscribing[action.id]) {\n          let subscription = subscribing[action.id]\n          delete subscribing[action.id]\n          json = JSON.stringify(subscription)\n          if (this.subscriptions[json]) {\n            this.subscriptions[json] += 1\n          } else {\n            this.subscriptions[json] = 1\n          }\n          last = this.last[subscription.channel]\n          if (!last || isFirstOlder(last, meta)) {\n            this.last[subscription.channel] = { id: meta.id, time: meta.time }\n          }\n        }\n        if (type === 'logux/processed' && this.processing[action.id]) {\n          this.processing[action.id][1](meta)\n          delete this.processing[action.id]\n        }\n      } else if (type === 'logux/undo') {\n        if (this.processing[action.id]) {\n          this.processing[action.id][2](new LoguxUndoError(action))\n          delete this.processing[action.id]\n        }\n        delete subscribing[action.id]\n        delete unsubscribing[action.id]\n      } else if (meta.channels) {\n        if (!meta.id.includes(' ' + this.clientId + ':')) {\n          meta.channels.forEach(channel => {\n            last = this.last[channel]\n            if (!last || isFirstOlder(last, meta)) {\n              this.last[channel] = { id: meta.id, time: meta.time }\n            }\n          })\n        }\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (type === 'logux/subscribe' || type === 'logux/unsubscribe') {\n          if (!meta.sync) {\n            console.error(type + ' action without meta.sync')\n          }\n        }\n      }\n    })\n\n    this.tabPing = 60000\n    this.tabTimeout = 10 * this.tabPing\n    let reason = 'tab' + this.tabId\n    if (this.isLocalStorage) {\n      let unbind = log.on('add', (action, meta) => {\n        if (meta.reasons.includes(reason)) {\n          tabPing(this)\n          this.pinging = setInterval(() => {\n            tabPing(this)\n          }, this.tabPing)\n          unbind()\n        }\n      })\n    }\n\n    let connection\n    if (typeof this.options.server === 'string') {\n      let ws = new WsConnection(this.options.server)\n      connection = new Reconnect(ws, {\n        minDelay: this.options.minDelay,\n        maxDelay: this.options.maxDelay,\n        attempts: this.options.attempts\n      })\n    } else {\n      connection = this.options.server\n    }\n\n    let outFilter = async (action, meta) => {\n      return !!meta.sync && parseId(meta.id).userId === this.options.userId\n    }\n\n    let outMap = async (action, meta) => {\n      let filtered = {}\n      for (let i in meta) {\n        if (i === 'subprotocol') {\n          if (meta.subprotocol !== this.options.subprotocol) {\n            filtered.subprotocol = meta.subprotocol\n          }\n        } else if (ALLOWED_META.includes(i)) {\n          filtered[i] = meta[i]\n        }\n      }\n      return [action, filtered]\n    }\n\n    if (!this.options.time) {\n      if (typeof this.options.timeout === 'undefined') {\n        this.options.timeout = 20000\n      }\n      if (typeof this.options.ping === 'undefined') {\n        this.options.ping = 5000\n      }\n    }\n\n    this.node = new ClientNode(this.nodeId, this.log, connection, {\n      subprotocol: this.options.subprotocol,\n      outFilter,\n      timeout: this.options.timeout,\n      fixTime: !this.options.time,\n      outMap,\n      token: this.options.token,\n      ping: this.options.ping\n    })\n\n    if (/^ws:\\/\\//.test(this.options.server) && !opts.allowDangerousProtocol) {\n      let unbindEnvTest = this.node.on('state', () => {\n        if (this.node.state === 'synchronized') {\n          unbindEnvTest()\n          if (this.node.remoteHeaders.env !== 'development') {\n            console.error(\n              'Without SSL, old proxies block WebSockets. ' +\n                'Use WSS for Logux or set allowDangerousProtocol option.'\n            )\n            this.destroy()\n          }\n        }\n      })\n    }\n\n    this.node.on('debug', (type, stack) => {\n      if (type === 'error') {\n        console.error('Error on Logux server:\\n', stack)\n      }\n    })\n\n    let disconnected = true\n    this.node.on('state', () => {\n      let state = this.node.state\n      if (state === 'synchronized' || state === 'sending') {\n        if (disconnected) {\n          disconnected = false\n          for (let i in this.subscriptions) {\n            let action = JSON.parse(i)\n            let since = this.last[action.channel]\n            if (since) action.since = since\n            this.log.add(action, { sync: true, resubscribe: true })\n          }\n        }\n      } else if (this.node.state === 'disconnected') {\n        disconnected = true\n      }\n    })\n\n    this.onUnload = this.onUnload.bind(this)\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('unload', this.onUnload)\n    }\n\n    this.processing = {}\n  }\n\n  get state() {\n    return this.node.state\n  }\n\n  get connected() {\n    return this.state !== 'disconnected' && this.state !== 'connecting'\n  }\n\n  start() {\n    this.cleanPrevActions()\n    this.node.connection.connect()\n  }\n\n  sync(action, meta = {}) {\n    meta.sync = true\n    if (typeof meta.id === 'undefined') {\n      meta.id = this.log.generateId()\n    }\n\n    this.log.add(action, meta)\n    return track(this, meta.id)\n  }\n\n  type(type, listener, opts) {\n    return this.log.type(type, listener, opts)\n  }\n\n  on(event, listener) {\n    if (event === 'state') {\n      return this.node.emitter.on(event, listener)\n    } else if (event === 'user') {\n      return this.emitter.on(event, listener)\n    } else {\n      return this.log.emitter.on(event, listener)\n    }\n  }\n\n  changeUser(userId, token) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof userId !== 'string') {\n        throw new Error('userId must be a string')\n      }\n      if (userId.includes(':')) {\n        throw new Error('userId can’t contain colon character')\n      }\n    }\n\n    let wasConnected = this.node.connected\n    if (wasConnected) this.node.connection.disconnect('destroy')\n\n    this.options.userId = userId\n    this.options.token = token\n    this.clientId = userId + ':' + this.getClientId()\n    this.nodeId = this.clientId + ':' + this.tabId\n\n    this.log.nodeId = this.nodeId\n    this.node.localNodeId = this.nodeId\n    this.node.options.token = token\n\n    this.emitter.emit('user', userId)\n    if (wasConnected) this.node.connection.connect()\n  }\n\n  waitFor(state) {\n    if (this.state === state) {\n      return Promise.resolve()\n    }\n    return new Promise(resolve => {\n      let unbind = this.on('state', () => {\n        if (this.state === state) {\n          unbind()\n          resolve()\n        }\n      })\n    })\n  }\n\n  destroy() {\n    this.onUnload()\n    this.node.destroy()\n    clearInterval(this.pinging)\n    if (typeof window !== 'undefined' && window.removeEventListener) {\n      window.removeEventListener('unload', this.onUnload)\n    }\n  }\n\n  clean() {\n    this.destroy()\n    return this.log.store.clean ? this.log.store.clean() : Promise.resolve()\n  }\n\n  cleanPrevActions() {\n    if (!this.isLocalStorage) return\n\n    for (let i in localStorage) {\n      let prefix = this.options.prefix + ':tab:'\n      if (i.slice(0, prefix.length) === prefix) {\n        let time = parseInt(localStorage.getItem(i))\n        if (Date.now() - time > this.tabTimeout) {\n          cleanTabActions(this, i.slice(prefix.length))\n        }\n      }\n    }\n  }\n\n  onUnload() {\n    if (this.pinging) cleanTabActions(this, this.tabId)\n  }\n\n  getClientId() {\n    return nanoid(8)\n  }\n}\n","import { LoguxError, actionEvents } from '@logux/core'\n\nimport { Client } from '../client/index.js'\n\nfunction storageKey(client, name) {\n  return client.options.prefix + ':' + client.options.userId + ':' + name\n}\n\nfunction sendToTabs(client, event, data) {\n  if (!client.isLocalStorage) return\n  let key = storageKey(client, event)\n  let json = JSON.stringify(data)\n  try {\n    localStorage.setItem(key, json)\n  } catch (e) {\n    console.error(e)\n    client.isLocalStorage = false\n    client.role = 'leader'\n    client.emitter.emit('role')\n    client.node.connection.connect()\n  }\n}\n\nfunction getLeader(client) {\n  let data = localStorage.getItem(storageKey(client, 'leader'))\n  let json = []\n  if (typeof data === 'string') json = JSON.parse(data)\n  return json\n}\n\nfunction leaderPing(client) {\n  sendToTabs(client, 'leader', [client.tabId, Date.now()])\n}\n\nfunction onDeadLeader(client) {\n  if (client.state !== 'disconnected') {\n    setState(client, 'disconnected')\n  }\n  startElection(client)\n}\n\nfunction watchForLeader(client) {\n  clearTimeout(client.watching)\n  client.watching = setTimeout(() => {\n    if (!isActiveLeader(client)) {\n      onDeadLeader(client)\n    } else {\n      watchForLeader(client)\n    }\n  }, client.roleTimeout)\n}\n\nfunction compareSubprotocols(left, right) {\n  let leftParts = left.split('.')\n  let rightParts = right.split('.')\n  for (let i = 0; i < 3; i++) {\n    let leftNumber = parseInt(leftParts[i] || 0)\n    let rightNumber = parseInt(rightParts[i] || 0)\n    if (leftNumber > rightNumber) {\n      return 1\n    } else if (leftNumber < rightNumber) {\n      return -1\n    }\n  }\n  return 0\n}\n\nfunction setRole(client, role) {\n  if (client.role !== role) {\n    let node = client.node\n    client.role = role\n\n    clearTimeout(client.watching)\n    if (role === 'leader') {\n      localStorage.removeItem(storageKey(client, 'state'))\n      client.leadership = setInterval(() => {\n        if (!client.unloading) leaderPing(client)\n      }, client.leaderPing)\n      node.connection.connect()\n    } else {\n      clearTimeout(client.elections)\n      clearInterval(client.leadership)\n\n      if (node.state !== 'disconnected') {\n        client.node.connection.disconnect()\n      }\n    }\n\n    if (role === 'follower') {\n      let state = 'disconnected'\n      let json = localStorage.getItem(storageKey(client, 'state'))\n      if (json && json !== null) state = JSON.parse(json)\n      if (state !== client.state) {\n        client.state = state\n        client.emitter.emit('state')\n      }\n    }\n\n    client.emitter.emit('role')\n  }\n}\n\nfunction isActiveLeader(client) {\n  let leader = getLeader(client)\n  return leader[1] && leader[1] >= Date.now() - client.leaderTimeout\n}\n\nfunction startElection(client) {\n  leaderPing(client)\n  setRole(client, 'candidate')\n  client.elections = setTimeout(() => {\n    let data = getLeader(client, 'leader')\n    if (data[0] === client.tabId) {\n      setRole(client, 'leader')\n    } else {\n      setRole(client, 'follower')\n      watchForLeader(client)\n    }\n  }, client.electionDelay)\n}\n\nfunction setState(client, state) {\n  client.state = state\n  client.emitter.emit('state')\n  sendToTabs(client, 'state', client.state)\n}\n\nfunction isMemory(store) {\n  return Array.isArray(store.entries) && Array.isArray(store.added)\n}\n\nexport class CrossTabClient extends Client {\n  constructor(opts = {}) {\n    super(opts)\n\n    this.role = 'candidate'\n\n    this.roleTimeout = 3000 + Math.floor(Math.random() * 1000)\n    this.leaderTimeout = 5000\n    this.leaderPing = 2000\n    this.electionDelay = 1000\n\n    this.leaderState = this.node.state\n\n    this.node.on('state', () => {\n      if (this.role === 'leader') {\n        setState(this, this.node.state)\n      }\n    })\n\n    this.log.on('add', (action, meta) => {\n      actionEvents(this.emitter, 'add', action, meta)\n      if (meta.tab !== this.tabId) {\n        sendToTabs(this, 'add', [this.tabId, action, meta])\n      }\n    })\n    this.log.on('clean', (action, meta) => {\n      actionEvents(this.emitter, 'clean', action, meta)\n    })\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('storage', e => this.onStorage(e))\n      window.addEventListener('unload', e => this.onUnload(e))\n    }\n\n    if (this.isLocalStorage) {\n      let subprotocolKey = storageKey(this, 'subprotocol')\n      if (localStorage.getItem(subprotocolKey) !== this.options.subprotocol) {\n        sendToTabs(this, 'subprotocol', this.options.subprotocol)\n      }\n    }\n  }\n\n  get state() {\n    return this.leaderState\n  }\n\n  set state(value) {\n    this.leaderState = value\n  }\n\n  start() {\n    this.cleanPrevActions()\n\n    if (!this.isLocalStorage) {\n      this.role = 'leader'\n      this.emitter.emit('role')\n      this.node.connection.connect()\n      return\n    }\n\n    if (isActiveLeader(this)) {\n      setRole(this, 'follower')\n      watchForLeader(this)\n    } else {\n      startElection(this)\n    }\n  }\n\n  destroy() {\n    super.destroy()\n\n    clearTimeout(this.watching)\n    clearTimeout(this.elections)\n    clearInterval(this.leadership)\n    if (typeof window !== 'undefined' && window.removeEventListener) {\n      window.removeEventListener('storage', this.onStorage)\n    }\n  }\n\n  clean() {\n    if (this.isLocalStorage) {\n      localStorage.removeItem(storageKey(this, 'add'))\n      localStorage.removeItem(storageKey(this, 'state'))\n      localStorage.removeItem(storageKey(this, 'client'))\n      localStorage.removeItem(storageKey(this, 'leader'))\n    }\n    return super.clean()\n  }\n\n  changeUser(userId, token) {\n    sendToTabs(this, 'user', [this.tabId, userId])\n    super.changeUser(userId, token)\n  }\n\n  type(type, listener, opts = {}) {\n    if (opts.event === 'preadd') {\n      return this.log.type(type, listener, opts)\n    } else {\n      let event = opts.event || 'add'\n      let id = opts.id || ''\n      return this.emitter.on(`${event}-${type}-${id}`, listener)\n    }\n  }\n\n  on(event, listener) {\n    if (event === 'preadd') {\n      return this.log.emitter.on(event, listener)\n    } else {\n      return this.emitter.on(event, listener)\n    }\n  }\n\n  onStorage(e) {\n    if (e.newValue === null) return\n\n    let data\n    if (e.key === storageKey(this, 'add')) {\n      data = JSON.parse(e.newValue)\n      if (data[0] !== this.tabId) {\n        let action = data[1]\n        let meta = data[2]\n        if (!meta.tab || meta.tab === this.tabId) {\n          if (isMemory(this.log.store)) {\n            this.log.store.add(action, meta)\n          }\n          actionEvents(this.emitter, 'add', action, meta)\n          if (this.role === 'leader') {\n            this.node.onAdd(action, meta)\n          }\n        }\n      }\n    } else if (e.key === storageKey(this, 'leader')) {\n      data = JSON.parse(e.newValue)\n      if (data.length === 0) {\n        onDeadLeader(this)\n      } else if (data[0] !== this.tabId && this.role !== 'candidate') {\n        setRole(this, 'follower')\n        watchForLeader(this)\n      }\n    } else if (e.key === storageKey(this, 'state')) {\n      let state = JSON.parse(localStorage.getItem(e.key))\n      if (this.leaderState !== state) {\n        this.leaderState = state\n        this.emitter.emit('state')\n      }\n    } else if (e.key === storageKey(this, 'user')) {\n      data = JSON.parse(e.newValue)\n      if (data[0] !== this.tabId) {\n        this.emitter.emit('user', data[1])\n      }\n    } else if (e.key === storageKey(this, 'subprotocol')) {\n      let other = JSON.parse(e.newValue)\n      let compare = compareSubprotocols(this.options.subprotocol, other)\n      if (compare === 1) {\n        sendToTabs(this, 'subprotocol', this.options.subprotocol)\n      } else if (compare === -1) {\n        let err = new LoguxError(\n          'wrong-subprotocol',\n          { supported: other, used: this.options.subprotocol },\n          true\n        )\n        this.node.emitter.emit('error', err)\n      }\n    }\n  }\n\n  onUnload() {\n    if (this.role === 'leader') {\n      this.unloading = true\n      sendToTabs(this, 'leader', [])\n    }\n    super.onUnload()\n  }\n\n  getClientId() {\n    let key = storageKey(this, 'client')\n    if (!this.isLocalStorage) {\n      return super.getClientId()\n    } else if (localStorage.getItem(key)) {\n      return localStorage.getItem(key)\n    } else {\n      let clientId = super.getClientId()\n      localStorage.setItem(key, clientId)\n      return clientId\n    }\n  }\n}\n","function block(e) {\n  e.returnValue = 'unsynced'\n  return 'unsynced'\n}\n\nexport function confirm(client) {\n  let disconnected = client.state === 'disconnected'\n  let wait = false\n\n  let update = () => {\n    if (client.state === 'disconnected') {\n      disconnected = true\n    } else if (client.state === 'synchronized') {\n      disconnected = false\n      wait = false\n    }\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      if (client.role !== 'follower' && wait && disconnected) {\n        window.addEventListener('beforeunload', block)\n      } else {\n        window.removeEventListener('beforeunload', block)\n      }\n    }\n  }\n\n  let unbind = []\n  unbind.push(client.on('role', update))\n  unbind.push(client.on('state', update))\n  update()\n\n  unbind.push(\n    client.on('add', (action, meta) => {\n      if (action.type === 'logux/subscribe') {\n        return\n      } else if (action.type === 'logux/unsubscribe') {\n        return\n      }\n      if (disconnected && meta.sync && meta.added) {\n        wait = true\n        update()\n      }\n    })\n  )\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","import { parseId } from '@logux/core'\n\nfunction bold(string) {\n  return '%c' + string + '%c'\n}\n\nfunction showLog(text, details) {\n  text = '%cLogux%c ' + text\n  let args = Array.from(text.match(/%c/g)).map((_, i) => {\n    if (i === 0) {\n      return 'color:#ffa200;font-weight:bold'\n    } else if (i % 2 === 0) {\n      return 'font-weight:bold'\n    } else {\n      return 'font-weight:normal'\n    }\n  })\n\n  if (details) {\n    console.groupCollapsed(text, ...args)\n    for (let name in details) {\n      if (typeof details[name] === 'string') {\n        console.log(name + ': %c' + details[name], 'font-weight:bold')\n      } else {\n        console.log(name, details[name])\n      }\n    }\n    console.groupEnd()\n  } else {\n    console.log(text, ...args)\n  }\n}\n\nexport function log(client, messages = {}) {\n  let node = client.node\n\n  let sent = {}\n  let unbind = []\n  let prevConnected = false\n\n  if (messages.state !== false) {\n    unbind.push(\n      client.on('state', () => {\n        let details\n        if (client.state === 'connecting' && node.connection.url) {\n          details = {\n            'Node ID': node.localNodeId,\n            'Server': node.connection.url\n          }\n        } else if (client.connected && !prevConnected && node.remoteNodeId) {\n          prevConnected = true\n          details = {\n            'Server ID': node.remoteNodeId\n          }\n        } else if (!client.connected) {\n          prevConnected = false\n        }\n        showLog('state is ' + bold(client.state), details)\n      })\n    )\n  }\n\n  if (messages.role !== false) {\n    unbind.push(\n      client.on('role', () => {\n        showLog('tab role is ' + bold(client.role))\n      })\n    )\n  }\n\n  let cleaned = {}\n  let ignore = (messages.ignoreActions || []).reduce((all, i) => {\n    all[i] = true\n    return all\n  }, {})\n\n  if (messages.add !== false) {\n    unbind.push(\n      client.on('add', (action, meta) => {\n        if (meta.tab && meta.tab !== client.tabId) return\n        if (ignore[action.type]) return\n        if (meta.sync) sent[meta.id] = action\n        let message\n        if (action.type === 'logux/subscribe') {\n          message = 'subscribing to ' + bold(action.channel) + ' channel'\n          if (Object.keys(action).length === 2) {\n            showLog(message)\n          } else {\n            showLog(message, { Action: action })\n          }\n        } else if (action.type === 'logux/subscribed') {\n          showLog(\n            'subscribed to ' + bold(action.channel) + ' channel by server'\n          )\n        } else if (action.type === 'logux/unsubscribe') {\n          message = 'unsubscribed from channel ' + bold(action.channel)\n          if (Object.keys(action).length === 2) {\n            showLog(message)\n          } else {\n            showLog(message, { Action: action })\n          }\n        } else if (action.type === 'logux/processed') {\n          if (sent[action.id]) {\n            let processed = sent[action.id]\n            let details = {\n              'Processed Action': processed\n            }\n            if (processed.type === 'logux/subscribe') {\n              showLog(\n                'subscribed to ' + bold(processed.channel) + ' channel',\n                details\n              )\n            } else {\n              showLog(\n                'action ' + bold(processed.type) + ' was processed',\n                details\n              )\n            }\n            delete sent[action.id]\n          } else {\n            showLog('action ' + bold(action.id) + ' was processed')\n          }\n        } else if (action.type === 'logux/undo') {\n          if (action.action.type === 'logux/subscribe') {\n            message = 'subscription to ' + bold(action.action.channel)\n          } else {\n            message = 'action ' + bold(action.action.type)\n          }\n          message += ' was undone because of ' + bold(action.reason)\n          let details = {\n            'Reverted Action': action.action\n          }\n          if (Object.keys(action).length > 4) {\n            details['Undo Action'] = action\n          }\n          if (sent[action.id]) {\n            delete sent[action.id]\n          }\n          showLog(message, details)\n        } else {\n          let details = { Action: action, Meta: meta }\n          message = 'added '\n          if (meta.reasons.length === 0) {\n            cleaned[meta.id] = true\n            message += 'and cleaned '\n          }\n          message += bold(action.type) + ' action'\n          let { nodeId } = parseId(meta.id)\n          if (nodeId !== node.localNodeId) {\n            details.From = nodeId\n          }\n          showLog(message, details)\n        }\n      })\n    )\n  }\n\n  if (messages.user !== false) {\n    unbind.push(\n      client.on('user', userId => {\n        let message = 'user ID was changed to ' + bold(userId)\n        showLog(message, { 'Node ID': client.nodeId })\n      })\n    )\n  }\n\n  if (messages.clean !== false) {\n    unbind.push(\n      client.on('clean', (action, meta) => {\n        if (cleaned[meta.id]) {\n          delete cleaned[meta.id]\n          return\n        }\n        if (meta.tab && meta.tab !== client.id) return\n        if (ignore[action.type]) return\n        if (action.type.startsWith('logux/')) return\n        let message = 'cleaned ' + bold(action.type) + ' action'\n        showLog(message, { Action: action, Meta: meta })\n      })\n    )\n  }\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6eFIr\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"h6GVz\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2sWNB\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9YSsL\")).toString();","import refresh from './refresh.svg'\nimport success from './success.svg'\nimport offline from './offline.svg'\nimport error from './error.svg'\n\nexport let badgeStyles = {\n  base: {\n    position: 'fixed',\n    width: '15.4em',\n    height: '4em',\n    lineHeight: '1.4',\n    margin: '1.5em',\n    paddingLeft: '4.2em',\n    opacity: '0.8',\n    borderRadius: '0.4em',\n    color: '#fff',\n    fontFamily: 'Helvetica Neue, sans-serif',\n    zIndex: '999',\n    backgroundPosition: '1.2em center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '1.8em'\n  },\n  text: {\n    display: 'table-cell',\n    verticalAlign: 'middle',\n    height: '4em'\n  },\n  synchronized: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + success + ')'\n  },\n  disconnected: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + offline + ')'\n  },\n  wait: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + offline + ')'\n  },\n  sending: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + refresh + ')'\n  },\n  error: {\n    backgroundColor: '#F42A2A',\n    backgroundImage: 'url(' + error + ')'\n  },\n  protocolError: {\n    backgroundColor: '#000',\n    backgroundImage: 'url(' + refresh + ')'\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"LxdJF\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4khIt\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hnHOV\")).toString();","import { MemoryStore, ClientNode, LocalPair, BaseNode, Log } from '@logux/core'\n\nimport {\n  CrossTabClient,\n  attention,\n  badgeEn,\n  confirm,\n  favicon,\n  status,\n  badge,\n  log\n} from '../../index.js'\nimport { badgeStyles } from '../../badge/styles/index.js'\nimport faviconOffline from './offline.png'\nimport faviconNormal from './normal.png'\nimport faviconError from './error.png'\n\nlet pair = new LocalPair(500)\n\nlet serverLog = new Log({\n  store: new MemoryStore(),\n  nodeId: 'server:uuid'\n})\nnew BaseNode('server:uuid', serverLog, pair.right)\n\nserverLog.on('add', (action, meta) => {\n  if (action.type !== 'logux/processed') {\n    setTimeout(() => {\n      serverLog.add({ type: 'logux/processed', id: meta.id })\n    }, 500)\n  }\n})\n\nlet client = new CrossTabClient({\n  subprotocol: location.hash.slice(1) || '1.0.0',\n  userId: '10',\n  server: 'wss://example.com/'\n})\n\nlet node = new ClientNode(client.node.localNodeId, client.log, pair.left)\nnode.connection.url = 'wss://example.com/'\nnode.emitter = client.node.emitter\nclient.node = node\n\nattention(client)\nconfirm(client)\nfavicon(client, {\n  normal: faviconNormal,\n  offline: faviconOffline,\n  error: faviconError\n})\nbadge(client, {\n  messages: badgeEn,\n  styles: badgeStyles\n})\nlog(client)\nstatus(client, s => {\n  document.all.status.innerText = s\n})\n\nlet count = 0\nfunction emoji(state) {\n  if (state === 'disconnected') {\n    return '😴'\n  } else if (state === 'connecting') {\n    return '🔌'\n  } else {\n    return '😊'\n  }\n}\nfunction role(value) {\n  return value.slice(0, 1).toUpperCase()\n}\nfunction updateTitle() {\n  document.title = emoji(client.state) + ' ' + role(client.role) + ' ' + count\n}\n\nclient.on('state', () => {\n  document.all.connection.checked = client.connected\n  updateTitle()\n})\nclient.on('role', () => {\n  updateTitle()\n  document.all.connection.disabled = client.role !== 'leader'\n})\nclient.on('add', action => {\n  if (action.type === 'TICK') count++\n  updateTitle()\n})\nclient.on('clean', action => {\n  if (action.type === 'TICK') count--\n  updateTitle()\n})\n\nclient.log\n  .each(action => {\n    if (action.type === 'TICK') count++\n  })\n  .then(() => {\n    updateTitle()\n  })\n\nclient.on('role', () => {\n  let isLeader = client.role === 'leader'\n  document.all.connection.disabled = !isLeader\n  document.all.disabled.style.display = isLeader ? 'none' : 'inline'\n})\n\nclient.start()\n\ndocument.all.connection.onchange = e => {\n  if (e.target.checked) {\n    client.node.connection.connect()\n  } else {\n    client.node.connection.disconnect()\n  }\n}\n\ndocument.all.add.onclick = () => {\n  client.log.add({ type: 'TICK' }, { reasons: ['tick'], sync: true })\n}\n\ndocument.all.clean.onclick = () => {\n  client.log.removeReason('tick')\n}\n\ndocument.all.error.onclick = () => {\n  setTimeout(() => {\n    client.log.add({ type: 'logux/undo', reason: 'error' })\n  }, 3000)\n}\n\ndocument.all.denied.onclick = () => {\n  setTimeout(() => {\n    client.log.add({ type: 'logux/undo', reason: 'denied' })\n  }, 3000)\n}\n\ndocument.all.serverError.onclick = () => {\n  setTimeout(() => {\n    pair.right.send(['error', 'wrong-format'])\n  }, 3000)\n}\n\ndocument.all.subprotocolError.onclick = () => {\n  client.node.syncError('wrong-subprotocol', {\n    supported: '2.x',\n    used: '1.0.0'\n  })\n}\n\nif (client.options.subprotocol === '1.0.1') {\n  document.all.subprotocolClient.disabled = true\n} else {\n  document.all.subprotocolClient.onclick = () => {\n    window.open(location.toString() + '#1.0.1', '_blank')\n  }\n}\n","export function track(client, id) {\n  if (client.processing[id]) return client.processing[id][0]\n\n  let resolveCallback, rejectCallback\n  let promise = new Promise((resolve, reject) => {\n    resolveCallback = resolve\n    rejectCallback = reject\n  })\n  client.processing[id] = [promise, resolveCallback, rejectCallback]\n\n  return promise\n}\n","export function attention(client) {\n  let doc = document\n  let originTitle = false\n  let unbind = []\n  let timeout = false\n\n  let restoreTitle = () => {\n    if (originTitle) {\n      doc.title = originTitle\n      originTitle = false\n    }\n  }\n\n  let blink = () => {\n    if (doc.hidden && !originTitle) {\n      originTitle = doc.title\n      doc.title = '* ' + doc.title\n    } else {\n      restoreTitle()\n    }\n\n    if (doc.hidden) timeout = setTimeout(blink, 1000)\n  }\n\n  let tabListener = () => {\n    if (!doc.hidden && timeout) {\n      timeout = clearTimeout(timeout)\n      restoreTitle()\n    }\n  }\n\n  if (doc && typeof doc.hidden !== 'undefined') {\n    unbind.push(\n      client.node.on('error', error => {\n        if (error.type !== 'timeout' && !timeout) {\n          blink()\n        }\n      })\n    )\n\n    unbind.push(\n      client.on('add', action => {\n        if (action.type === 'logux/undo' && action.reason && !timeout) {\n          blink()\n        }\n      })\n    )\n\n    document.addEventListener('visibilitychange', tabListener, false)\n    unbind.push(() => {\n      document.removeEventListener('visibilitychange', tabListener, false)\n    })\n  }\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n","export function favicon(client, links) {\n  let normal = links.normal\n  let offline = links.offline\n  let error = links.error\n\n  let unbind = []\n  let doc = document\n  let fav = false\n  let prevFav = false\n\n  function update() {\n    if (client.connected && prevFav !== normal) {\n      fav.href = prevFav = normal\n    } else if (\n      !client.connected &&\n      offline &&\n      prevFav !== offline &&\n      prevFav !== error\n    ) {\n      fav.href = prevFav = offline\n    }\n  }\n\n  function setError() {\n    if (error && prevFav !== error) {\n      fav.href = prevFav = error\n    }\n  }\n\n  if (doc) {\n    fav = doc.querySelector('link[rel~=\"icon\"]')\n\n    if (typeof normal === 'undefined') {\n      normal = fav ? fav.href : ''\n    }\n\n    if (!fav) {\n      fav = doc.createElement('link')\n      fav.rel = 'icon'\n      fav.href = ''\n      doc.head.appendChild(fav)\n    }\n\n    unbind.push(client.on('state', update))\n    update()\n\n    unbind.push(\n      client.on('add', action => {\n        if (action.type === 'logux/undo' && action.reason) setError()\n      })\n    )\n\n    unbind.push(\n      client.node.on('error', err => {\n        if (err.type !== 'timeout') setError()\n      })\n    )\n  }\n\n  return () => {\n    for (let i of unbind) i()\n  }\n}\n"],"names":["$5ad311c4326249fb$export$40339995e8a21591","$5ad311c4326249fb$export$357eb1b4f03c1402","$5ad311c4326249fb$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$1818f883305f84bb$export$9a730a8aaf9141d1","events","emit","event","args","forEach","on","cb","this","push","filter","$0da77b54c4f17aab$export$737a63ce5df84c38","emitter","action","meta","type","$0da77b54c4f17aab$export$2b5ff101e1b2bb00","opts1","nodeId","lastTime","sequence","store","listener","opts","newId","generateId","time","parseInt","reasons","keepLast","removeReason","olderThan","action2","byId","addedMeta","add","now","Date","each","callback","order","Promise","resolve","nextPage","get","result","page","entries","entry","next","bind","diff","k","remove","k1","changeMeta","reason","criteria","$6ab376aaaecae717$export$313f0143c6409f6","firstMeta","secondMeta","first","split","second","firstNode","secondNode","firstCounter","secondCounter","firstNodeTime","secondNodeTime","$a747cf86cabc7379$export$dd514040aada63ba","url","Class","connected","WebSocket","init","ws","onerror","error","onclose","onmessage","data","connect","undefined","onopen","disconnect","close","send","message","readyState","OPEN","stringify","err","received","$6d0dd0ac40e5579e$var$checkIndex","index","indexes","added","$6d0dd0ac40e5579e$var$forEachIndex","$6d0dd0ac40e5579e$var$isDefined","$6d0dd0ac40e5579e$var$insert","lastAdded","$6d0dd0ac40e5579e$var$eject","start","end","middle","otherAdded","splice","$6d0dd0ac40e5579e$var$find","list","value","$6d0dd0ac40e5579e$export$f84de6322139fbd6","lastReceived","lastSent","otherMeta","indexList","j","findIndex","item","created","indexed","slice","key","removed","reasonPos","indexOf","c","youngerThan","minAdded","maxAdded","removedAdded","map","m","removing","includes","sent","values","$88cce8db9743701b$export$88909670cdf5f76b","options","supported","used","super","name","description","describe","captureStackTrace","$6c6dec5ba1655402$var$auth","node","token","auth","authenticated","remoteHeaders","unauthenticated","onMessage","sendError","destroy","e","$6c6dec5ba1655402$var$checkProtocol","ver","remoteProtocol","minProtocol","$6c6dec5ba1655402$var$emitEvent","$e66d34f7179e9fac$var$NOT_TO_THROW","$e66d34f7179e9fac$var$BEFORE_AUTH","$e66d34f7179e9fac$var$syncMappedEvent","lastAddedCache","outMap","changed","sendSync","$e66d34f7179e9fac$export$d24c13e903cc2330","log","connection","options1","remoteNodeId","remoteSubprotocol","localProtocol","localNodeId","ping","timeout","timeFix","syncing","state","timeouts","throwsError","unbind","onAdd","onConnecting","onConnect","onDisconnect","initialized","initializing","initialize","localHeaders","catch","waitFor","clearTimeout","pingTimeout","endTimeout","setLocalHeaders","headers","sendHeaders","msg","delayPing","setState","outFilter","syncError","startTimeout","ms","setTimeout","shift","sendPing","lastSynced","promises","then","r","all","syncSinceQuery","setLastSent","setLastSynced","setLastReceived","synced","getLastSynced","getLastAdded","sendDuilian","$e66d34f7179e9fac$var$DUILIANS","duilianMessage","line","prototype","sendConnect","subprotocol","fixTime","connectSended","sendConnected","connectMessage","baseTime","syncSince","connectedMessage","authTime","roundTrip","Math","floor","originMeta","unshift","concat","sendSynced","syncMessage","join","process","inMap","meta2","filtered","inFilter","res","syncedMessage","pingMessage","pongMessage","sendDebug","debugMessage","errorMessage","headersMessage","$30bfac2c6e486296$var$DEFAULT_OPTIONS","$30bfac2c6e486296$export$85917111f6daf52d","$69a26299232a6b9f$var$LocalConnection","pair","other","right","left","delay","$d160dea8e349afd0$var$DEFAULT_OPTIONS","minDelay","maxDelay","attempts","Infinity","$d160dea8e349afd0$var$FATAL_ERRORS","$d160dea8e349afd0$export$947a1d70f6576d50","reconnecting","connecting","reconnect","timer","visibility","document","hidden","navigator","onLine","window","addEventListener","removeEventListener","nextDelay","base","rand","random","deviation","min","$4c30b4d6a088305a$export$20998743475a6de6","parts","userId","clientId","$9d1915bcbdc22859$export$9278f117015fcf8e","client","observable","disconnected","wait","old","duration","processing","setSynchronized","changeState","sync","$96c6f34b4fe32994$var$injectStyles","element","styles","style","$96c6f34b4fe32994$var$RESET","boxSizing","textIndent","textTransform","wordSpacing","letterSpacing","fontStyle","fontVariant","fontWeight","lineHeight","$0556d0150478827a$export$8cb0c0ceae301cfc","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","$cdefc849752e734c$export$24f06e2df7fb5d4d","$f2d42f4c3ce269b4$var$ALLOWED_META","$f2d42f4c3ce269b4$var$tabPing","localStorage","setItem","prefix","tabId","$f2d42f4c3ce269b4$var$cleanTabActions","isLocalStorage","removeItem","$6d7561af28840cbb$var$storageKey","$6d7561af28840cbb$var$sendToTabs","json","console","role","$6d7561af28840cbb$var$getLeader","getItem","$6d7561af28840cbb$var$leaderPing","$6d7561af28840cbb$var$onDeadLeader","$6d7561af28840cbb$var$setState","$6d7561af28840cbb$var$startElection","$6d7561af28840cbb$var$watchForLeader","watching","$6d7561af28840cbb$var$isActiveLeader","roleTimeout","$6d7561af28840cbb$var$setRole","leadership","setInterval","unloading","leaderPing","elections","clearInterval","leader","leaderTimeout","electionDelay","$139e999a47daeb7f$var$block","returnValue","$9fae355081740978$var$bold","string","$9fae355081740978$var$showLog","text","details","Array","from","match","_","groupCollapsed","groupEnd","$555acf6fd49af104$exports","URL","import","$31c8fc0d15db1cf4$exports","$8ab891e5b767df55$exports","$89c74d2e369cd42b$exports","$9c28f3bcb213033a$export$b1f1417016a70992","position","width","height","margin","paddingLeft","opacity","borderRadius","color","fontFamily","zIndex","backgroundPosition","backgroundRepeat","backgroundSize","display","verticalAlign","synchronized","backgroundColor","backgroundImage","$parcel$interopDefault","sending","protocolError","$f6b125c1bd9e4ebe$exports","$a892d0287c5587eb$exports","$99d8148e6ffd461a$exports","$e5576044c93d0ddc$var$pair","$e5576044c93d0ddc$var$serverLog","$e5576044c93d0ddc$var$client","cleanPrevActions","resolveCallback","rejectCallback","promise","reject","$68efb329f9484a0f$export$7d87069e7c83a19b","changeUser","wasConnected","getClientId","onUnload","pinging","clean","tabTimeout","lastId","nextLog","resubscribe","last","subscriptions","subscribing","unsubscribing","unsubscription","subscribers","subscription","channel","channels","tabPing","server","async","test","allowDangerousProtocol","unbindEnvTest","env","stack","since","leaderState","onStorage","newValue","tab","isArray","compare","leftParts","rightParts","leftNumber","rightNumber","$6d7561af28840cbb$var$compareSubprotocols","subprotocolKey","location","hash","$e5576044c93d0ddc$var$node","doc","originTitle","restoreTitle","title","blink","tabListener","$a07bf8ad413358cf$export$197f306872c183c7","update","$139e999a47daeb7f$export$23cbf8a279e68c13","links","normal","offline","fav","prevFav","href","setError","querySelector","createElement","rel","head","appendChild","$6ca304f3c87ba5fe$export$a03ba23e48ff78c","messages","widget","setAttribute","top","transform","pos","$96c6f34b4fe32994$var$setPosition","show","innerHTML","denied","body","$96c6f34b4fe32994$export$14b35de56dab357d","prevConnected","cleaned","ignore","ignoreActions","reduce","Action","processed","Meta","From","user","startsWith","$9fae355081740978$export$80d2cc7bee77574a","s","status","innerText","$e5576044c93d0ddc$var$count","$e5576044c93d0ddc$var$updateTitle","checked","disabled","isLeader","onchange","target","onclick","serverError","subprotocolError","subprotocolClient","open"],"version":3,"file":"index.88c45cfd.js.map"}